{"version":3,"file":null,"sources":["../src/common/charts/chart.component.ts","../src/common/trim-label.helper.ts","../src/common/legend.component.ts","../src/common/scale-legend.component.ts","../src/common/axes/axis-label.component.ts","../src/common/axes/x-axis.component.ts","../src/common/axes/ticks.helper.ts","../src/common/axes/x-axis-ticks.component.ts","../src/common/axes/y-axis.component.ts","../src/common/axes/y-axis-ticks.component.ts","../src/common/axes/axes-module.component.ts","../src/common/popover/position.helper.ts","../src/common/popover/popover-registry.service.ts","../src/common/popover/sw-popover.component.ts","../src/utils/object-id.ts","../src/common/circle-series.component.ts","../src/common/circle.component.ts","../src/common/grid-panel.component.ts","../src/common/grid-panel-series.component.ts","../src/common/svg-linear-gradient.component.ts","../src/common/svg-radial-gradient.component.ts","../src/utils/throttle.ts","../src/d3.ts","../src/common/timeline.component.ts","../src/common/area.component.ts","../src/common/common.module.ts","../src/common/view-dimensions.helper.ts","../src/utils/color-sets.ts","../src/common/base-chart.component.ts","../src/area-chart/area-chart.component.ts","../src/area-chart/area-chart-normalized.component.ts","../src/area-chart/area-chart-stacked.component.ts","../src/area-chart/area-series.component.ts","../src/area-chart/area-chart.module.ts","../src/bar-chart/bar.component.ts","../src/common/tick-format.helper.ts","../src/bar-chart/bar-horizontal.component.ts","../src/bar-chart/bar-horizontal-2d.component.ts","../src/bar-chart/bar-horizontal-normalized.component.ts","../src/bar-chart/bar-horizontal-stacked.component.ts","../src/bar-chart/bar-vertical.component.ts","../src/bar-chart/bar-vertical-2d.component.ts","../src/bar-chart/bar-vertical-normalized.component.ts","../src/bar-chart/bar-vertical-stacked.component.ts","../src/bar-chart/date-bar.component.ts","../src/bar-chart/series-horizontal.component.ts","../src/bar-chart/series-vertical.component.ts","../src/bar-chart/bar-chart.module.ts","../src/heat-map/heat-map-cell.component.ts","../src/heat-map/heat-map-cell-series.component.ts","../src/heat-map/heat-map.component.ts","../src/heat-map/heat-map.module.ts","../src/line-chart/line.component.ts","../src/line-chart/line-chart.component.ts","../src/line-chart/line-series.component.ts","../src/line-chart/line-chart.module.ts","../src/number-card/card.component.ts","../src/number-card/card-series.component.ts","../src/common/grid-layout.helper.ts","../src/number-card/number-card.component.ts","../src/number-card/number-card.module.ts","../src/pie-chart/advanced-pie-chart.component.ts","../src/pie-chart/pie-label.component.ts","../src/pie-chart/pie-arc.component.ts","../src/pie-chart/pie-chart.component.ts","../src/pie-chart/pie-grid.component.ts","../src/pie-chart/pie-grid-series.component.ts","../src/pie-chart/pie-series.component.ts","../src/pie-chart/pie-chart.module.ts","../src/tree-map/tree-map-cell.component.ts","../src/tree-map/tree-map-cell-series.component.ts","../src/tree-map/tree-map.component.ts","../src/tree-map/tree-map.module.ts","../src/ng2d3.ts"],"sourcesContent":["import { Component, Input, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'chart',\n  template: `\n    <svg\n      class=\"ng2d3\"\n      [attr.width]=\"view[0] * chartWidth / 12.0\"\n      [attr.height]=\"view[1]\">\n\n      <ng-content></ng-content>\n    </svg>\n\n    <scale-legend\n      *ngIf=\"legend && legendType === 'scaleLegend'\"\n      class=\"legend\"\n      [valueRange]=\"data\"\n      [colors]=\"legendData\"\n      [height]=\"view[1]\">\n    </scale-legend>\n\n    <legend\n      *ngIf=\"legend && legendType === 'legend'\"\n      class=\"legend\"\n      [data]=\"legendData\"\n      [title]=\"legendTitle\"\n      [colors]=\"colors\"\n      [height]=\"view[1]\">\n    </legend>\n`\n})\nexport class Chart implements OnInit, OnChanges {\n  @Input() view;\n  @Input() legend = false;\n  @Input() data;\n  @Input() legendData;\n  @Input() legendTitle = 'Legend';\n  @Input() colors;\n\n  chartWidth: any;\n  title: any;\n  legendWidth: any;\n  legendType: any;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.legendWidth = 0;\n\n    if (this.legend) {\n      this.legendType = this.getLegendType();\n\n      if (this.legendType === 'scaleLegend') {\n        this.legendWidth = 1;\n      } else {\n        this.legendWidth = 3;\n      }\n    }\n\n    this.chartWidth = 12 - this.legendWidth;\n  }\n\n  getLegendType() {\n    if (typeof this.legendData === 'function') {\n      return 'scaleLegend';\n    } else {\n      return 'legend';\n    }\n  }\n}\n","export function trimLabel(s, max = 16): string {\n  if(typeof s !== 'string') {\n    if(typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n\n  if(s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max).trim()}...`;\n  }\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from './trim-label.helper';\n\n@Component({\n  selector: 'legend',\n  template: `\n    <div >\n      <header class=\"legend-title\"\n        style=\"white-space: nowrap; overflow: hidden;\">\n        <span class=\"legend-icon incon-eye-1\"></span>\n        <span class=\"legend-title-text\">{{title}}</span>\n      </header>\n\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" style=\"white-space: nowrap;\">\n          <li *ngFor=\"let legendItem of legendItems\" [class]=\"legendItem.className\">\n            <span\n              [title]=\"legendItem.label\"\n              class=\"legend-label-color\"\n              [style.background-color]=\"colors(legendItem.label)\">\n            </span>\n\n            <span [title]=\"legendItem.label\" class=\"legend-label-text\">\n              {{legendItem.trimmedLabel}}\n            </span>\n\n          </li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class Legend implements OnInit, OnChanges {\n  @Input() data;\n  @Input() title;\n  @Input() colors;\n  @Input() height;\n\n  legendItems: any;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.legendItems = this.getLegendItems();\n  }\n\n  getLegendItems() {\n    return this.data.map((label, index) => {\n      return {\n        className: 'legend-label',\n        label: label,\n        trimmedLabel: trimLabel(label) || '(empty)',\n        backgroundColor: this.colors(label)\n      };\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'scale-legend',\n  template: `\n    <div>\n      <div\n        style=\"padding: 10px 0px; width: 30px; text-align: center;\"\n        [style.height]=\"(height - 40) + 'px'\">\n\n        <div>\n          <span>{{valueRange[0]}}</span>\n        </div>\n\n        <div class=\"legend-wrap\"\n          style=\"height: 100%; width: 100%; border-radius: 5px;\"\n          [style.background]=\"gradient\">\n        </div>\n\n        <div>\n          <span>{{valueRange[1].toFixed()}}</span>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class ScaleLegend implements OnInit {\n  @Input() valueRange;\n  @Input() colors;\n  @Input() height;\n\n  gradient: any;\n\n  ngOnInit() {\n    let gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    this.gradient = `linear-gradient(to bottom, ${gradientValues})`;\n  }\n\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param  {array} colors array of colors\n   * @param  {array} splits array of splits on a scale of (0, 1)\n   * @return {string}\n   */\n  gradientString(colors, splits) {\n    // add the 100%\n    splits.push(1);\n    let pairs = [];\n    colors.forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n\n    return pairs.join(', ');\n  }\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[axisLabel]',\n  template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\">\n      {{label}}\n    </svg:text>\n  `\n})\nexport class AxisLabel implements OnInit, OnChanges {\n  @Input() orient;\n  @Input() label;\n  @Input() offset;\n  @Input() width;\n  @Input() height;\n\n  x: any;\n  y: any;\n  transform: any;\n  strokeWidth: any;\n  textAnchor: any;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n\n    switch (this.orient) {\n      case 'top':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'bottom':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'left':\n        this.y = -this.offset;\n        this.x = -this.height / 2;\n        this.transform = \"rotate(270)\";\n        break;\n      case 'right':\n        this.y = this.offset;\n        this.x = -this.height / 2;\n        this.transform = \"rotate(270)\";\n        break;\n    }\n  }\n\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n// import d3 from '../../d3';\n\n@Component({\n  selector: 'g[xAxis]',\n  template: `\n    <svg:g\n      [attr.class]=\"xAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g xAxisTicks\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n      />\n\n      <svg:g axisLabel\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"80\"\n        [orient]=\"'bottom'\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class XAxis implements OnInit, OnChanges {\n  @Input() xScale;\n  @Input() dims;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() xAxisTickInterval;\n\n  xAxisTickCount: any;\n  xAxisClassName: any;\n  xOrient: any;\n  tickArguments: any;\n  xAxisOffset: any;\n  transform: any;\n\n  constructor() {\n    Object.assign(this, {\n      xAxisClassName: 'x axis',\n      xOrient: 'bottom',\n      fill: 'none',\n      stroke: 'none',\n      tickStroke: '#ccc',\n      strokeWidth: 'none',\n      xAxisOffset: 5,\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.transform = `translate(0,${this.xAxisOffset + this.dims.height})`;\n\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n\n    if (typeof this.xAxisTickInterval !== 'undefined') {\n      // todo we need to change this, because the function names have changed: https://github.com/d3/d3/blob/master/CHANGES.md#time-intervals-d3-time\n      // this.tickArguments = [d3.time[this.xAxisTickInterval.unit], this.xAxisTickInterval.interval];\n    }\n  }\n\n}\n","export function reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    let reduced = [];\n    let modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n\n  return ticks;\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\n\n@Component({\n  selector: 'g[xAxisTicks]',\n  template: `\n    <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n      [attr.transform]=\"tickTransform(tick)\">\n      <title>{{tickFormat(tick)}}</title>\n      <svg:text\n        stroke-width=\"0.01\"\n        [attr.text-anchor]=\"textAnchor\"\n        [attr.transform]=\"textTransform\"\n        [style.font-size]=\"'12px'\">\n        {{trimLabel(tickFormat(tick))}}\n      </svg:text>\n\n      <svg:g\n        *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n\n        <svg:line\n          class=\"gridline-path gridline-path-vertical gridline-path-shadow\"\n          [attr.y1]=\"-gridLineHeight\"\n          y2=\"0\" />\n        <svg:line\n          class=\"gridline-path gridline-path-vertical\"\n          x1=\"1\"\n          x2=\"1\"\n          [attr.y1]=\"-gridLineHeight\"\n          y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class XAxisTicks implements OnInit, OnChanges {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickStroke = '#ccc';\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineHeight;\n  @Input() width;\n\n  verticalSpacing: any;\n  rotateLabels: any;\n  innerTickSize: any;\n  outerTickSize: any;\n  tickPadding: any;\n  textAnchor: any;\n  maxTicksLength: any;\n  maxAllowedLength: number = 16;\n  trimLabel: any;\n  adjustedScale: any;\n  tickValues: any;\n  textTransform: any;\n  ticks: any;\n  tickFormat: any;\n\n  constructor() {\n    Object.assign(this, {\n      innerTickSize: 6,\n      outerTickSize: 6,\n      tickPadding: 3,\n      rotateLabels: false,\n      verticalSpacing: 20,\n      textAnchor: 'middle',\n      maxTicksLength: 0,\n      trimLabel: trimLabel\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    var scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        return d;\n      };\n    }\n\n    let angle = this.getRotationAngle(this.ticks);\n\n    this.adjustedScale = this.scale.bandwidth ? function(d) {\n      return this.scale(d) + this.scale.bandwidth() * 0.5;\n    } : this.scale;\n\n    this.textTransform = '';\n    if (angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = 'end';\n      this.verticalSpacing = 10;\n    }\n  }\n\n  getRotationAngle(ticks) {\n    let angle = 0;\n    for (var i = 0; i < ticks.length; i++) {\n      let tick = ticks[i].toString();\n      if (tick.length > this.maxTicksLength) {\n        this.maxTicksLength = tick.length;\n      }\n    }\n\n    let len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    let charWidth = 8; // need to measure this\n    let wordWidth = len * charWidth;\n\n    let baseWidth = wordWidth;\n    let maxBaseWidth = Math.floor(this.width / ticks.length);\n\n    // calculate optimal angle\n    while(baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n\n    return angle;\n  }\n\n  getTicks() {\n    let ticks;\n    let maxTicks = this.getMaxTicks();\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\n      if (ticks.length > maxTicks) {\n        if (this.tickArguments) {\n          this.tickArguments[0] = Math.min(this.tickArguments[0], maxTicks);\n        } else {\n          this.tickArguments = [maxTicks];\n        }\n        ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\n      }\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n\n  getMaxTicks() {\n    let tickWidth = 20;\n    return Math.floor(this.width / tickWidth);\n  }\n\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform() {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n// import d3 from '../../d3';\n\n@Component({\n  selector: 'g[yAxis]',\n  template: `\n    <svg:g\n      [attr.class]=\"yAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g yAxisTicks\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [height]=\"dims.height\"\n      />\n\n      <svg:g axisLabel\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"80\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class YAxis implements OnInit, OnChanges {\n  @Input() yScale;\n  @Input() dims;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() yAxisTickInterval;\n\n  yAxisTickCount: any;\n  tickArguments: any;\n  offset: any;\n  transform: any;\n  yAxisOffset: any;\n  yOrient: any;\n\n  constructor() {\n    Object.assign(this, {\n      yAxisClassName: 'y axis',\n      yOrient: 'left',\n      fill: 'none',\n      stroke: '#ccc',\n      tickStroke: '#ccc',\n      strokeWidth: '1',\n      yAxisOffset: -5,\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.offset = this.yAxisOffset;\n    if (this.yOrient === 'right') {\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n\n    if (typeof this.yAxisTickInterval !== 'undefined') {\n      // todo we need to change this, because the function names have changed: https://github.com/d3/d3/blob/master/CHANGES.md#time-intervals-d3-time\n      // this.tickArguments = [d3.time[this.yAxisTickInterval.unit], this.yAxisTickInterval.interval];\n    }\n  }\n\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\n\n@Component({\n  selector: 'g[yAxisTicks]',\n  template: `\n    <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n      [attr.transform]=\"transform(tick)\" >\n      <title>{{tickFormat(tick)}}</title>\n      <svg:text\n        stroke-width=\"0.01\"\n        [attr.dy]=\"dy\"\n        [attr.x]=\"x1\"\n        [attr.y]=\"y1\"\n        [attr.text-anchor]=\"textAnchor\"\n\n        [style.font-size]=\"'12px'\">\n        {{trimLabel(tickFormat(tick))}}\n      </svg:text>\n\n      <svg:g\n        *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n\n        <svg:line\n          class=\"gridline-path gridline-path-horizontal gridline-path-shadow\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\" />\n        <svg:line\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          y1=\"1\"\n          y2=\"1\" />\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class YAxisTicks implements OnInit, OnChanges {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues;\n  @Input() tickStroke = '#ccc';\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() height;\n\n  innerTickSize: any;\n  tickPadding: any;\n  tickSpacing: any;\n  verticalSpacing: any;\n  textAnchor: any;\n  dy: any;\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n  adjustedScale: any;\n  transform: any;\n  tickFormat: any;\n  ticks: any;\n\n  constructor() {\n    Object.assign(this, {\n      innerTickSize: 6,\n      outerTickSize: 6,\n      tickPadding: 3,\n      rotateLabels: false,\n      verticalSpacing: 20,\n      textAnchor: 'middle',\n      trimLabel: trimLabel\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    var scale;\n\n    var sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n\n    scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        return d;\n      };\n    }\n\n    this.adjustedScale = scale.bandwidth ? function(d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n\n    switch (this.orient) {\n      case \"top\":\n        this.transform = function(tick) {\n          return \"translate(\" + this.adjustedScale(tick) + \",0)\";\n        };\n        this.textAnchor = \"middle\";\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? \"0em\" : \".71em\";\n        break;\n      case \"bottom\":\n        this.transform = function(tick) {\n          return \"translate(\" + this.adjustedScale(tick) + \",0)\";\n        };\n        this.textAnchor = \"middle\";\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? \"0em\" : \".71em\";\n        break;\n      case \"left\":\n        this.transform = function(tick) {\n          return \"translate(0,\" + this.adjustedScale(tick) + \")\";\n        };\n        this.textAnchor = \"end\";\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = \".32em\";\n        break;\n      case \"right\":\n        this.transform = function(tick) {\n          return \"translate(0,\" + this.adjustedScale(tick) + \")\";\n        };\n        this.textAnchor = \"start\";\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = \".32em\";\n        break;\n    }\n  }\n\n  getTicks() {\n    let ticks;\n    let maxTicks = this.getMaxTicks();\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\n      if (ticks.length > maxTicks) {\n        if (this.tickArguments) {\n          this.tickArguments[0] = Math.min(this.tickArguments[0], maxTicks);\n        } else {\n          this.tickArguments = [maxTicks];\n        }\n        ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\n      }\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks() {\n    let tickHeight = 20;\n    return Math.floor(this.height / tickHeight);\n  }\n\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform() {\n    return `translate(0,${this.verticalSpacing})`;\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {AxisLabel} from \"./axis-label.component\";\nimport {XAxis} from \"./x-axis.component\";\nimport {XAxisTicks} from \"./x-axis-ticks.component\";\nimport {YAxis} from \"./y-axis.component\";\nimport {YAxisTicks} from \"./y-axis-ticks.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n@NgModule({\n  imports: [BrowserModule],\n  declarations: [AxisLabel, XAxis, XAxisTicks, YAxis, YAxisTicks],\n  exports: [AxisLabel, XAxis, XAxisTicks, YAxis, YAxisTicks]\n})\nexport class AxesModule {}\n","let caretOffset = 6;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  let result;\n  if (alignment === 'top') {\n    result = elDimensions.top - caretOffset;\n  }\n  if (alignment === 'bottom') {\n    result = elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n  if (alignment === 'center') {\n    result = elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n  return result;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  let result;\n  if (alignment === 'left') {\n    return elDimensions.left - caretOffset;\n  }\n  if (alignment === 'right') {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n  if (alignment === 'center') {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n  return result;\n}\n\n/**\n * Position helper for the popover directive.\n */\nexport class PositionHelper {\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n\n    return result;\n  }\n\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === 'top') {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 - 1 + caretOffset;\n    }\n    if (alignment === 'bottom') {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - 1 - caretOffset;\n    }\n    if (alignment === 'center') {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2 - 1;\n    }\n\n    let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += (popoverPosition + popoverDimensions.height - window.innerHeight);\n    }\n\n    return result;\n  }\n\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n\n    return result;\n  }\n\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === 'left') {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 - 1 + caretOffset;\n    }\n    if (alignment === 'right') {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - 1 - caretOffset;\n    }\n    if (alignment === 'center') {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2 - 1;\n    }\n\n    let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += (popoverPosition + popoverDimensions.width - window.innerWidth);\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if the element's position should be flipped\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, alignment, spacing) {\n    let flip = false;\n    if (placement === 'right') {\n      let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'left') {\n      let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'top') {\n      let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'bottom') {\n      let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n\n    return flip;\n  }\n}\n","/**\n * Registering to deal with popovers\n */\nexport class PopoverRegistry {\n  private static _instance: PopoverRegistry = new PopoverRegistry();\n\n  popovers: any;\n  instance: any;\n\n  constructor() {\n    \"ngInject\";\n\n    if (PopoverRegistry._instance) {\n      throw new Error(\"Error: Instantiation failed: Use PopoverRegistry.getInstance() instead of new.\");\n    }\n    PopoverRegistry._instance = this;\n\n    this.popovers = {};\n\n    setInterval(this.cleanUp.bind(this), 1000);\n  }\n\n  public static getInstance() {\n    return PopoverRegistry._instance;\n  }\n\n  add(id, object) {\n    this.popovers[id] = object;\n  }\n\n  find(id) {\n    return this.popovers[id];\n  }\n\n  remove(id) {\n    if (!this.popovers[id]) {\n      return;\n    }\n\n    if (this.popovers[id].popoverScope) {\n      this.popovers[id].popoverScope.$destroy();\n    }\n\n    if (this.popovers[id].popover) {\n      this.popovers[id].popover.remove();\n    }\n\n    delete this.popovers[id];\n  }\n\n  removeGroup(group, currentId) {\n    let ids = Object.keys(this.popovers);\n    for (let id of ids) {\n\n      let popoverOb = this.popovers[id];\n      if (!popoverOb) {\n        continue;\n      }\n\n      if (id === currentId) {\n        return;\n      }\n\n      if (popoverOb.group && popoverOb.group === group) {\n        popoverOb.popover.removeClass('sw-popover-animation');\n        setTimeout(() => {\n          popoverOb.popover.remove();\n          if (popoverOb.popoverScope) {\n            popoverOb.popoverScope.$destroy();\n          }\n          delete this.popovers[id];\n        }, 50);\n      }\n    }\n  }\n\n  /**\n   * Deletes orphan popovers whose elements are no longer present\n   * in the document\n   */\n  cleanUp() {\n    let ids = Object.keys(this.popovers);\n    for (let id of ids) {\n      let element = this.popovers[id].element;\n      if (element && element[0]) {\n        element = element[0];\n      }\n      if (element && !document.contains(element)) {\n        this.remove(id);\n      }\n    }\n  }\n}\n","import { Directive, Input, ElementRef, Renderer, ViewChild, ViewContainerRef, OnInit, OnDestroy } from '@angular/core';\nimport { PositionHelper } from './position.helper';\nimport { PopoverRegistry } from './popover-registry.service';\n// import './popover.scss';\n\n@Directive({\n  selector: '[sw-popover]'\n})\nexport class Popover implements OnInit, OnDestroy {\n  element: ElementRef;\n  renderer: Renderer;\n  mouseEnterListener: Function;\n  mouseLeaveListener: Function;\n  exitTimeout: any;\n  options: any;\n  popoverCssClass: any;\n  popoverPlain: any;\n  popoverId: any;\n  popover: any;\n  popoverRegistry: PopoverRegistry;\n\n  @ViewChild('parent', {read: ViewContainerRef})\n  parent: ViewContainerRef;\n\n  @Input() popoverText;\n  @Input() popoverTemplate;\n  @Input() popoverPlacement = 'top';\n  @Input() popoverAlignment = 'center';\n  @Input() popoverGroup;\n  @Input() popoverSpacing = 0;\n  @Input() showCaret = true;\n\n  constructor(element: ElementRef, renderer: Renderer) {\n    this.element = element.nativeElement;\n    this.renderer = renderer;\n\n    // attach exit and enter events to element\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n    this.mouseEnterListener = this.renderer.listen(this.element, 'mouseenter', this.display.bind(this));\n\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n    this.mouseLeaveListener = this.renderer.listen(this.element, 'mouseleave', this.mouseOut.bind(this));\n  }\n\n  ngOnInit() {\n    this.popoverRegistry = PopoverRegistry.getInstance();\n  }\n\n  mouseOut() {\n    this.exitTimeout = setTimeout(this.remove.bind(this), 200);\n  };\n\n  /**\n   * Displays the popover on the page\n   */\n  display() {\n    // TODO: Do not use angular.element\n\n    // this.options = {\n    //   text: this.popoverText,\n    //   cssClass: this.popoverCssClass,\n    //   template: this.popoverTemplate,\n    //   plain: this.toBoolean(this.popoverPlain || false),\n    //   placement: this.popoverPlacement || 'right',\n    //   alignment: this.popoverAlignment  || 'center',\n    //   group: this.popoverGroup,\n    //   spacing: parseInt(this.popoverSpacing.toString()) || 0,\n    //   showCaret: this.toBoolean(this.popoverPlain || true)\n    // };\n    //\n    // // Cancel exit timeout\n    // clearTimeout(this.exitTimeout);\n    // if (this.popoverId){\n    //   var elm = angular.element(`#sw-${this.popoverId}`);\n    //   if (this.popover && elm.length) return;\n    // }\n    //\n    // // remove other popovers from the same group\n    // if (this.options.group){\n    //   this.popoverRegistry.removeGroup(this.options.group, this.popoverId);\n    // }\n    //\n    // if (this.options.text && !this.options.template){\n    //   this.popoverId = Date.now();\n    //   this.popover = angular.element(`\n    //     <div\n    //       class=\"sw-popover sw-popover-text sw-popover-${this.options.placement} ${this.options.cssClass}\"\n    //       id=\"sw-${this.popoverId}\">\n    //     </div>\n    //   `);\n    //\n    //   this.popover.html(this.options.text);\n    //   angular.element(document.body).append(this.popover);\n    //   this.checkFlip(this.element, this.popover, this.options);\n    //   this.positionPopover(this.element, this.popover, this.options);\n    //   this.popoverRegistry.add(this.popoverId, {element: this.element, popover: this.popover, group: this.options.group});\n    //\n    // }\n  };\n\n  /**\n   * Removes the popover from the registry and page\n   */\n  remove() {\n    if (this.popover) {\n      this.popover.remove();\n    }\n\n    this.popoverRegistry.remove(this.popoverId);\n    this.popover = undefined;\n  };\n\n  /**\n   * Checks if the popover's position should be flipped on the other side of\n   * the element and flips it\n   */\n  checkFlip(triggerElement, popover, options) {\n    var elDimensions = triggerElement.getBoundingClientRect(),\n        popoverDimensions = popover[0].getBoundingClientRect();\n\n    if (PositionHelper.shouldFlip(elDimensions, popoverDimensions, options.placement, options.alignment, options.spacing)) {\n      if (options.placement === 'right') {\n        options.placement = 'left';\n      } else if (options.placement === 'left') {\n        options.placement = 'right';\n      } else if (options.placement === 'top') {\n        options.placement = 'bottom';\n      } else if (options.placement === 'bottom') {\n        options.placement = 'top';\n      }\n    }\n  };\n\n  /**\n   * Positions the popover\n   * @param  {object} triggerElement\n   * @param  {object} popover\n   * @param  {object} options\n   */\n  positionPopover(triggerElement, popover, options) {\n    var elDimensions = triggerElement.getBoundingClientRect(),\n        popoverDimensions = popover[0].getBoundingClientRect(),\n        top, left;\n\n    if (options.placement === 'right') {\n      left = elDimensions.left + elDimensions.width + options.spacing;\n      top = PositionHelper.calculateVerticalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n    if (options.placement === 'left') {\n      left = elDimensions.left - popoverDimensions.width - options.spacing;\n      top = PositionHelper.calculateVerticalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n    if (options.placement === 'top') {\n      top = elDimensions.top - popoverDimensions.height - options.spacing;\n      left = PositionHelper.calculateHorizontalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n    if (options.placement === 'bottom') {\n      top = elDimensions.top + elDimensions.height + options.spacing;\n      left = PositionHelper.calculateHorizontalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n\n    popover.css({\n      top: top + 'px',\n      left: left + 'px'\n    });\n\n    if(this.options.showCaret) {\n      this.addCaret(this.popover, elDimensions, popoverDimensions);\n    }\n\n    this.popover.addClass('sw-popover-animation');\n  };\n\n  /**\n   * Adds a caret and positions it relatively to the popover\n   * @param {object} popoverEl\n   * @param {object} elDimensions\n   * @param {object} popoverDimensions\n   */\n  addCaret(popoverEl, elDimensions, popoverDimensions) {\n    // TODO: do not use angular.element\n    // if (!popoverEl){\n    //   return;\n    // }\n    // var caret = angular.element(`<span class=\"popover-caret caret-${this.options.placement}\"></span>`);\n    // popoverEl.append(caret);\n    // var caretDimensions = caret[0].getBoundingClientRect();\n    //\n    // var left, top;\n    // if (this.options.placement === 'right'){\n    //   left = -6;\n    //   top =PositionHelper.calculateVerticalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    // if (this.options.placement === 'left'){\n    //   left = popoverDimensions.width - 2;\n    //   top = PositionHelper.calculateVerticalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    // if (this.options.placement === 'top'){\n    //   top = popoverDimensions.height - 5;\n    //   left = PositionHelper.calculateHorizontalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    //\n    // if (this.options.placement === 'bottom'){\n    //   top = -8;\n    //   left = PositionHelper.calculateHorizontalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    //\n    // caret.css({\n    //   top: top + 'px',\n    //   left: left + 'px'\n    // });\n  };\n\n  /**\n   * Determines a boolean given a value\n   * @param  {object} value\n   * @return {boolean}\n   */\n  toBoolean(value) {\n    if (value && value.length !== 0) {\n      var v = (\"\" + value).toLowerCase();\n      value = (v === 'true');\n    } else {\n      value = false;\n    }\n    return value;\n  };\n\n  ngOnDestroy() {\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n\n    this.remove();\n  }\n}\n","// Ensure we don't duplicate ids\n// during our session\nlet cache = {};\n\n/**\n * Unique Object ID Generation.\n * Example: `571785e57b215b3968f25c3c`\n */\nexport default function ObjectId() {\n  /* tslint:disable:no-bitwise */\n  const timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n  const id = timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n      return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n  /* tslint:enable */\n\n  // ensure not already used\n  if (!cache[id]) {\n    cache[id] = true;\n    return id;\n  }\n\n  return ObjectId();\n};\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\n\n@Component({\n  selector: 'g[circleSeries]',\n  template: `\n    <svg:g *ngFor=\"let circle of circles\">\n      <svg:rect\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"color\"\n        class=\"tooltip-bar\"\n        style=\"pointerEvents: 'none'; opacity: 0;\"\n      />\n\n      <svg:g circle\n        [attr.class]=\"className\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"color\"\n        [stroke]=\"strokeColor\"\n        [pointerEvents]=\"circle.value === 0 ? 'none': 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (clickHandler)=\"click($event, circle.label)\"\n      />\n    </svg:g>\n  `\n})\nexport class CircleSeries implements OnInit, OnChanges {\n  areaPath: any;\n  circles: any[];\n\n  @Input() data;\n  @Input() type = 'standard';\n  @Input() xScale;\n  @Input() yScale;\n  @Input() color;\n  @Input() strokeColor;\n  @Input() scaleType;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    // TODO: do this filtering before passing the data down here\n    // if (this.scaleType === 'time') {\n    //   this.data = this.data.filter(d => {\n    //     return d.vals[0].label[0][0] !== 'No Value' && d.vals[0].label[0][0] !== 'Other'\n    //       && d.vals[0].label[0][1] !== 'No Value' && d.vals[0].label[0][1] !== 'Other';\n    //   });\n    // }\n\n    this.circles = this.getCircles();\n  }\n\n  getCircles() {\n    return this.data.series.map((d, i) => {\n      let value = d.value;\n      let label = d.name;\n\n\n      if (value) {\n        let cx;\n        if (this.scaleType === 'time') {\n          cx = this.xScale(moment(label).toDate());\n        } else if (this.scaleType === 'linear') {\n          cx = this.xScale(Number(label));\n        } else {\n          cx = this.xScale(label);\n        }\n\n        let cy = this.yScale(this.type === 'standard' ? value : d.d1);\n        let radius = 5;\n        let height = this.yScale.range()[0] - cy;\n\n        // TODO: figure out if this is needed here\n        let gradientIdRect = 'grad' + ObjectId().toString();\n\n        return {\n          classNames: [`circle-data-${i}`],\n          value: value,\n          label: label,\n          cx: cx,\n          cy: cy,\n          radius: radius,\n          height: height,\n          gradientIdRect: gradientIdRect\n        };\n      }\n    }).filter((circle) => circle !== undefined);\n  }\n\n  click(value, label) {\n    this.clickHandler.emit({\n      name: label,\n      value: value\n    });\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[circle]',\n  template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n      (click)=\"click()\"\n    />\n  `\n})\nexport class Circle implements OnInit {\n  @Input() cx;\n  @Input() cy;\n  @Input() r;\n  @Input() fill;\n  @Input() stroke;\n  @Input() data;\n  @Input() classNames;\n  @Input() circleOpacity;\n  @Input() pointerEvents;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.classNames = this.classNames.join(' ') + 'circle';\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'g[gridPanel]',\n  template: `\n    <svg:rect\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      stroke=\"none\"\n      [attr.fill]=\"fill\"\n      class=\"gridpanel\"\n    />\n  `\n})\nexport class GridPanel {\n  @Input() path;\n  @Input() fill;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[gridPanelSeries]',\n  template: `\n    <svg:g gridPanel *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [fill]=\"gridPanel.color\">\n    </svg:g>\n  `\n})\nexport class GridPanelSeries implements OnInit {\n  gridPanels: any[];\n\n  @Input() data;\n  @Input() dims;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() orient;\n\n  ngOnInit() {\n    this.gridPanels = this.getGridPanels();\n  }\n\n  getGridPanels() {\n    return this.data.map((d, i) => {\n      let color = 'rgba(255,255,255,0.02)';\n      let offset, width, height, x, y;\n\n      if (this.orient === 'vertical') {\n        let position = this.xScale(d.name);\n        let positionIndex = this.xScale.range().indexOf(position);\n        if (positionIndex % 2 === 1) {\n          color = 'rgba(255,255,255,0)';\n        }\n        offset = this.xScale.range()[0] / 2;\n        width = this.xScale.bandwidth() + 2 * offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        let position = this.yScale(d.name);\n        let positionIndex = this.yScale.range().indexOf(position);\n        if (positionIndex % 2 === 1) {\n          color = 'rgba(255,255,255,0)';\n        }\n        offset = this.yScale.range()[0] / 2;\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + 2 * offset;\n        x = 0;\n        y = this.yScale(d.name) - offset;\n      }\n\n      return {\n        name: d.name,\n        color: color,\n        offset: offset,\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      };\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[svgLinearGradient]',\n  template: `\n    <svg:linearGradient\n      [id]=\"name\"\n      [attr.x1]=\"x1\"\n      [attr.y1]=\"y1\"\n      [attr.x2]=\"x2\"\n      [attr.y2]=\"y2\">\n      <svg:stop\n        [attr.offset]=\"'0%'\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"startOpacity\"\n      />\n      <svg:stop\n        [attr.offset]=\"'100%'\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"endOpacity\"\n      />\n    </svg:linearGradient>\n  `\n})\nexport class SvgLinearGradient implements OnInit {\n  @Input() orientation = 'vertical';\n  @Input() color;\n  @Input() name;\n  @Input() startOpacity;\n  @Input() endOpacity = 1;\n\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n\n  ngOnInit() {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    // unused variables\n    // let startOpacity = this.startOpacity;\n    // let endOpacity = this.endOpacity;\n\n    if (this.orientation === 'horizontal') {\n      this.x2 = '100%';\n    } else if (this.orientation === 'vertical') {\n      this.y1 = '100%';\n    }\n\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[svgRadialGradient]',\n  template: `\n    <svg:radialGradient\n      [id]=\"name\"\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      gradient-units=\"userSpaceOnUse\">\n      <svg:stop\n        offset=\"0%\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"startOpacity\"\n      />\n      <svg:stop\n        offset=\"100%\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"endOpacity\"\n      />\n    </svg:radialGradient>\n  `\n})\nexport class SvgRadialGradient implements OnInit {\n  cx: number;\n  cy: number;\n  r: string;\n\n  @Input() color;\n  @Input() name;\n  @Input() startOpacity;\n  @Input() endOpacity = 1;\n\n  ngOnInit() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r = \"30%\";\n  }\n}\n","﻿export function debounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n  return function() {\n    context = this;\n    args = arguments;\n    timestamp = new Date();\n    var later = function() {\n      var last: any = new Date().getTime() - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n        }\n      }\n    };\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    if (callNow) {\n      result = func.apply(context, args);\n    }\n    return result;\n  };\n}\n\n/**\n * Debounce decorator\n *\n *  class MyClass {\n *    debounceable(10)\n *    myFn() { ... }\n *  }\n */\nexport function debounceable(duration, immediate) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: debounce(descriptor.value, duration, immediate)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n\nexport function throttle(func, wait, options: any = {}) {\n  var context, args, result;\n  var timeout = null;\n  var previous: any = 0;\n  var later = function() {\n    previous = options.leading === false ? 0 : new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  };\n  return function() {\n    var now = new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    var remaining: any = wait - (now.getTime() - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","/// <reference path=\"../node_modules/awesome-typescript-loader/lib/runtime.d.ts\" />\n\nlet array = require(\"d3-array\");\nlet brush = require(\"d3-brush\");\nlet color = require(\"d3-color\");\nlet format = require(\"d3-format\");\nlet interpolate = require(\"d3-interpolate\");\nlet scales = require(\"d3-scale\");\nlet selection = require(\"d3-selection\");\nlet shape = require(\"d3-shape\");\n\nexport default {\n  arc: shape.arc,\n  area: shape.area,\n  brush: brush.brush,\n  brushX: brush.brushX,\n  brushY: brush.brushY,\n  extent: array.extent,\n  format: format.format,\n  interpolate: interpolate.interpolate,\n  line: shape.line,\n  max: array.max,\n  min: array.min,\n  mouse: selection.mouse,\n  pie: shape.pie,\n  range: array.range,\n  rgb: color.rgb,\n  select: selection.select,\n  selectAll: selection.selectAll,\n  scaleBand: scales.scaleBand,\n  scaleLinear: scales.scaleLinear,\n  scaleOrdinal: scales.scaleOrdinal,\n  scalePoint: scales.scalePoint,\n  scaleQuantile: scales.scaleQuantile,\n  scaleTime: scales.scaleTime,\n  treemap: shape.treemap\n};\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport moment = require(\"moment\");\nimport { throttle } from \"../utils/throttle\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[timeline]',\n  template: `\n    <svg:g\n      [attr.transform]=\"transform\">\n\n      <svg:g xAxis\n        [xScale]=\"xScale\"\n        [dims]=\"dims\"\n        [showGridLines]=\"showGridLines\"\n      />\n\n      <svg:g class=\"x brush\">\n      </svg:g>\n\n    </svg:g>\n  `\n})\nexport class Timeline implements OnInit {\n  element: HTMLElement;\n  dims: any;\n  xScale: any;\n  brush: any;\n  transform: string;\n\n  @Input() view;\n  @Input() state;\n  @Input() results;\n  @Input() scheme;\n  @Input() margin = [10, 20, 70, 20];\n  @Input() customColors;\n  @Input() legend;\n  @Input() miniChart;\n  @Input() autoScale;\n\n  @Output() clickHandler = new EventEmitter();\n  @Output() updateXDomain = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.dims = this.calculateDims();\n    let offsetY = this.view[1] - 150;\n    let results = this.results;\n\n    results.series[0] = results.series[0].sort((a, b) => {\n      return results.d0Domain.indexOf(a.vals[0].label[0][0]) - results.d0Domain.indexOf(b.vals[0].label[0][0]);\n    });\n\n    let yScale = d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(results.m0Domain);\n\n    if (!this.autoScale) {\n      yScale.domain([0, results.m0Domain[1]]);\n    }\n\n    this.xScale = this.calculateXScale();\n    this.transform = `translate(${ this.margin[3] } , ${ this.margin[0] + offsetY })`;\n\n    this.addBrush();\n  }\n\n  addBrush() {\n    if (this.state.brush) {\n      this.brush = this.state.brush;\n    } else {\n      this.brush = d3.brushX(this.state.xScale) // todo need to check if it's working, haven't used brush with d3 v4 yet\n        .on(\"brush\", throttle(() => {\n          var newDomain = this.brush.empty() ? this.state.xScale.domain() : this.brush.extent();\n          this.updateXDomain.emit(newDomain);\n        }, 100));\n\n      // todo fix missing function\n      // this.setState({\n      //   brush: this.brush\n      // });\n    }\n\n    let height = 150 - this.margin[0] - this.margin[2];\n    let width = this.view[0];\n    if (this.legend) {\n      width = width * 9 / 12.0;\n    }\n    width = width - this.margin[1] - this.margin[3];\n\n    d3.select(this.element)\n      .select('.brush')\n      .call(this.brush)\n      .selectAll(\"rect\")\n      .attr(\"y\", 0)\n      .attr(\"height\", height);\n\n    d3.select(this.element)\n      .selectAll('.background')\n      .attr('width', width);\n  }\n\n  calculateXScale() {\n    let xScale;\n    let domain = d3.extent(this.results.d0Domain, function(d) {\n      return moment(d).toDate();\n    });\n    if (this.state.xScale) {\n      xScale = this.state.xScale;\n\n    } else {\n      xScale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(domain);\n    }\n\n    if (xScale.domain() !== domain) {\n      xScale.domain(domain);\n    }\n\n    return xScale;\n  }\n\n  calculateDims() {\n    let width = this.view[0];\n    let height = 150;\n\n    if (this.legend) {\n      width = width * 9 / 12.0;\n    }\n\n    let dims = {\n      width: width - this.margin[1] - this.margin[3],\n      height: height - this.margin[0] - this.margin[2]\n    };\n    return dims;\n  }\n\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[area]',\n  template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g svgLinearGradient\n        [color]=\"fill\"\n        orientation=\"vertical\"\n        [name]=\"gradientId\"\n        [startOpacity]=\"startOpacity\"\n        [endOpacity]=\"endOpacity\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"area\"\n      [attr.d]=\"path\"\n      [attr.fill]=\"gradient ? gradientFill : fill\"\n      [attr.opacity]=\"opacity\"\n    />\n  `\n})\nexport class Area implements OnInit, OnChanges {\n  element: HTMLElement;\n  gradientId: string;\n  gradientFill: string;\n\n  @Input() data;\n  @Input() path;\n  @Input() startingPath;\n  @Input() fill;\n  @Input() opacity = 1;\n  @Input() startOpacity = 0.5;\n  @Input() endOpacity = 1;\n  @Input() activeLabel;\n  @Input() gradient: boolean = false;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n\n        let pageUrl = window.location.href;\n        this.gradientId = 'grad' + ObjectId().toString();\n        this.gradientFill = `url(${pageUrl}#${this.gradientId})`;\n\n        this.loadAnimation();\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).select('.area');\n\n    node\n      .attr('d', this.startingPath);\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.area');\n\n    node.transition().duration(750)\n      .attr('d', this.path);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Chart } from \"./charts/chart.component\";\nimport { Legend } from \"./legend.component\";\nimport { ScaleLegend } from \"./scale-legend.component\";\nimport { AxesModule } from \"./axes/axes-module.component\";\nimport { Popover } from \"./popover/sw-popover.component\";\nimport { CircleSeries } from \"./circle-series.component\";\nimport { Circle } from \"./circle.component\";\nimport { GridPanel } from \"./grid-panel.component\";\nimport { GridPanelSeries } from \"./grid-panel-series.component\";\nimport { SvgLinearGradient } from \"./svg-linear-gradient.component\";\nimport { SvgRadialGradient } from \"./svg-radial-gradient.component\";\nimport { Timeline } from \"./timeline.component\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { Area } from \"./area.component\";\n\nconst COMPONENTS = [\n  Area,\n  Chart,\n  Legend,\n  ScaleLegend,\n  Circle,\n  Popover,\n  CircleSeries,\n  GridPanel,\n  GridPanelSeries,\n  SvgLinearGradient,\n  SvgRadialGradient,\n  Timeline\n];\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AxesModule\n  ],\n  declarations: [\n    ...COMPONENTS\n  ],\n  exports: [\n    BrowserModule,\n    AxesModule,\n    ...COMPONENTS\n  ]\n})\nexport class CommonModule {\n}\n","export interface ViewDimensions {\n  width: number;\n  height: number;\n  xOffset: number;\n}\n\nexport function calculateViewDimensions(view, margins, showXLabel, showYLabel, showLegend, columns = 12): ViewDimensions {\n  let width = view[0];\n  let height = view[1];\n  let xOffset = margins[3];\n  // let yOffset = margins[0]; // unused\n  if (showLegend) {\n    width = width * columns / 12;\n  }\n\n  width = width - margins[1] - margins[3];\n  height = height - margins[0] - margins[2];\n\n  if (showXLabel) {\n    height -= 40;\n  }\n\n  if (showYLabel) {\n    width -= 60;\n    xOffset += 60;\n  }\n\n  width = Math.max(0, width);\n  height = Math.max(0, height);\n\n  return {width: width, height: height, xOffset: xOffset};\n}\n","import d3 from '../d3';\n\nexport var colorSets = [\n  {\n    'name': 'flame',\n    'base': '#590012', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n  },\n  {\n    'name': 'ocean',\n    'base': '#0340B9', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n  },\n  {\n    'name': 'forest',\n    'base': '#258203', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n  },\n  {\n    'name': 'horizon',\n    'base': '#026CCB', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n  },\n  {\n    'name': 'neons',\n    'base': '#B20000', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n  },\n  {\n    'name': 'picnic',\n    'base': '#A37C00', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n  },\n  {\n    'name': 'night',\n    'base': '#48025F',\n    'group': 'general',\n    'domain': [\"#2B1B5A\", \"#501356\", \"#183356\", \"#28203F\", \"#391B3C\", \"#1E2B3C\", \"#120634\", \"#2D0432\", \"#051932\", \"#453080\", \"#75267D\", \"#2C507D\", \"#4B3880\", \"#752F7D\", \"#35547D\"]\n  },\n  {\n    'name': 'nightLights',\n    'base': '#4e31a5',\n    'group': 'general',\n    'domain': [\"#4e31a5\", \"#9c25a7\", \"#3065ab\", \"#57468b\", \"#904497\", \"#46648b\", \"#32118d\", \"#a00fb3\", \"#1052a2\", \"#6e51bd\", \"#b63cc3\", \"#6c97cb\", \"#8671c1\", \"#b455be\", \"#7496c3\"]\n  },\n\n  {\n    'name': 'yellowGreen',\n    'group': 'gradient',\n    'domain': [\"#f7fcb9\", \"#addd8e\", \"#31a354\"]\n  },\n\n  {\n    'name': 'purpleRed',\n    'group': 'gradient',\n    'domain': [\"#e7e1ef\", \"#c994c7\", \"#dd1c77\"]\n  },\n\n  {\n    'name': 'yellowGreenBlue',\n    'group': 'gradient',\n    'domain': [\"#edf8b1\", \"#7fcdbb\", \"#2c7fb8\"]\n  },\n\n];\n\nexport function generateColorScale(scheme, type, domain) {\n  if (typeof(scheme) === 'string') {\n    scheme = colorSets.find(cs => {\n      return cs.name === scheme;\n    });\n  }\n  let colorScale;\n  if (type === 'quantile') {\n    colorScale = d3.scaleQuantile()\n      .range(scheme.domain)\n      .domain(domain);\n\n  } else if (type === 'ordinal') {\n    colorScale = d3.scaleOrdinal()\n      .range(scheme.domain)\n      .domain(domain);\n\n  } else if (type === 'linear') {\n    colorScale = d3.scaleLinear()\n      .domain(d3.range(0, 1, 1.0 / (scheme.domain.length - 1)))\n      .range(scheme.domain);\n  }\n\n  return colorScale;\n}\n\nexport function colorHelper(scheme, type, domain, customColors?) {\n  let colorScale = generateColorScale(scheme, type, domain);\n  let colorScaleFunction = function(value) {\n    if (type === 'linear') {\n      let valueScale = d3.scaleLinear()\n        .domain(domain)\n        .range([0, 1]);\n\n      return (colorScale(valueScale(value)));\n    } else {\n      let formattedValue = value.toString();\n      let found: any = undefined; // todo type customColors\n      if (customColors && customColors.length > 0) {\n        found = customColors.find((mapping) => {\n          return mapping.name === formattedValue.toLowerCase();\n        });\n      }\n\n      if (found) {\n        return found.value;\n      } else {\n        return colorScale(value);\n      }\n    }\n  };\n\n  return colorScaleFunction;\n}\n","export abstract class BaseChart {\n  results: any[];\n\n  update() {\n    this.results = this.cloneData(this.results);\n  }\n\n  // Clones the data into a new object\n  cloneData(data) {\n    let results = [];\n\n    for (let item of data){\n      let copy = {\n        name: item['name']\n      };\n\n      if (item['value']) {\n        copy['value'] = item['value'];\n      };\n\n      if (item['series']) {\n        copy['series'] = [];\n        for (let seriesItem of item['series']){\n          let seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n\n  abstract setColors()\n\n  abstract click(data, group)\n}\n","import {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'area-chart',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"line chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              (clickHandler)=\"click($event, series)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChart extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n  clipPathId: string;\n  clipPath: string;\n  scaleType: string;\n  series: any;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() legend;\n  @Input() state;\n  @Input() customColors;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() autoScale;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    // TODO: should sorting happen here?\n    // this.series = this.results.series[0].array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[0][0]) - this.results.d0Domain.indexOf(b.vals[0].label[0][0]);\n    // });\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(...domain);\n    let max = Math.max(...domain);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  click(data, series) {\n    data.series = series.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\n\n@Component({\n  selector: 'area-chart-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"line chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              normalized=\"true\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              type=\"stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              chartType=\"area\"\n              (clickHandler)=\"click($event, series)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChartNormalized extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    // modifies results in place\n    for (let i = 0; i < this.xDomain.length; i++) {\n      let val = this.xDomain[i];\n      let d0 = 0;\n\n      let total = 0;\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n        total += d.value;\n      }\n\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n\n        d.d0 = d0;\n        d.d1 = d0 + d.value;\n        d0 += d.value;\n\n        if (total > 0) {\n          d.d0 = (d.d0 * 100) / total;\n          d.d1 = (d.d1 * 100) / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    return [0, 100];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n\n  click(data, series) {\n    data.series = series.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'area-chart-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"area chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              stacked=\"true\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              type=\"stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              (clickHandler)=\"click($event, series)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChartStacked extends BaseChart implements OnInit, OnChanges {\n  element: HTMLElement;\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    super();\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    // modifies results in place\n    for (let i = 0; i < this.xDomain.length; i++) {\n      let val = this.xDomain[i];\n      let d0 = 0;\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n\n        d.d0 = d0;\n        d.d1 = d0 + d.value;\n        d0 += d.value;\n      }\n    }\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n\n    this.addTooltip();\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n\n    for (let i = 0; i < this.xDomain.length; i++) {\n      let val = this.xDomain[i];\n      let sum = 0;\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  addTooltip() {\n    // d3.select(this.element).select('.tooltip-area')\n    //   .on('mousemove', () => {\n    //     let el = d3.select(this.element).select('.tooltip-area')[0][0];\n    //     let chartEl = d3.select(this.element);\n    //     updateTooltip(el, chartEl, this);\n    //   })\n    //   .on('mouseenter', () => {\n    //     showTooltip(this);\n    //   })\n    //   .on('mouseout', () => {\n    //     hideTooltip(this)}\n    //   );\n  }\n\n  click(data, series) {\n    data.series = series.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\nimport moment = require(\"moment\");\n\n@Component({\n  selector: 'g[areaSeries]',\n  template: `\n    <svg:g area\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"color\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient\"\n    />\n  `\n})\nexport class AreaSeries implements OnInit, OnChanges {\n  opacity: number;\n  path: string;\n  startingPath: string;\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() color;\n  @Input() scaleType;\n  @Input() stacked = false;\n  @Input() normalized = false;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let area;\n    let startingArea;\n\n    let xProperty = (d) => {\n      let label = d.name;\n      if (this.scaleType === 'time') {\n        return this.xScale(moment(label).toDate());\n      } else {\n        return this.xScale(label);\n      }\n    };\n\n    // let areaData = this.data.series.map(d => {\n    //   if (this.stacked) {\n    //     let offset0 = d0;\n    //     let offset1 = d0 + d.value;\n    //     d0 = d0 + d.value;\n    //\n    //     return {\n    //       name: d.name,\n    //       value: d.value,\n    //       d0: offset0,\n    //       d1: offset1\n    //     };\n    //   } else if (this.normalized) {\n    //     let offset0 = d0;\n    //     let offset1 = d0 + d.value;\n    //     d0 = d0 + d.value;\n    //\n    //     if (total > 0) {\n    //       offset0 = (offset0 * 100) / total;\n    //       offset1 = (offset1 * 100) /total;\n    //     } else {\n    //       offset0 = 0;\n    //       offset1 = 0;\n    //     }\n    //\n    //     return {\n    //       name: d.name,\n    //       value: d.value,\n    //       d0: offset0,\n    //       d1: offset1\n    //     };\n    //   } else {\n    //     return d;\n    //   }\n    // });\n\n\n    if (this.stacked || this.normalized) {\n      area = d3.area()\n        .x(xProperty)\n        .y0((d, i) => this.yScale(d.d0))\n        .y1((d, i) => this.yScale(d.d1));\n\n      startingArea = d3.area()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    } else {\n      area = d3.area()\n        .x(xProperty)\n        .y0(() => this.yScale.range()[0])\n        .y1(d => this.yScale(d.value));\n\n      startingArea = d3.area()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    }\n\n    this.opacity = 1;\n    this.path = area(this.data.series);\n\n    this.startingPath = startingArea(this.data.series);\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {AreaChart} from \"./area-chart.component\";\nimport {AreaChartNormalized} from \"./area-chart-normalized.component\";\nimport {AreaChartStacked} from \"./area-chart-stacked.component\";\nimport {AreaSeries} from \"./area-series.component\";\nimport {CommonModule} from \"../common/common.module\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    AreaChart,\n    AreaChartNormalized,\n    AreaChartStacked,\n    AreaSeries\n  ],\n  exports: [\n    AreaChart,\n    AreaChartNormalized,\n    AreaChartStacked,\n    AreaSeries\n  ]\n})\nexport class AreaChartModule {}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport ObjectId from '../utils/object-id';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[bar]',\n  template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g svgLinearGradient\n        [color]=\"fill\"\n        [orientation]=\"orientation\"\n        [name]=\"gradientId\"\n        [startOpacity]=\"startOpacity\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      [attr.d]=\"path\"\n      [attr.fill]=\"gradient ? gradientFill : fill\"\n      [style.cursor]=\"'pointer'\"\n      (click)=\"click()\"\n    />\n  `\n})\nexport class Bar implements OnInit, OnChanges {\n  @Input() fill;\n  @Input() data;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n  @Input() orientation;\n  @Input() roundEdges: boolean = true;\n  @Input() gradient: boolean = false;\n  @Input() offset = 0;\n\n  @Output() clickHandler = new EventEmitter();\n\n  element: any;\n  path: any;\n  gradientId: any;\n  gradientFill: any;\n  startOpacity: any;\n  initialized: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    let pageUrl = window.location.href;\n    this.gradientId = 'grad' + ObjectId().toString();\n    this.gradientFill = `url(${pageUrl}#${this.gradientId})`;\n    this.startOpacity = this.getStartOpacity();\n  }\n\n  ngOnChanges() {\n    // ngOnInit gets called after ngOnChanges, so we need to do this here\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update() {\n    this.animateToCurrentForm();\n  }\n\n  loadAnimation() {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.bar');\n    let path = this.getPath();\n\n    node.transition().duration(750)\n      .attr('d', path);\n  }\n\n  getStartingPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        path = this.roundedRect(this.x, this.y + this.height, this.width, 0, radius, true, true, false, false);\n      } else if (this.orientation === 'horizontal') {\n        path = this.roundedRect(this.x, this.y, 0, this.height, radius, false, true, false, true);\n      }\n    } else {\n      if (this.orientation === 'vertical') {\n        path = this.roundedRect(this.x, this.y + this.height, this.width, 0, radius, false, false, false, false);\n      } else if (this.orientation === 'horizontal') {\n        path = this.roundedRect(this.x, this.y, 0, this.height, radius, false, false, false, false);\n      }\n    }\n\n    return path;\n  }\n\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        path = this.roundedRect(this.x, this.y, this.width, this.height, radius, true, true, false, false);\n      } else if (this.orientation === 'horizontal') {\n        path = this.roundedRect(this.x, this.y, this.width, this.height, radius, false, true, false, true);\n      }\n    } else {\n      path = this.roundedRect(this.x, this.y, this.width, this.height, radius, false, false, false, false);\n    }\n\n    return path;\n  }\n\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > radius && this.width > radius) {\n      radius = 5;\n    }\n    return radius;\n  }\n\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0;\n    } else {\n      return 0.5;\n    }\n  }\n\n  roundedRect(x, y, w, h, r, tl, tr, bl, br) {\n    var retval;\n    retval = \"M\" + (x + r) + \",\" + y;\n    retval += \"h\" + (w - 2 * r);\n    if (tr) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + r + \",\" + r;\n    } else {\n      retval += \"h\" + r;\n      retval += \"v\" + r;\n    }\n    retval += \"v\" + (h - 2 * r);\n    if (br) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + -r + \",\" + r;\n    } else {\n      retval += \"v\" + r;\n      retval += \"h\" + -r;\n    }\n    retval += \"h\" + (2 * r - w);\n    if (bl) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + -r + \",\" + -r;\n    } else {\n      retval += \"h\" + -r;\n      retval += \"v\" + -r;\n    }\n    retval += \"v\" + (2 * r - h);\n    if (tl) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + r + \",\" + -r;\n    } else {\n      retval += \"v\" + -r;\n      retval += \"h\" + r;\n    }\n    retval += \"z\";\n    return retval;\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n\n}\n","import * as moment from \"moment\";\n\nexport function tickFormat(fieldType, groupByType): Function {\n  return function(label: string): string {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      return moment(label).format(\"MM/DD/YYYY\");\n    }\n\n    return label.toString();\n  };\n}\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { tickFormat } from '../common/tick-format.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"yDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [tickFormatting]=\"yAxisTickFormatting()\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesHorizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontal extends BaseChart implements OnChanges {\n  dims: ViewDimensions;\n  yScale: any;\n  xScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    const spacing = 0.2;\n    this.yDomain = this.getYDomain();\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.yDomain);\n  }\n\n  getXDomain() {\n    let values = this.results.map(d => d.value);\n    let min = Math.min(0, ...values);\n    let max = Math.max(...values);\n    return [min, max];\n  }\n\n  getYDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  yAxisTickFormatting() {\n    let tickFormatting;\n    if (this.results.query && this.results.query.dimensions.length) {\n      tickFormatting = tickFormat(this.results.query.dimensions[0].field.fieldType, this.results.query.dimensions[0].groupByType.value);\n    }\n    return tickFormatting;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.yDomain, this.customColors);\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-2d',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g gridPanelSeries\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"horizontal\">\n        </svg:g>\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            [xScale]=\"valueScale\"\n            [yScale]=\"innerScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontal2D extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n    ngOnInit() {\n      this.update();\n    }\n\n    ngOnChanges() {\n      this.update();\n    }\n\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valuesDomain = this.getValueDomain();\n\n      this.groupScale = this.getGroupScale();\n      this.innerScale = this.getInnerScale();\n      this.valueScale = this.getValueScale();\n\n      this.setColors();\n\n      this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    }\n\n    getGroupScale() {\n      let spacing = 0.2;\n      return d3.scaleBand()\n        .rangeRound([this.dims.height, 0])\n        .paddingInner(spacing)\n        .domain(this.groupDomain);\n    }\n\n    getInnerScale() {\n      let spacing = 0.2;\n      return d3.scaleBand()\n        .rangeRound([0, this.groupScale.bandwidth()])\n        .paddingInner(spacing)\n        .domain(this.innerDomain);\n    }\n\n    getValueScale() {\n      return d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.valuesDomain);\n    }\n\n    getGroupDomain() {\n      let domain = [];\n      for (let group of this.results) {\n        if (!domain.includes(group.name)) {\n          domain.push(group.name);\n        }\n      }\n\n      return domain;\n    }\n\n    getInnerDomain() {\n      let domain = [];\n      for (let group of this.results) {\n        for (let d of group.series) {\n          if (!domain.includes(d.name)) {\n            domain.push(d.name);\n          }\n        }\n      }\n\n      return domain;\n    }\n\n    getValueDomain() {\n      let domain = [];\n      for (let group of this.results) {\n        for (let d of group.series) {\n          if (!domain.includes(d.value)) {\n            domain.push(d.value);\n          }\n        }\n      }\n\n      let min = Math.min(0, ...domain);\n      let max = Math.max(...domain);\n      return [min, max];\n    }\n\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.name)})`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n}\n","import {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontalNormalized extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getYScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale() {\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n","import {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontalStacked extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      let sum = 0;\n      for (let d of group.series) {\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale() {\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { tickFormat } from '../common/tick-format.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"xDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [tickFormatting]=\"xAxisTickFormatting()\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesVertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\">\n        </svg:g>\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVertical extends BaseChart implements OnChanges {\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: Function;\n  margin: any[] = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getXScale() {\n    const spacing = 0.2;\n    this.xDomain = this.getXDomain();\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getXDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getYDomain() {\n    let values = this.results.map(d => d.value);\n    let min = Math.min(0, ...values);\n    let max = Math.max(...values);\n    return [min, max];\n  }\n\n  xAxisTickFormatting() {\n    let tickFormatting;\n    if(this.results.query && this.results.query.dimensions.length) {\n      tickFormatting = tickFormat(this.results.query.dimensions[0].field.fieldType, this.results.query.dimensions[0].groupByType.value);\n    }\n    return tickFormatting;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.xDomain, this.customColors);\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-2d',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g gridPanelSeries\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\">\n        </svg:g>\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVertical2D extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([0, this.groupScale.bandwidth()])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.name)}, 0)`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVerticalNormalized extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getXScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVerticalStacked extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  tickFormatting: Function;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      let sum = 0;\n      for (let d of group.series) {\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'date-bar',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"results.series[0]\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [xAxisTickInterval]=\"{unit: 'hour', interval: 2}\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesVertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          scaleType=\"time\"\n          [colors]=\"colors\"\n          [series]=\"results.series[0]\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class DateBar extends BaseChart implements OnInit {\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    let groupSpacing = 0.2;\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n    this.yScale = d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain([0, this.results.m0Domain[1]]);\n\n    this.xScale = d3.scaleBand()\n      .rangeRound([0, this.dims.width], groupSpacing)\n      .domain(this.results.d0Domain);\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.results.d0Domain, this.customColors);\n  }\n\n  update() {\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[seriesHorizontal]',\n  template: `\n    <svg:g bar *ngFor=\"let bar of bars\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [data]=\"bar.data\"\n      [orientation]=\"'horizontal'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (clickHandler)=\"click($event)\"\n      [gradient]=\"gradient\"\n\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"bar.tooltipText\"\n      [popoverGroup]=\"'charts'\">\n    </svg:g>\n  `\n})\nexport class SeriesHorizontal implements OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    let d0 = 0;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      let label = d.name;\n      let roundEdges = this.type === 'standard';\n\n      let bar: any = {\n        value: value,\n        label: label,\n        color: this.colors(label),\n        roundEdges: roundEdges,\n        data: d,\n        tooltipText: `${label}: ${value}`\n      };\n\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === 'standard') {\n        bar.width = this.xScale(value);\n        bar.x = 0;\n        bar.y = this.yScale(label);\n      } else if (this.type === 'stacked') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) /total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n      }\n\n      return bar;\n    });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'g[seriesVertical]',\n  template: `\n    <svg:g bar *ngFor=\"let bar of bars\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (clickHandler)=\"click($event)\"\n      [gradient]=\"gradient\"\n\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"bar.tooltipText\"\n      [popoverGroup]=\"'charts'\">\n    </svg:g>\n  `\n})\nexport class SeriesVertical implements OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    let width;\n    if (this.series.length) {\n      if (this.scaleType === 'time') {\n        let count = this.series.array[0].vals[0].label[0].length;\n        let firstDate = this.series.array[0].vals[0].label[0][count - 1];\n        let secondDate = moment(firstDate).add(1, 'hours');\n        width = Math.abs(this.xScale(secondDate) - this.xScale(firstDate)) * 0.8;\n      } else {\n        width = this.xScale.bandwidth();\n      }\n    }\n\n    let d0 = 0;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      let label = d.name;\n      let roundEdges = this.type === 'standard';\n\n      let bar: any = {\n        value: value,\n        label: label,\n        color: this.colors(label),\n        roundEdges: roundEdges,\n        data: d,\n        width: width,\n        tooltipText: `${label}: ${value}`,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n\n      if (this.type === 'standard') {\n        bar.height = this.dims.height - this.yScale(value);\n        bar.x = this.xScale(label);\n        bar.y = this.yScale(value);\n      } else if (this.type === 'stacked') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n      } else if (this.type === 'normalized') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) /total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n      }\n\n      return bar;\n    });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {Bar} from \"./bar.component\";\nimport {BarHorizontal} from \"./bar-horizontal.component\";\nimport {BarHorizontal2D} from \"./bar-horizontal-2d.component\";\nimport {BarHorizontalNormalized} from \"./bar-horizontal-normalized.component\";\nimport {BarHorizontalStacked} from \"./bar-horizontal-stacked.component\";\nimport {BarVertical} from \"./bar-vertical.component\";\nimport {BarVertical2D} from \"./bar-vertical-2d.component\";\nimport {BarVerticalNormalized} from \"./bar-vertical-normalized.component\";\nimport {BarVerticalStacked} from \"./bar-vertical-stacked.component\";\nimport {DateBar} from \"./date-bar.component\";\nimport {SeriesHorizontal} from \"./series-horizontal.component\";\nimport {SeriesVertical} from \"./series-vertical.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    Bar,\n    BarHorizontal,\n    BarHorizontal2D,\n    BarHorizontalNormalized,\n    BarHorizontalStacked,\n    BarVertical,\n    BarVertical2D,\n    BarVerticalNormalized,\n    BarVerticalStacked,\n    DateBar,\n    SeriesHorizontal,\n    SeriesVertical\n  ],\n  exports: [\n    Bar,\n    BarHorizontal,\n    BarHorizontal2D,\n    BarHorizontalNormalized,\n    BarHorizontalStacked,\n    BarVertical,\n    BarVertical2D,\n    BarVerticalNormalized,\n    BarVerticalStacked,\n    DateBar,\n    SeriesHorizontal,\n    SeriesVertical\n  ]\n})\nexport class BarChartModule {}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[heatMapCell]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g svgLinearGradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n      </defs>\n\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        style=\"cursor: pointer\"\n        (click)=\"click()\"\n      />\n\n    </svg:g>\n  `\n})\nexport class HeatMapCell implements OnInit {\n  element: HTMLElement;\n  transform: string;\n  activeRange: any[];\n  startOpacity: number;\n  gradientId: string;\n  gradientUrl: string;\n\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() data;\n  @Input() label;\n  @Input() gradient: boolean = false;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.transform = `translate(${this.x} , ${this.y})`;\n\n    // let value = this.data.value; // unused variable\n    // let range = this.activeRange; // unused variable\n\n    let pageUrl = window.location.href;\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + ObjectId().toString();\n    this.gradientUrl = `url(${pageUrl}#${this.gradientId})`;\n\n    this.loadAnimation();\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).select('.cell');\n\n    node\n      .attr('opacity', 0);\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.cell');\n\n    node.transition().duration(750)\n      .attr('opacity', 1);\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[heatMapCellSeries]',\n  template: `\n    <svg:g heatMapCell *ngFor=\"let c of cells\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (clickHandler)=\"click($event, c.label, c.series)\"\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"c.tooltipText\"\n      [popoverGroup]=\"'charts'\"\n      [gradient]=\"gradient\"\n    />\n  `\n})\nexport class HeatCellSeries implements OnInit, OnChanges {\n  cells: any[];\n\n  @Input() data;\n  @Input() colors;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    let cells = [];\n    this.data.map((row) => {\n      row.series.map((cell) => {\n        let value = cell.value;\n        let label = cell.name;\n        cells.push({\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors(value),\n          data: value,\n          label: label,\n          series: row.name,\n          tooltipText: `${label}: ${value}`\n        });\n      });\n    });\n\n    return cells;\n  }\n\n  click(value, label, series) {\n    this.clickHandler.emit({\n      name: label,\n      value: value,\n      series: series\n    });\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\nimport { BaseChart } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { generateColorScale, colorHelper } from '../utils/color-sets';\n\n@Component({\n  selector: 'heat-map',\n  template: `\n    <chart\n      [legend]=\"false\"\n      [legendData]=\"colorScale\"\n      [data]=\"results.m0Domain\"\n      [view]=\"view\">\n      <svg:g [attr.transform]=\"transform\" class=\"numbercard\">\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:rect *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n\n        <svg:g heatMapCellSeries\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class HeatMap extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  xDomain: any[];\n  yDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  color: any;\n  colors: Function;\n  colorScale: any;\n  transform: string;\n  rects: any[];\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 11);\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.rects = this.getRects();\n  }\n\n  getXDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale() {\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(0.1)\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(0.1)\n      .domain(this.yDomain);\n  }\n\n  getRects() {\n    let rects = [];\n\n    this.xDomain.map((xVal) => {\n      this.yDomain.map((yVal) => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n\n    return rects;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'linear', this.valueDomain);\n    this.colorScale = generateColorScale(this.scheme, 'linear', this.valueDomain);\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {HeatMapCell} from \"./heat-map-cell.component\";\nimport {HeatCellSeries} from \"./heat-map-cell-series.component\";\nimport {HeatMap} from \"./heat-map.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    HeatMapCell,\n    HeatCellSeries,\n    HeatMap\n  ],\n  exports: [\n    HeatMapCell,\n    HeatCellSeries,\n    HeatMap\n  ]\n})\nexport class HeatMapModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'g[line]',\n  template: `\n    <svg:path\n      class=\"line\"\n      [attr.d]=\"path\"\n      fill=\"none\"\n      [attr.stroke]=\"stroke\"\n      stroke-width=\"1.5px\"\n      style=\"strokeDasharray: 2000; strokeDashoffset: 0\"\n    />\n  `\n})\nexport class Line {\n  @Input() path;\n  @Input() stroke;\n  @Input() data;\n\n  @Output() clickHandler = new EventEmitter();\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\nimport moment from 'moment';\n\n@Component({\n  selector: 'line-chart',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath id=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            transform=\"translate(-5, -5)\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"line chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n        <!--\n          <svg:g area\n            *ngIf=\"gradient\"\n            [fill]=\"colors('Line')\"\n            [path]=\"areaPath\"\n            [startingPath]=\"areaPath\"\n            [data]=\"series\"\n            startOpacity=\"0\"\n            endOpacity=\"0.2\"\n            [gradient]=\"gradient\"\n          />\n          -->\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g lineSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              (clickHandler)=\"click($event, series)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class LineChart extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: Function;\n  scaleType: string;\n  transform: string;\n  clipPath: string;\n  series: any;\n  areaPath: any;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() legend;\n  @Input() customColors;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    // TODO: should sorting happen here?\n    // this.series = this.results.series[0].array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[0][0]) - this.results.d0Domain.indexOf(b.vals[0].label[0][0]);\n    // });\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    // let xProperty = (d) => {\n    //   let label = d.vals[0].label[0][0];\n    //   if (this.scaleType === 'time') {\n    //     return this.xScale(moment(label).toDate());\n    //   } else {\n    //     return this.xScale(label) + this.xScale.bandwidth() / 2;\n    //   }\n    // };\n    //\n    // let area = d3.area()\n    //   .x(xProperty)\n    //   .y0(() => this.yScale.range()[0])\n    //   .y1(d => this.yScale(d.vals[0].value));\n    //\n    // this.areaPath = area(this.series);\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    let clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${clipPathId})`;\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(...domain);\n    let max = Math.max(...domain);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  click(data, series) {\n    data.series = series.name;\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\nimport moment from 'moment';\n\n@Component({\n  selector: 'g[lineSeries]',\n  template: `\n    <svg:g line\n      [data]=\"data\"\n      [path]=\"path\"\n      [stroke]=\"color\"\n    />\n  `\n})\nexport class LineSeries implements OnInit, OnChanges {\n\n  path: string;\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() color;\n  @Input() scaleType;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let line = d3.line()\n      .x(d => {\n        let label = d.name;\n        let value;\n        if (this.scaleType === 'time') {\n          value = this.xScale(moment(label).toDate());\n        } else if (this.scaleType === 'linear') {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      })\n      .y(d => this.yScale(d.value));\n\n    let data = this.data.series;\n\n    this.path = line(data) || '';\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {Line} from \"./line.component\";\nimport {LineChart} from \"./line-chart.component\";\nimport {LineSeries} from \"./line-series.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    Line,\n    LineChart,\n    LineSeries\n  ],\n  exports: [\n    Line,\n    LineChart,\n    LineSeries\n  ]\n})\nexport class LineChartModule {}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport { trimLabel } from '../common/trim-label.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[card]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\"\n      (click)=\"click()\">\n      <svg:rect\n        class=\"card\"\n        [style.fill]=\"color\"\n        [style.opacity]=\"0.3\"\n        style=\"cursor: pointer; stroke-width: 2px; stroke: #192024;\"\n        [attr.width]=\"cardWidth\"\n        [attr.height]=\"cardHeight\"\n        rx=\"3\"\n        ry=\"3\"\n      />\n      <title>{{label}}</title>\n      <svg:foreignObject\n        x=\"5\"\n        [attr.y]=\"height * 0.7\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"height * 0.3\"\n        style=\"fill: #fff; font-size: 12px; pointer-events: none; text-transform: uppercase; overflow: hidden; text-align: center;\">\n        <xhtml:p>\n          {{trimmedLabel}}\n        </xhtml:p>\n      </svg:foreignObject>\n\n      <svg:text\n        [attr.x]=\"width / 2\"\n        [attr.y]=\"height * 0.30\"\n        dy='.35em'\n        class=\"value-text\"\n        [style.fill]=\"color\"\n        text-anchor=\"middle\"\n        style=\"font-size: 46px; pointer-events: none;\">\n        {{value}}\n      </svg:text>\n    </svg:g>\n  `\n})\nexport class Card implements OnInit {\n  element: HTMLElement;\n  transform: string;\n  trimmedLabel: string;\n  value: string;\n  cardWidth: number;\n  cardHeight: number;\n  textWidth: number;\n\n  @Input() color;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() data;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  update() {\n    this.transform = `translate(${this.x} , ${this.y})`;\n\n    this.label = this.data.name;\n    this.trimmedLabel = trimLabel(this.label, 55);\n    this.value = d3.format(\",.0f\")(this.data.value);\n\n    this.cardWidth = Math.max(0, this.width - 5);\n    this.cardHeight = Math.max(0, this.height - 5);\n    this.textWidth = Math.max(0, this.width - 15);\n\n    this.loadAnimation();\n  }\n\n  loadAnimation() {\n    // TODO: replace countup animation\n    // let node = d3.select(this.element).selectAll('.value-text');\n    //\n    // node.text('0');\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    var options = {\n      useEasing: true,\n      useGrouping: true,\n      separator: ',',\n      decimal: '.',\n      prefix: '',\n      suffix: ''\n    };\n\n    var endValue = this.data.value;\n    if (this.data.valueType === 'currency') {\n      options.prefix = '$';\n    } else if (this.data.valueType === 'duration') {\n      if (endValue < 60) {\n        options.suffix = ' sec';\n      } else if (endValue < 3600) {\n        endValue = endValue / 60;\n        options.suffix = ' min';\n      } else {\n        endValue = endValue / 3600;\n        options.suffix = ' hours';\n      }\n    }\n\n    // TODO: replace countup animation\n    // let node = d3.select(this.element).selectAll('.value-text');\n    // var counter = new CountUp(node[0][0], 0, endValue, 0, 2.5, options);\n    // counter.start();\n  }\n\n  click() {\n    this.clickHandler.emit({\n      name: this.data.name,\n      value: this.data.value\n    });\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\n\nexport interface CardModel {\n  x;\n  y;\n  width: number;\n  height: number;\n  color: string;\n  label: string;\n  data;\n  tooltipText: string;\n}\n\n@Component({\n  selector: 'g[cardSeries]',\n  template: `\n    <svg:g card *ngFor=\"let c of cards\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [data]=\"c.data\"\n      (clickHandler)=\"click($event)\"\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"c.tooltipText\"\n      [popoverGroup]=\"'charts'\"\n    />\n  `\n})\nexport class CardSeries implements OnInit, OnChanges {\n  cards: CardModel[];\n\n  @Input() data;\n  @Input() dims;\n  @Input() colors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.cards = this.getCards();\n  }\n\n  getCards() {\n    return this.data\n      .map((d, index) => {\n        let label = d.data.name;\n\n        let value = d.data.value;\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.width,\n          height: d.height,\n          color: this.colors(label),\n          label: d.data.label,\n          data: d.data,\n          tooltipText: `${label}: ${value}`\n        };\n      });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n","import d3 from '../d3';\n\nexport function gridLayout(dims, data, minWidth) {\n  let rows = 1;\n  let xScale: any = d3.scaleBand();\n  let yScale: any = d3.scaleBand();\n  let dataLength = data.length;\n  let width = dims.width;\n  let height = dims.height;\n\n  if (width > minWidth) {\n    while (width / dataLength < minWidth) {\n      rows += 1;\n      dataLength = Math.ceil(data.length / rows);\n    }\n  }\n\n  let columns = dataLength;\n\n  var xDomain = [];\n  var yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n\n  let res = [];\n  let total = getTotal(data);\n  let cardWidth = xScale.bandwidth();\n  let cardHeight = yScale.bandwidth();\n\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i].name,\n      value: data[i].value\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = res[i].data.value / total;\n    res[i].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results\n    .map(d => d.value)\n    .reduce((sum, val) => { return sum + val; } );\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { BaseChart } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { gridLayout } from '../common/grid-layout.helper';\n\n@Component({\n  selector: 'number-card',\n  template: `\n    <chart\n      [legend]=\"false\"\n      [view]=\"view\">\n      <svg:g [attr.transform]=\"transform\" class=\"numbercard\">\n        <svg:g cardSeries\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class NumberCard extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  data: any[];\n  colors: Function;\n  transform: string;\n  domain: any[];\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 10, 10, 10];\n  @Input() scheme;\n  @Input() customColors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false);\n\n    this.domain = this.getDomain();\n\n    // let sortedData = this.results;\n    // sortedData.array = sortedData.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[1]) - this.results.d0Domain.indexOf(b.vals[0].label[1]);\n    // });\n\n    this.data = gridLayout(this.dims, this.results, 150);\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {Card} from \"./card.component\";\nimport {CardSeries} from \"./card-series.component\";\nimport {NumberCard} from \"./number-card.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    Card,\n    CardSeries,\n    NumberCard\n  ],\n  exports: [\n    Card,\n    CardSeries,\n    NumberCard\n  ]\n})\nexport class NumberCardModule {}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\n\nexport interface LegendItem {\n  value: number;\n  label: string;\n  percentage: number;\n}\n\n@Component({\n  selector: 'advanced-pie-chart',\n  template: `\n    <div class=\"advanced-pie\"\n      [style.width]=\"dims.width\"\n      [style.height]=\"view[1]\">\n\n      <chart\n        [colors]=\"colors\"\n        [view]=\"[dims.width, dims.height]\">\n\n        <svg:g\n          [attr.transform]=\"transform\"\n          class=\"pie chart\">\n          <svg:g pieSeries\n            [colors]=\"colors\"\n            [showLabels]=\"labels\"\n            [series]=\"results\"\n            [innerRadius]=\"innerRadius\"\n            [outerRadius]=\"outerRadius\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\">\n          </svg:g>\n        </svg:g>\n      </chart>\n    </div>\n\n    <div [style.width]=\"view[0] - dims.width\">\n      <div class=\"advanced-pie-legend\"\n        [style.margin-top]=\"(view[1] - 215)/2\">\n\n        <div class=\"total-value\">\n          {{roundedTotal}}\n        </div>\n        <div class=\"total-label\">\n          {{totalLabel}}\n        </div>\n\n        <div class=\"legend-items-container\">\n          <div class=\"legend-items\">\n            <div *ngFor=\"let legendItem of legendItems\" class=\"legend-item\">\n              <div class=\"item-color\"\n                [style.background]=\"colors(legendItem.label)\">\n              </div>\n              <div class=\"item-value\">{{legendItem.value}}</div>\n              <div class=\"item-label\">{{legendItem.label}}</div>\n              <div class=\"item-percent\">{{legendItem.percentage}}%</div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  `\n})\nexport class AdvancedPieChart extends BaseChart implements OnInit, OnChanges {\n  data: any;\n  dims: ViewDimensions;\n  domain: any[];\n  outerRadius: number;\n  innerRadius: number;\n  transform: string;\n  total: number;\n  roundedTotal: number;\n  totalLabel: string;\n  legendItems: LegendItem;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [20, 20, 20, 20];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions([this.view[0] * 4 / 12.0, this.view[1]], this.margin, false, false, false);\n    this.domain = this.getDomain();\n    this.setColors();\n\n    // TODO\n    // sort data according to domain\n    // this.data = this.results.series[0];\n    // this.data.array = this.data.array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[1]) - this.results.d0Domain.indexOf(b.vals[0].label[1]);\n    // });\n\n    let xOffset = this.margin[3] + this.dims.width / 2;\n    let yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n\n    this.total = this.getTotal();\n    this.roundedTotal = Math.round(this.total);\n\n    this.totalLabel = 'total';\n\n    this.legendItems = this.getLegendItems();\n  }\n\n  getTotal() {\n    return this.results\n      .map(d => d.value)\n      .reduce((sum, d) => sum + d);\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getLegendItems(): LegendItem {\n    return this.results.map((d, index) => {\n      let label = d.name;\n      let value = d.value;\n      let percentage = Math.round(value / this.total * 100);\n      return {\n        value: Math.round(value),\n        label: trimLabel(label, 20),\n        percentage: percentage\n      };\n    });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import { Component, Input, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from '../common/trim-label.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[pieLabel]',\n  template: `\n    <title>{{label}}</title>\n    <svg:text\n      class=\"label\"\n      [attr.transform]=\"transform\"\n      dy=\".35em\"\n      [style.textAnchor]=\"textAnchor()\"\n      [style.shapeRendering]=\"'crispEdges'\"\n      [style.textTransform]=\"'uppercase'\">\n      {{trimLabel(label)}}\n    </svg:text>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"line\"\n      [style.strokeDasharray]=\"2000\"\n      [style.strokeDashoffset]=\"0\">\n    </svg:path>\n  `\n})\nexport class PieLabel implements OnInit, OnChanges {\n  element: HTMLElement;\n  trimLabel: Function;\n  labelXY: any;\n  transform: string;\n  line: string;\n\n  @Input() data;\n  @Input() radius;\n  @Input() label;\n  @Input() color;\n  @Input() max;\n  @Input() value;\n  @Input() explodeSlices;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n    this.trimLabel = trimLabel;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let factor = 1.5;\n\n    let outerArc = d3.arc()\n      .innerRadius(this.radius * factor)\n      .outerRadius(this.radius * factor);\n\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n\n    let innerArc = d3.arc()\n      .innerRadius(startRadius)\n      .outerRadius(startRadius);\n\n    this.labelXY = outerArc.centroid(this.data);\n    this.labelXY[0] = this.radius * factor * (this.midAngle(this.data) < Math.PI ? 1 : -1);\n    this.labelXY[1] = this.data.pos[1];\n\n    this.line = `M${innerArc.centroid(this.data)}L${outerArc.centroid(this.data)}L${this.labelXY}`;\n    this.transform = `translate(${this.labelXY})`;\n\n    this.loadAnimation();\n  }\n\n  textAnchor() {\n    return this.midAngle(this.data) < Math.PI ? \"start\" : \"end\";\n  }\n\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  loadAnimation() {\n    let label = d3.select(this.element).select('.label');\n    let line = d3.select(this.element).select('.line');\n\n    label\n      .attr('opacity', 0)\n      .transition().delay(750).duration(750)\n      .attr('opacity', 1);\n\n    line\n      .style('stroke-dashoffset', 2000)\n      .transition().delay(750).duration(750)\n      .style('stroke-dashoffset', '0')\n      .transition()\n      .style('stroke-dasharray', 'none');\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport d3 from '../d3';\nimport ObjectId from \"../utils/object-id\";\n\n@Component({\n  selector: 'g[pieArc]',\n  template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g svgLinearGradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"linearGradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n        <svg:g svgRadialGradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"radialGradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [style.cursor]=\"'pointer'\"\n        [attr.fill]=\"gradient ? gradientFill : fill\"\n        (click)=\"click()\"\n      />\n    </svg:g>\n  `\n})\nexport class PieArc implements OnInit {\n  element: HTMLElement;\n  path: any;\n  startOpacity: number;\n  radialGradientId: string;\n  linearGradientId: string;\n  gradientFill: string;\n\n  @Input() fill;\n  @Input() startAngle;\n  @Input() endAngle;\n  @Input() innerRadius;\n  @Input() outerRadius;\n  @Input() value;\n  @Input() total;\n  @Input() max;\n  @Input() data;\n  @Input() explodeSlices;\n  @Input() gradient: boolean = false;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    var arc = this.calculateArc();\n    this.path = arc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    this.startOpacity = 0.3;\n\n    let pageUrl = window.location.href;\n    this.radialGradientId = 'linearGrad' + ObjectId().toString();\n    this.linearGradientId = 'radialGrad' + ObjectId().toString();\n\n    if (this.innerRadius !== 0) {\n      this.gradientFill = `url(${pageUrl}#${this.radialGradientId})`;\n    } else {\n      this.gradientFill = `url(${pageUrl}#${this.linearGradientId})`;\n    }\n\n    this.loadAnimation();\n  }\n\n  calculateArc() {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = this.outerRadius * this.value / this.max;\n    }\n\n    return d3.arc()\n      .innerRadius(this.innerRadius).outerRadius(outerRadius);\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).selectAll('.arc').data([{startAngle: this.startAngle, endAngle: this.endAngle}]);\n    var arc = this.calculateArc();\n\n    node\n      .transition()\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        var interpolate = d3.interpolate(copyOfD, copyOfD);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      })\n      .transition().duration(750)\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var interpolate = d3.interpolate(this._current, d);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      });\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\n\n@Component({\n  selector: 'pie-chart',\n  template: `\n    <chart\n      [colors]=\"colors\"\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [legendData]=\"domain\">\n      <svg:g [attr.transform]=\"translation\" class=\"pie chart\">\n        <svg:g pieSeries\n          [colors]=\"colors\"\n          [showLabels]=\"labels\"\n          [series]=\"data\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class PieChart extends BaseChart implements OnInit, OnChanges {\n  outerRadius: number;\n  innerRadius: number;\n  data: any;\n  colors: Function;\n  domain: any;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [20, 20, 20, 20];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() labels = false;\n  @Input() legend = false;\n  @Input() explodeSlices = false;\n  @Input() doughnut = false;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  translation: string;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    let dims = calculateViewDimensions(this.view, this.margin, false, false, this.legend, 9);\n    let xOffset = this.margin[3] + dims.width / 2;\n    let yOffset = this.margin[0] + dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(dims.width, dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * 0.75;\n    }\n\n    this.domain = this.getDomain();\n\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n\n    this.setColors();\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { gridLayout } from '../common/grid-layout.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'pie-grid',\n  template: `\n    <chart\n      [legend]=\"false\"\n      [view]=\"view\" >\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid-chart\">\n        <svg:g\n          *ngFor=\"let series of series\"\n          class=\"pie-grid-item\"\n          [attr.transform]=\"series.transform\">\n\n          <svg:g pieGridSeries\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            (clickHandler)=\"click($event)\"\n          />\n\n          <svg:text\n            class=\"label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            text-anchor=\"middle\">\n            {{series.percent}}\n          </svg:text>\n\n          <svg:text\n            class=\"label\"\n            dy=\"0.5em\"\n            x=\"0\"\n            y=\"5\"\n            text-anchor=\"middle\">\n            {{series.label}}\n          </svg:text>\n\n          <svg:text\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\">\n            {{series.total}}\n          </svg:text>\n\n        </svg:g>\n      </svg:g>\n    </chart>\n  `\n})\nexport class PieGrid extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  data: any[];\n  transform: string;\n  series: any[];\n  domain: any[];\n  colorScale: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [20, 20, 20, 20];\n  @Input() scheme;\n  @Input() customColors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false);\n    this.domain = this.getDomain();\n\n    // TODO\n    // sort data according to domain\n    // let sortedData = this.results.series[0];\n    // sortedData.array = sortedData.array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[1]) - this.results.d0Domain.indexOf(b.vals[0].label[1]);\n    // });\n\n    this.data = gridLayout(this.dims, this.results, 150);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n\n    this.series = this.getSeries();\n    this.setColors();\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getSeries() {\n    let total = this.getTotal();\n    return this.data.map((d) => {\n      let label = d.data.name;\n      let value = d.data.value;\n      let radius = d3.min([d.width, d.height]) / 2.1;\n      let innerRadius = radius * 0.75;\n\n      let count = 0;\n\n      let colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale(label);\n        }\n      };\n\n      return {\n        transform: `translate(${d.x + d.width / 2} , ${d.y + d.height / 2})`,\n        colors: colors,\n        innerRadius: innerRadius,\n        outerRadius: radius,\n        label: trimLabel(label),\n        total: `Total: ${d3.format(\".2f\")(value)}`,\n        percent: d3.format(\".1p\")(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: 'other'\n          }\n        }]\n      };\n    });\n  }\n\n  getTotal() {\n    return this.results\n      .map(d => d.value)\n      .reduce((sum, d) => sum + d);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colorScale = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[pieGridSeries]',\n  template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:path *ngFor=\"let arc of arcs\"\n        [attr.class]=\"arc.class\"\n        [attr.d]=\"arc.d\"\n        [style.cursor]=\"arc.cursor\"\n        [style.opacity]=\"arc.opacity\"\n        [attr.fill]=\"arc.fill\"\n        (click)=\"click(arc.data)\"\n      />\n    </svg:g>\n  `\n})\nexport class PieGridSeries implements OnInit, OnChanges {\n  element: HTMLElement;\n  layout: any;\n  arcs: any;\n\n  @Input() colors;\n  @Input() data;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.layout = d3.pie()\n      .value((d) => d.data.value).sort(null);\n\n    this.arcs = this.getArcs();\n    this.loadAnimation();\n  }\n\n  getArcs() {\n    return this.layout(this.data).map((arc, index) => {\n      let label = arc.data.data.name;\n      let other = arc.data.data.other;\n\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n      let genArcPath: any = d3.arc()\n        .innerRadius(this.innerRadius).outerRadius(this.outerRadius)\n        .startAngle(arc.startAngle).endAngle(arc.endAngle);\n\n      return {\n        class: 'arc ' + 'arc' + index,\n        d: genArcPath(), // todo check need arguments ?\n        cursor: other ? 'auto' : 'pointer',\n        fill: this.colors(label),\n        opacity: other ? 0.4 : 1\n      };\n    });\n  }\n\n  loadAnimation() {\n    let layout = d3.pie()\n      .value((d) => d.data.value).sort(null);\n    let data = layout(this.data);\n\n    let node = d3.select(this.element).selectAll('.arc1').data([{\n      startAngle: data[0].startAngle,\n      endAngle: data[0].endAngle\n    }]);\n    var arc = this.calculateArc(this.innerRadius, this.outerRadius);\n\n    node\n      .transition()\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        var interpolate = d3.interpolate(copyOfD, copyOfD);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      })\n      .transition().duration(750)\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var interpolate = d3.interpolate(this._current, d);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      });\n  }\n\n  calculateArc(innerRadius, outerRadius) {\n    return d3.arc()\n      .innerRadius(innerRadius).outerRadius(outerRadius);\n  }\n\n  click(data) {\n    this.clickHandler.emit({\n      name: this.data[0].data.name,\n      value: this.data[0].data.value\n    });\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[pieSeries]',\n  template: `\n    <svg:g *ngFor=\"let arc of data\">\n      <svg:g pieLabel\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"label(arc)\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\">\n      </svg:g>\n\n      <svg:g pieArc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [total]=\"total\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        (clickHandler)=\"click($event)\"\n        sw-popover\n        [popoverSpacing]=\"15\"\n        [popoverText]=\"tooltipText(arc)\"\n        [popoverGroup]=\"'charts'\"\n        [gradient]=\"gradient\"\n      ></svg:g>\n\n    </svg:g>\n  `\n})\nexport class PieSeries implements OnInit, OnChanges {\n  total: number;\n  max: number;\n  data: any;\n\n  @Input() colors;\n  @Input() series: any = [];\n  @Input() dims;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n  @Input() explodeSlices;\n  @Input() showLabels;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let pie: any = d3.pie()\n      .value((d) => d.value)\n      .sort(null);\n\n    this.total = this.getTotal();\n\n    let arcData = pie(this.series);\n\n    this.max = d3.max(arcData, (d) => {\n      return d.value;\n    });\n\n    this.data = this.calculateLabelPositions(arcData);\n  }\n\n  getTotal() {\n    return this.series\n      .map(d => d.value)\n      .reduce((sum, val) => { return sum + val; } );\n  }\n\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  outerArc() {\n    let factor = 1.5;\n    return d3.arc()\n      .innerRadius(this.outerRadius * factor)\n      .outerRadius(this.outerRadius * factor);\n  }\n\n  calculateLabelPositions(pieData) {\n    var minDistance = 10;\n    var chart = this;\n    var labelPositions = pieData;\n\n    labelPositions.forEach(function(d) {\n      d.pos = chart.outerArc().centroid(d);\n      d.pos[0] = chart.outerRadius * (chart.midAngle(d) < Math.PI ? 1 : -1);\n    });\n\n    for (var i = 0; i < labelPositions.length - 1; i++) {\n      var a = labelPositions[i];\n\n      for (var j = i + 1; j < labelPositions.length; j++) {\n        var b = labelPositions[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          if (Math.abs(b.pos[1] - a.pos[1]) <= minDistance) {\n            // push the second one down\n            labelPositions[j].pos[1] = b.pos[1] + minDistance;\n            j--;\n          }\n        }\n      }\n    }\n\n    return labelPositions;\n  }\n\n  labelVisible(arc) {\n    return this.showLabels && (arc.endAngle - arc.startAngle > Math.PI / 30);\n  }\n\n  label(arc) {\n    return arc.data.name;\n  }\n\n  tooltipText(arc) {\n    return `${this.label(arc)}: ${arc.data.value}`;\n  }\n\n  color(arc) {\n    return this.colors(this.label(arc));\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {AdvancedPieChart} from \"./advanced-pie-chart.component\";\nimport {PieLabel} from \"./pie-label.component\";\nimport {PieArc} from \"./pie-arc.component\";\nimport {PieChart} from \"./pie-chart.component\";\nimport {PieGrid} from \"./pie-grid.component\";\nimport {PieGridSeries} from \"./pie-grid-series.component\";\nimport {PieSeries} from \"./pie-series.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    AdvancedPieChart,\n    PieLabel,\n    PieArc,\n    PieChart,\n    PieGrid,\n    PieGridSeries,\n    PieSeries\n  ],\n  exports: [\n    AdvancedPieChart,\n    PieLabel,\n    PieArc,\n    PieChart,\n    PieGrid,\n    PieGridSeries,\n    PieSeries\n  ]\n})\nexport class PieChartModule {}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\n// import { formatNumber } from 'common/utils/format';\n// todo fix missing \"props\"\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[treeMapCell]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <svg:rect\n        [attr.fill]=\"fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"click()\"\n      />\n\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        x=\"0\"\n        [attr.y]=\"height/2 - 15\"\n        [attr.width]=\"width\"\n        height=\"40\">\n        <xhtml:p>\n          <xhtml:b>{{label}}</xhtml:b>\n          <xhtml:br/>\n          {{formattedValue}}\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `\n})\nexport class TreeMapCell implements OnInit {\n  element: HTMLElement;\n  transform: string;\n  formattedValue: string; // todo check string or number ?\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() value;\n  @Input() valueType;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.transform = `translate(${this.x} , ${this.y})`;\n    // todo fix this by adding props\n    // this.formattedValue = formatNumber(props.value, props.valueType);\n\n    this.loadAnimation();\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).select('.cell');\n\n    node\n      .attr('opacity', 0);\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.cell');\n\n    node.transition().duration(750)\n      .attr('opacity', 1);\n  }\n\n  click() {\n    this.clickHandler.emit(this.label);\n  }\n\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'g[treeMapCellSeries]',\n  template: `\n    <svg:g treeMapCell *ngFor=\"let c of cells\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueType]=\"c.valueType\"\n      (clickHandler)=\"click($event)\"\n    />\n  `\n})\nexport class TreeMapCellSeries implements OnInit {\n  cells: any[];\n  @Input() data;\n  @Input() dims;\n  @Input() colors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    return this.data\n      .filter((d) => {\n        return d.depth === 1;\n      })\n      .map((d, index) => {\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.dx,\n          height: d.dy,\n          fill: this.colors(d.label),\n          label: d.label,\n          value: d.value,\n          valueType: d.valueType\n        };\n      });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport d3 from '../d3';\nimport { BaseChart } from '../common/base-chart.component';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\n\n@Component({\n  selector: 'tree-map',\n  template: `\n    <chart\n      legend=\"false\"\n      [view]=\"view\">\n      <svg:g [attr.transform]=\"transform\" class=\"treemap\">\n        <svg:g treeMapCellSeries\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class TreeMap extends BaseChart implements OnInit {\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 10, 10, 10];\n  @Input() scheme;\n  @Input() customColors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  dims: any;\n  transform: any;\n  colors: any;\n  treemap: any;\n  data: any;\n\n\n  ngOnInit() {\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false, 12);\n\n    let data = [];\n\n    for (var i = 0; i < this.results.data.length; i++) {\n      data[i] = {};\n      data[i].value = this.results.data[i].value;\n      data[i].valueType = this.results.data[i].valueType;\n      data[i].label = this.results.data[i].label;\n    }\n\n    this.treemap = d3.treemap()\n      .children(d => d)\n      .size([this.dims.width, this.dims.height])\n      .sticky(true)\n      .value(d => d.value); // todo check if value method exists ?\n\n    this.data = this.treemap(data);\n\n    this.colors = colorHelper(this.scheme, 'ordinal', this.results.d0Domain, this.customColors);\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n  }\n\n  update() {\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {TreeMapCell} from \"./tree-map-cell.component\";\nimport {TreeMapCellSeries} from \"./tree-map-cell-series.component\";\nimport {TreeMap} from \"./tree-map.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    TreeMapCell,\n    TreeMapCellSeries,\n    TreeMap\n  ],\n  exports: [\n    TreeMapCell,\n    TreeMapCellSeries,\n    TreeMap\n  ]\n})\nexport class TreeMapModule {}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"./common/common.module\";\nimport {AreaChartModule} from \"./area-chart/area-chart.module\";\nimport {BarChartModule} from \"./bar-chart/bar-chart.module\";\nimport {HeatMapModule} from \"./heat-map/heat-map.module\";\nimport {LineChartModule} from \"./line-chart/line-chart.module\";\nimport {NumberCardModule} from \"./number-card/number-card.module\";\nimport {PieChartModule} from \"./pie-chart/pie-chart.module\";\nimport {TreeMapModule} from \"./tree-map/tree-map.module\";\n\n@NgModule({\n  exports: [\n    CommonModule,\n    AreaChartModule,\n    BarChartModule,\n    HeatMapModule,\n    LineChartModule,\n    NumberCardModule,\n    PieChartModule,\n    TreeMapModule\n  ]\n})\nexport class NG2D3Module {}\n"],"names":["moment"],"mappings":"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"}