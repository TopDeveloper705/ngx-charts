{"version":3,"file":null,"sources":["../src/common/charts/chart.component.ts","../src/common/trim-label.helper.ts","../src/common/legend.component.ts","../src/common/scale-legend.component.ts","../src/common/axes/axis-label.component.ts","../src/common/axes/x-axis.component.ts","../src/common/axes/ticks.helper.ts","../src/common/axes/x-axis-ticks.component.ts","../src/common/axes/y-axis.component.ts","../src/common/axes/y-axis-ticks.component.ts","../src/common/axes/axes.module.ts","../src/utils/injection.service.ts","../src/utils/object-id.ts","../src/common/tooltip/placement.type.ts","../src/common/tooltip/style.type.ts","../src/common/tooltip/alignment.type.ts","../src/common/tooltip/show.type.ts","../src/utils/throttle.ts","../src/common/tooltip/position.helper.ts","../src/common/tooltip/tooltip-options.ts","../src/common/tooltip/tooltip.component.ts","../src/common/tooltip/tooltip.service.ts","../src/common/tooltip/tooltip.directive.ts","../src/common/tooltip/tooltip.module.ts","../src/common/circle-series.component.ts","../src/common/circle.component.ts","../src/common/grid-panel.component.ts","../src/common/grid-panel-series.component.ts","../src/common/svg-linear-gradient.component.ts","../src/common/svg-radial-gradient.component.ts","../src/d3.ts","../src/common/timeline.component.ts","../src/common/area.component.ts","../src/common/area-tooltip.component.ts","../src/common/common.module.ts","../src/common/view-dimensions.helper.ts","../src/utils/color-sets.ts","../src/common/base-chart.component.ts","../src/area-chart/area-chart.component.ts","../src/area-chart/area-chart-normalized.component.ts","../src/area-chart/area-chart-stacked.component.ts","../src/utils/sort.ts","../src/area-chart/area-series.component.ts","../src/area-chart/area-chart.module.ts","../src/bar-chart/bar.component.ts","../src/common/tick-format.helper.ts","../src/bar-chart/bar-horizontal.component.ts","../src/bar-chart/bar-horizontal-2d.component.ts","../src/bar-chart/bar-horizontal-normalized.component.ts","../src/bar-chart/bar-horizontal-stacked.component.ts","../src/bar-chart/bar-vertical.component.ts","../src/bar-chart/bar-vertical-2d.component.ts","../src/bar-chart/bar-vertical-normalized.component.ts","../src/bar-chart/bar-vertical-stacked.component.ts","../src/bar-chart/series-horizontal.component.ts","../src/bar-chart/series-vertical.component.ts","../src/bar-chart/bar-chart.module.ts","../src/heat-map/heat-map-cell.component.ts","../src/heat-map/heat-map-cell-series.component.ts","../src/heat-map/heat-map.component.ts","../src/heat-map/heat-map.module.ts","../src/line-chart/line.component.ts","../src/line-chart/line-chart.component.ts","../src/line-chart/line-series.component.ts","../src/line-chart/line-chart.module.ts","../src/number-card/card.component.ts","../src/number-card/card-series.component.ts","../src/common/grid-layout.helper.ts","../src/number-card/number-card.component.ts","../src/number-card/number-card.module.ts","../src/pie-chart/advanced-pie-chart.component.ts","../src/pie-chart/pie-label.component.ts","../src/pie-chart/pie-arc.component.ts","../src/pie-chart/pie-chart.component.ts","../src/pie-chart/pie-grid.component.ts","../src/pie-chart/pie-grid-series.component.ts","../src/pie-chart/pie-series.component.ts","../src/pie-chart/pie-chart.module.ts","../src/tree-map/tree-map-cell.component.ts","../src/tree-map/tree-map-cell-series.component.ts","../src/tree-map/tree-map.component.ts","../src/tree-map/tree-map.module.ts","../src/ng2d3.ts"],"sourcesContent":["import {Component, Input, OnChanges, OnInit, ElementRef, AfterViewInit, ApplicationRef} from '@angular/core';\n\n@Component({\n  selector: 'chart',\n  template: `\n    <svg\n      class=\"ng2d3\"\n      [attr.width]=\"view[0] * chartWidth / 12.0\"\n      [attr.height]=\"view[1]\">\n\n      <ng-content></ng-content>\n    </svg>\n\n    <scale-legend\n      *ngIf=\"legend && legendType === 'scaleLegend'\"\n      class=\"legend\"\n      [valueRange]=\"data\"\n      [colors]=\"legendData\"\n      [height]=\"view[1]\">\n    </scale-legend>\n\n    <legend\n      *ngIf=\"legend && legendType === 'legend'\"\n      class=\"legend\"\n      [data]=\"legendData\"\n      [title]=\"legendTitle\"\n      [colors]=\"colors\"\n      [height]=\"view[1]\">\n    </legend>\n`\n})\nexport class Chart implements OnChanges, OnInit, AfterViewInit {\n  @Input() view;\n  @Input() legend = false;\n  @Input() data;\n  @Input() legendData;\n  @Input() legendTitle = 'Legend';\n  @Input() colors;\n  chartWidth: any;\n\n  title: any;\n  legendWidth: any;\n  legendType: any;\n\n\n  constructor(private element: ElementRef, private applicationRef: ApplicationRef) {\n\n  }\n\n  ngOnInit(): void {\n    console.log(this);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  ngAfterViewInit() {\n  }\n\n  update() {\n    this.legendWidth = 0;\n\n    if (this.legend) {\n      this.legendType = this.getLegendType();\n\n      if (this.legendType === 'scaleLegend') {\n        this.legendWidth = 1;\n      } else {\n        this.legendWidth = 2;\n      }\n    }\n\n    this.chartWidth = 12 - this.legendWidth;\n  }\n\n  getLegendType() {\n    if (typeof this.legendData === 'function') {\n      return 'scaleLegend';\n    } else {\n      return 'legend';\n    }\n  }\n}\n","export function trimLabel(s, max = 16): string {\r\n  if(typeof s !== 'string') {\r\n    if(typeof s === 'number') {\r\n      return s + '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  if(s.length <= max) {\r\n    return s;\r\n  } else {\r\n    return `${s.slice(0, max).trim()}...`;\r\n  }\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { trimLabel } from './trim-label.helper';\r\n\r\n@Component({\r\n  selector: 'legend',\r\n  template: `\r\n    <div >\r\n      <header class=\"legend-title\"\r\n        style=\"white-space: nowrap; overflow: hidden;\">\r\n        <span class=\"legend-icon incon-eye-1\"></span>\r\n        <span class=\"legend-title-text\">{{title}}</span>\r\n      </header>\r\n\r\n      <div class=\"legend-wrap\">\r\n        <ul class=\"legend-labels\" style=\"white-space: nowrap;\">\r\n          <li *ngFor=\"let legendItem of legendItems\" [class]=\"legendItem.className\">\r\n            <span\r\n              [title]=\"legendItem.label\"\r\n              class=\"legend-label-color\"\r\n              [style.background-color]=\"colors(legendItem.label)\">\r\n            </span>\r\n\r\n            <span [title]=\"legendItem.label\" class=\"legend-label-text\">\r\n              {{legendItem.trimmedLabel}}\r\n            </span>\r\n\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class Legend implements OnChanges {\r\n  @Input() data;\r\n  @Input() title;\r\n  @Input() colors;\r\n  @Input() height;\r\n\r\n  legendItems: any;\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.legendItems = this.getLegendItems();\r\n  }\r\n\r\n  getLegendItems() {\r\n    return this.data.map((label, index) => {\r\n      return {\r\n        className: 'legend-label',\r\n        label: label,\r\n        trimmedLabel: trimLabel(label) || '(empty)',\r\n        backgroundColor: this.colors(label)\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'scale-legend',\r\n  template: `\r\n    <div>\r\n      <div\r\n        style=\"padding: 10px 0px; width: 30px; text-align: center;\"\r\n        [style.height]=\"(height - 40) + 'px'\">\r\n\r\n        <div>\r\n          <span>{{valueRange[0]}}</span>\r\n        </div>\r\n\r\n        <div class=\"legend-wrap\"\r\n          style=\"height: 100%; width: 100%; border-radius: 5px;\"\r\n          [style.background]=\"gradient\">\r\n        </div>\r\n\r\n        <div>\r\n          <span>{{valueRange[1].toFixed()}}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ScaleLegend implements OnChanges {\r\n  @Input() valueRange;\r\n  @Input() colors;\r\n  @Input() height;\r\n\r\n  gradient: any;\r\n\r\n  ngOnChanges() {\r\n    let gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\r\n    this.gradient = `linear-gradient(to bottom, ${gradientValues})`;\r\n  }\r\n\r\n  /**\r\n   * Generates the string used in the gradient stylesheet properties\r\n   * @param  {array} colors array of colors\r\n   * @param  {array} splits array of splits on a scale of (0, 1)\r\n   * @return {string}\r\n   */\r\n  gradientString(colors, splits) {\r\n    // add the 100%\r\n    splits.push(1);\r\n    let pairs = [];\r\n    colors.forEach((c, i) => {\r\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\r\n    });\r\n\r\n    return pairs.join(', ');\r\n  }\r\n}\r\n","import { Component, Input, ElementRef, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[axisLabel]',\r\n  template: `\r\n    <svg:text\r\n      [attr.stroke-width]=\"strokeWidth\"\r\n      [attr.text-anchor]=\"textAnchor\"\r\n      [attr.x]=\"x\"\r\n      [attr.y]=\"y\"\r\n      [attr.text-anchor]=\"textAnchor\"\r\n      [attr.transform]=\"transform\">\r\n      {{label}}\r\n    </svg:text>\r\n  `\r\n})\r\nexport class AxisLabel implements OnChanges {\r\n  @Input() orient;\r\n  @Input() label;\r\n  @Input() offset;\r\n  @Input() width;\r\n  @Input() height;\r\n\r\n  x: any;\r\n  y: any;\r\n  transform: any;\r\n  strokeWidth: any;\r\n  textAnchor: any;\r\n  element: ElementRef;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.strokeWidth = '0.01';\r\n    this.textAnchor = 'middle';\r\n    this.transform = '';\r\n\r\n    switch (this.orient) {\r\n      case 'top':\r\n        this.y = this.offset;\r\n        this.x = this.width / 2;\r\n        break;\r\n      case 'bottom':\r\n        this.y = this.offset;\r\n        this.x = this.width / 2;\r\n        break;\r\n      case 'left':\r\n        this.y = -this.offset;\r\n        this.x = -this.height / 2;\r\n        this.transform = \"rotate(270)\";\r\n        break;\r\n      case 'right':\r\n        this.y = this.offset;\r\n        this.x = -this.height / 2;\r\n        this.transform = \"rotate(270)\";\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[xAxis]',\r\n  template: `\r\n    <svg:g\r\n      [attr.class]=\"xAxisClassName\"\r\n      [attr.transform]=\"transform\">\r\n      <svg:g xAxisTicks\r\n        [tickFormatting]=\"tickFormatting\"\r\n        [tickArguments]=\"tickArguments\"\r\n        [tickStroke]=\"tickStroke\"\r\n        [scale]=\"xScale\"\r\n        [orient]=\"xOrient\"\r\n        [showGridLines]=\"showGridLines\"\r\n        [gridLineHeight]=\"dims.height\"\r\n        [width]=\"dims.width\"\r\n      />\r\n\r\n      <svg:g axisLabel\r\n        *ngIf=\"showLabel\"\r\n        [label]=\"labelText\"\r\n        [offset]=\"80\"\r\n        [orient]=\"'bottom'\"\r\n        [height]=\"dims.height\"\r\n        [width]=\"dims.width\">\r\n      </svg:g>\r\n    </svg:g>\r\n  `\r\n})\r\nexport class XAxis implements OnChanges {\r\n  @Input() xScale;\r\n  @Input() dims;\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() showLabel;\r\n  @Input() labelText;\r\n  @Input() xAxisTickInterval;\r\n\r\n  xAxisTickCount: any;\r\n  xAxisClassName: any;\r\n  xOrient: any;\r\n  tickArguments: any;\r\n  xAxisOffset: any;\r\n  transform: any;\r\n\r\n  constructor() {\r\n    Object.assign(this, {\r\n      xAxisClassName: 'x axis',\r\n      xOrient: 'bottom',\r\n      fill: 'none',\r\n      stroke: 'none',\r\n      tickStroke: '#ccc',\r\n      strokeWidth: 'none',\r\n      xAxisOffset: 5,\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.transform = `translate(0,${this.xAxisOffset + this.dims.height})`;\r\n\r\n    if (typeof this.xAxisTickCount !== 'undefined') {\r\n      this.tickArguments = [this.xAxisTickCount];\r\n    }\r\n\r\n    if (typeof this.xAxisTickInterval !== 'undefined') {\r\n      // todo we need to change this, because the function names have changed: https://github.com/d3/d3/blob/master/CHANGES.md#time-intervals-d3-time\r\n      // this.tickArguments = [d3.time[this.xAxisTickInterval.unit], this.xAxisTickInterval.interval];\r\n    }\r\n  }\r\n\r\n}\r\n","export function reduceTicks(ticks, maxTicks) {\r\n  if (ticks.length > maxTicks) {\r\n    let reduced = [];\r\n    let modulus = Math.floor(ticks.length / maxTicks);\r\n    for (let i = 0; i < ticks.length; i++) {\r\n      if (i % modulus === 0) {\r\n        reduced.push(ticks[i]);\r\n      }\r\n    }\r\n    ticks = reduced;\r\n  }\r\n\r\n  return ticks;\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { trimLabel } from '../trim-label.helper';\r\nimport { reduceTicks } from './ticks.helper';\r\n\r\n@Component({\r\n  selector: 'g[xAxisTicks]',\r\n  template: `\r\n    <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\r\n      [attr.transform]=\"tickTransform(tick)\">\r\n      <title>{{tickFormat(tick)}}</title>\r\n      <svg:text\r\n        stroke-width=\"0.01\"\r\n        [attr.text-anchor]=\"textAnchor\"\r\n        [attr.transform]=\"textTransform\"\r\n        [style.font-size]=\"'12px'\">\r\n        {{trimLabel(tickFormat(tick))}}\r\n      </svg:text>\r\n\r\n      <svg:g\r\n        *ngIf=\"showGridLines\"\r\n        [attr.transform]=\"gridLineTransform()\">\r\n\r\n        <svg:line\r\n          class=\"gridline-path gridline-path-vertical gridline-path-shadow\"\r\n          [attr.y1]=\"-gridLineHeight\"\r\n          y2=\"0\" />\r\n        <svg:line\r\n          class=\"gridline-path gridline-path-vertical\"\r\n          x1=\"1\"\r\n          x2=\"1\"\r\n          [attr.y1]=\"-gridLineHeight\"\r\n          y2=\"0\" />\r\n      </svg:g>\r\n    </svg:g>\r\n  `\r\n})\r\nexport class XAxisTicks implements OnChanges {\r\n  @Input() scale;\r\n  @Input() orient;\r\n  @Input() tickArguments = [5];\r\n  @Input() tickStroke = '#ccc';\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() gridLineHeight;\r\n  @Input() width;\r\n\r\n  verticalSpacing: any;\r\n  rotateLabels: any;\r\n  innerTickSize: any;\r\n  outerTickSize: any;\r\n  tickPadding: any;\r\n  textAnchor: any;\r\n  maxTicksLength: any;\r\n  maxAllowedLength: number = 16;\r\n  trimLabel: any;\r\n  adjustedScale: any;\r\n  tickValues: any;\r\n  textTransform: any;\r\n  ticks: any;\r\n  tickFormat: any;\r\n\r\n  constructor() {\r\n    Object.assign(this, {\r\n      innerTickSize: 6,\r\n      outerTickSize: 6,\r\n      tickPadding: 3,\r\n      rotateLabels: false,\r\n      verticalSpacing: 20,\r\n      textAnchor: 'middle',\r\n      maxTicksLength: 0,\r\n      trimLabel: trimLabel\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    var scale = this.scale;\r\n    this.ticks = this.getTicks();\r\n\r\n    if (this.tickFormatting) {\r\n      this.tickFormat = this.tickFormatting;\r\n    } else if (scale.tickFormat) {\r\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\r\n    } else {\r\n      this.tickFormat = function(d) {\r\n        return d;\r\n      };\r\n    }\r\n\r\n    let angle = this.getRotationAngle(this.ticks);\r\n\r\n    this.adjustedScale = this.scale.bandwidth ? function(d) {\r\n      return this.scale(d) + this.scale.bandwidth() * 0.5;\r\n    } : this.scale;\r\n\r\n    this.textTransform = '';\r\n    if (angle !== 0) {\r\n      this.textTransform = `rotate(${angle})`;\r\n      this.textAnchor = 'end';\r\n      this.verticalSpacing = 10;\r\n    }\r\n  }\r\n\r\n  getRotationAngle(ticks) {\r\n    let angle = 0;\r\n    for (var i = 0; i < ticks.length; i++) {\r\n      let tick = ticks[i].toString();\r\n      if (tick.length > this.maxTicksLength) {\r\n        this.maxTicksLength = tick.length;\r\n      }\r\n    }\r\n\r\n    let len = Math.min(this.maxTicksLength, this.maxAllowedLength);\r\n    let charWidth = 8; // need to measure this\r\n    let wordWidth = len * charWidth;\r\n\r\n    let baseWidth = wordWidth;\r\n    let maxBaseWidth = Math.floor(this.width / ticks.length);\r\n\r\n    // calculate optimal angle\r\n    while(baseWidth > maxBaseWidth && angle > -90) {\r\n      angle -= 30;\r\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\r\n    }\r\n\r\n    return angle;\r\n  }\r\n\r\n  getTicks() {\r\n    let ticks;\r\n    let maxTicks = this.getMaxTicks();\r\n\r\n    if (this.tickValues) {\r\n      ticks = this.tickValues;\r\n    } else if (this.scale.ticks) {\r\n      ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\r\n      if (ticks.length > maxTicks) {\r\n        if (this.tickArguments) {\r\n          this.tickArguments[0] = Math.min(this.tickArguments[0], maxTicks);\r\n        } else {\r\n          this.tickArguments = [maxTicks];\r\n        }\r\n        ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\r\n      }\r\n    } else {\r\n      ticks = this.scale.domain();\r\n      ticks = reduceTicks(ticks, maxTicks);\r\n    }\r\n    return ticks;\r\n  }\r\n\r\n  getMaxTicks() {\r\n    let tickWidth = 20;\r\n    return Math.floor(this.width / tickWidth);\r\n  }\r\n\r\n  tickTransform(tick) {\r\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\r\n  }\r\n\r\n  gridLineTransform() {\r\n    return `translate(0,${-this.verticalSpacing - 5})`;\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[yAxis]',\r\n  template: `\r\n    <svg:g\r\n      [attr.class]=\"yAxisClassName\"\r\n      [attr.transform]=\"transform\">\r\n      <svg:g yAxisTicks\r\n        [tickFormatting]=\"tickFormatting\"\r\n        [tickArguments]=\"tickArguments\"\r\n        [tickStroke]=\"tickStroke\"\r\n        [scale]=\"yScale\"\r\n        [orient]=\"yOrient\"\r\n        [showGridLines]=\"showGridLines\"\r\n        [height]=\"dims.height\"\r\n      />\r\n\r\n      <svg:g axisLabel\r\n        *ngIf=\"showLabel\"\r\n        [label]=\"labelText\"\r\n        [offset]=\"80\"\r\n        [orient]=\"yOrient\"\r\n        [height]=\"dims.height\"\r\n        [width]=\"dims.width\">\r\n      </svg:g>\r\n    </svg:g>\r\n  `\r\n})\r\nexport class YAxis implements OnChanges {\r\n  @Input() yScale;\r\n  @Input() dims;\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() showLabel;\r\n  @Input() labelText;\r\n  @Input() yAxisTickInterval;\r\n\r\n  yAxisTickCount: any;\r\n  tickArguments: any;\r\n  offset: any;\r\n  transform: any;\r\n  yAxisOffset: any;\r\n  yOrient: any;\r\n\r\n  constructor() {\r\n    Object.assign(this, {\r\n      yAxisClassName: 'y axis',\r\n      yOrient: 'left',\r\n      fill: 'none',\r\n      stroke: '#ccc',\r\n      tickStroke: '#ccc',\r\n      strokeWidth: '1',\r\n      yAxisOffset: -5,\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.offset = this.yAxisOffset;\r\n    if (this.yOrient === 'right') {\r\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\r\n    } else {\r\n      this.transform = `translate(${this.offset} , 0)`;\r\n    }\r\n\r\n    if (this.yAxisTickCount !== undefined) {\r\n      this.tickArguments = [this.yAxisTickCount];\r\n    }\r\n\r\n    if (typeof this.yAxisTickInterval !== 'undefined') {\r\n      // todo we need to change this, because the function names have changed: https://github.com/d3/d3/blob/master/CHANGES.md#time-intervals-d3-time\r\n      // this.tickArguments = [d3.time[this.yAxisTickInterval.unit], this.yAxisTickInterval.interval];\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { trimLabel } from '../trim-label.helper';\r\nimport { reduceTicks } from './ticks.helper';\r\n\r\n@Component({\r\n  selector: 'g[yAxisTicks]',\r\n  template: `\r\n    <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\r\n      [attr.transform]=\"transform(tick)\" >\r\n      <title>{{tickFormat(tick)}}</title>\r\n      <svg:text\r\n        stroke-width=\"0.01\"\r\n        [attr.dy]=\"dy\"\r\n        [attr.x]=\"x1\"\r\n        [attr.y]=\"y1\"\r\n        [attr.text-anchor]=\"textAnchor\"\r\n\r\n        [style.font-size]=\"'12px'\">\r\n        {{trimLabel(tickFormat(tick))}}\r\n      </svg:text>\r\n\r\n      <svg:g\r\n        *ngIf=\"showGridLines\"\r\n        [attr.transform]=\"gridLineTransform()\">\r\n\r\n        <svg:line\r\n          class=\"gridline-path gridline-path-horizontal gridline-path-shadow\"\r\n          x1=\"0\"\r\n          [attr.x2]=\"gridLineWidth\" />\r\n        <svg:line\r\n          class=\"gridline-path gridline-path-horizontal\"\r\n          x1=\"0\"\r\n          [attr.x2]=\"gridLineWidth\"\r\n          y1=\"1\"\r\n          y2=\"1\" />\r\n      </svg:g>\r\n    </svg:g>\r\n  `\r\n})\r\nexport class YAxisTicks implements OnChanges {\r\n  @Input() scale;\r\n  @Input() orient;\r\n  @Input() tickArguments = [5];\r\n  @Input() tickValues;\r\n  @Input() tickStroke = '#ccc';\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() height;\r\n\r\n  innerTickSize: any;\r\n  tickPadding: any;\r\n  tickSpacing: any;\r\n  verticalSpacing: any;\r\n  textAnchor: any;\r\n  dy: any;\r\n  x1: any;\r\n  x2: any;\r\n  y1: any;\r\n  y2: any;\r\n  adjustedScale: any;\r\n  transform: any;\r\n  tickFormat: any;\r\n  ticks: any;\r\n\r\n  constructor() {\r\n    Object.assign(this, {\r\n      innerTickSize: 6,\r\n      outerTickSize: 6,\r\n      tickPadding: 3,\r\n      rotateLabels: false,\r\n      verticalSpacing: 20,\r\n      textAnchor: 'middle',\r\n      trimLabel: trimLabel\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    var scale;\r\n\r\n    var sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\r\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\r\n\r\n    scale = this.scale;\r\n    this.ticks = this.getTicks();\r\n\r\n    if (this.tickFormatting) {\r\n      this.tickFormat = this.tickFormatting;\r\n    } else if (scale.tickFormat) {\r\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\r\n    } else {\r\n      this.tickFormat = function(d) {\r\n        return d;\r\n      };\r\n    }\r\n\r\n    this.adjustedScale = scale.bandwidth ? function(d) {\r\n      return scale(d) + scale.bandwidth() * 0.5;\r\n    } : scale;\r\n\r\n    switch (this.orient) {\r\n      case \"top\":\r\n        this.transform = function(tick) {\r\n          return \"translate(\" + this.adjustedScale(tick) + \",0)\";\r\n        };\r\n        this.textAnchor = \"middle\";\r\n        this.y2 = this.innerTickSize * sign;\r\n        this.y1 = this.tickSpacing * sign;\r\n        this.dy = sign < 0 ? \"0em\" : \".71em\";\r\n        break;\r\n      case \"bottom\":\r\n        this.transform = function(tick) {\r\n          return \"translate(\" + this.adjustedScale(tick) + \",0)\";\r\n        };\r\n        this.textAnchor = \"middle\";\r\n        this.y2 = this.innerTickSize * sign;\r\n        this.y1 = this.tickSpacing * sign;\r\n        this.dy = sign < 0 ? \"0em\" : \".71em\";\r\n        break;\r\n      case \"left\":\r\n        this.transform = function(tick) {\r\n          return \"translate(0,\" + this.adjustedScale(tick) + \")\";\r\n        };\r\n        this.textAnchor = \"end\";\r\n        this.x2 = this.innerTickSize * -sign;\r\n        this.x1 = this.tickSpacing * -sign;\r\n        this.dy = \".32em\";\r\n        break;\r\n      case \"right\":\r\n        this.transform = function(tick) {\r\n          return \"translate(0,\" + this.adjustedScale(tick) + \")\";\r\n        };\r\n        this.textAnchor = \"start\";\r\n        this.x2 = this.innerTickSize * -sign;\r\n        this.x1 = this.tickSpacing * -sign;\r\n        this.dy = \".32em\";\r\n        break;\r\n    }\r\n  }\r\n\r\n  getTicks() {\r\n    let ticks;\r\n    let maxTicks = this.getMaxTicks();\r\n\r\n    if (this.tickValues) {\r\n      ticks = this.tickValues;\r\n    } else if (this.scale.ticks) {\r\n      ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\r\n      if (ticks.length > maxTicks) {\r\n        if (this.tickArguments) {\r\n          this.tickArguments[0] = Math.min(this.tickArguments[0], maxTicks);\r\n        } else {\r\n          this.tickArguments = [maxTicks];\r\n        }\r\n        ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\r\n      }\r\n    } else {\r\n      ticks = this.scale.domain();\r\n      ticks = reduceTicks(ticks, maxTicks);\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  getMaxTicks() {\r\n    let tickHeight = 20;\r\n    return Math.floor(this.height / tickHeight);\r\n  }\r\n\r\n  tickTransform(tick) {\r\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\r\n  }\r\n\r\n  gridLineTransform() {\r\n    return `translate(0,${this.verticalSpacing})`;\r\n  }\r\n\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {AxisLabel} from \"./axis-label.component\";\r\nimport {XAxis} from \"./x-axis.component\";\r\nimport {XAxisTicks} from \"./x-axis-ticks.component\";\r\nimport {YAxis} from \"./y-axis.component\";\r\nimport {YAxisTicks} from \"./y-axis-ticks.component\";\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AxisLabel, XAxis, XAxisTicks, YAxis, YAxisTicks],\r\n  exports: [AxisLabel, XAxis, XAxisTicks, YAxis, YAxisTicks]\r\n})\r\nexport class AxesModule {}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Injectable,\r\n  Injector,\r\n  ReflectiveInjector,\r\n  ViewContainerRef,\r\n  ResolvedReflectiveProvider,\r\n  Type\r\n} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class InjectionService {\r\n\r\n  constructor(\r\n    private applicationRef: ApplicationRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private injector: Injector) {\r\n  }\r\n\r\n  getRootViewContainerRef(): ViewContainerRef {\r\n    // The only way for now (by @mhevery)\r\n    // https://github.com/angular/angular/issues/6446\r\n    // https://github.com/angular/angular/issues/9293\r\n    // see: https://github.com/valor-software/ng2-bootstrap/components/utils/components-helper.service.ts\r\n    const comps = this.applicationRef.components;\r\n\r\n    if(!comps.length) {\r\n      throw new Error(`ApplicationRef instance not found`);\r\n    }\r\n\r\n    return this.applicationRef['_rootComponents'][0]['_hostElement'].vcRef;\r\n  }\r\n\r\n  appendNextToLocation<T>(\r\n    componentClass: Type<T>,\r\n    location: ViewContainerRef,\r\n    providers?: ResolvedReflectiveProvider[]): ComponentRef<T> {\r\n\r\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);\r\n    let parentInjector = location.parentInjector;\r\n    let childInjector = parentInjector;\r\n\r\n    if (providers && providers.length) {\r\n      childInjector = ReflectiveInjector.fromResolvedProviders(providers, parentInjector);\r\n    }\r\n\r\n    return location.createComponent(componentFactory, location.length, childInjector);\r\n  }\r\n\r\n  appendNextToRoot<T>(\r\n    componentClass: Type<T>,\r\n    componentOptionsClass?: any,\r\n    options?: any): ComponentRef<T> {\r\n\r\n    let providers;\r\n    let location = this.getRootViewContainerRef();\r\n\r\n    if(componentOptionsClass && options) {\r\n      providers = ReflectiveInjector.resolve([\r\n       { provide: componentOptionsClass, useValue: options }\r\n     ]);\r\n    }\r\n\r\n    return this.appendNextToLocation(componentClass, location, providers);\r\n  }\r\n}\r\n","// Ensure we don't duplicate ids\r\n// during our session\r\nlet cache = {};\r\n\r\n/**\r\n * Unique Object ID Generation.\r\n * Example: `571785e57b215b3968f25c3c`\r\n */\r\nexport default function ObjectId() {\r\n  /* tslint:disable:no-bitwise */\r\n  const timestamp = (new Date().getTime() / 1000 | 0).toString(16);\r\n  const id = timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\r\n      return (Math.random() * 16 | 0).toString(16);\r\n    }).toLowerCase();\r\n  /* tslint:enable */\r\n\r\n  // ensure not already used\r\n  if (!cache[id]) {\r\n    cache[id] = true;\r\n    return id;\r\n  }\r\n\r\n  return ObjectId();\r\n};\r\n","export enum PlacementTypes {\r\n  top = 'top' as any,\r\n  bottom = 'bottom' as any,\r\n  left = 'left' as any,\r\n  right = 'right' as any\r\n}\r\n","export enum StyleTypes {\r\n  popover = 'popover' as any,\r\n  tooltip = 'tooltip' as any\r\n}\r\n","export enum AlignmentTypes {\r\n  left = 'left' as any,\r\n  center = 'center' as any,\r\n  right = 'right' as any\r\n}\r\n","export enum ShowTypes {\r\n  all = 'all' as any,\r\n  focus = 'focus' as any,\r\n  mouseover = 'mouseover' as any\r\n}\r\n","﻿export function debounce(func, wait, immediate) {\r\n  var timeout, args, context, timestamp, result;\r\n  return function() {\r\n    context = this;\r\n    args = arguments;\r\n    timestamp = new Date();\r\n    var later = function() {\r\n      var last: any = new Date().getTime() - timestamp;\r\n      if (last < wait) {\r\n        timeout = setTimeout(later, wait - last);\r\n      } else {\r\n        timeout = null;\r\n        if (!immediate) {\r\n          result = func.apply(context, args);\r\n        }\r\n      }\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    if (!timeout) {\r\n      timeout = setTimeout(later, wait);\r\n    }\r\n    if (callNow) {\r\n      result = func.apply(context, args);\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Debounce decorator\r\n *\r\n *  class MyClass {\r\n *    debounceable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function debounceable(duration, immediate) {\r\n  return function innerDecorator(target, key, descriptor) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: descriptor.enumerable,\r\n      get: function getter() {\r\n        Object.defineProperty(this, key, {\r\n          configurable: true,\r\n          enumerable: descriptor.enumerable,\r\n          value: debounce(descriptor.value, duration, immediate)\r\n        });\r\n\r\n        return this[key];\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle a function\r\n * @param  {any}    func    function to execute\r\n * @param  {number} wait    duration to wait\r\n * @param  {any}    options options\r\n */\r\nexport function throttle(func: any, wait: number, options?: any) {\r\n  options = options || {};\r\n  let context;\r\n  let args;\r\n  let result;\r\n  let timeout = null;\r\n  let previous = 0;\r\n\r\n  function later() {\r\n    previous = options.leading === false ? 0 : +new Date();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n  }\r\n\r\n  return function() {\r\n    let now = +new Date();\r\n\r\n    if (!previous && options.leading === false) {\r\n      previous = now;\r\n    }\r\n\r\n    let remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function throttleable (duration: number, options?: any) {\r\n  return function innerDecorator (target, key, descriptor) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: descriptor.enumerable,\r\n      get: function getter () {\r\n        Object.defineProperty(this, key, {\r\n          configurable: true,\r\n          enumerable: descriptor.enumerable,\r\n          value: throttle(descriptor.value, duration, options)\r\n        });\r\n\r\n        return this[key];\r\n      }\r\n    };\r\n  };\r\n}\r\n","const caretOffset = 7;\r\n\r\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\r\n  let result;\r\n\r\n  if (alignment === 'top') {\r\n    result = elDimensions.top - caretOffset;\r\n  }\r\n\r\n  if (alignment === 'bottom') {\r\n    result = elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\r\n  }\r\n\r\n  if (alignment === 'center') {\r\n    result = elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\r\n  let result;\r\n\r\n  if (alignment === 'left') {\r\n    return elDimensions.left - caretOffset;\r\n  }\r\n\r\n  if (alignment === 'right') {\r\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\r\n  }\r\n\r\n  if (alignment === 'center') {\r\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Position helper for the popover directive.\r\n */\r\nexport class PositionHelper {\r\n\r\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\r\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n\r\n    if (result + popoverDimensions.height > window.innerHeight) {\r\n      result = window.innerHeight - popoverDimensions.height;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\r\n    let result;\r\n\r\n    if (alignment === 'top') {\r\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\r\n    }\r\n\r\n    if (alignment === 'bottom') {\r\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\r\n    }\r\n\r\n    let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\r\n      result += (popoverPosition + popoverDimensions.height - window.innerHeight);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\r\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n\r\n    if (result + popoverDimensions.width > window.innerWidth) {\r\n      result = window.innerWidth - popoverDimensions.width;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\r\n    let result;\r\n\r\n    if (alignment === 'left') {\r\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\r\n    }\r\n\r\n    if (alignment === 'right') {\r\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\r\n    }\r\n\r\n    let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\r\n      result += (popoverPosition + popoverDimensions.width - window.innerWidth);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Checks if the element's position should be flipped\r\n   */\r\n  static shouldFlip(elDimensions, popoverDimensions, placement, alignment, spacing) {\r\n    let flip = false;\r\n\r\n    if (placement === 'right') {\r\n      let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n      if (popoverPosition + popoverDimensions.width + spacing > window.innerWidth) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'left') {\r\n      let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n      if (popoverPosition - spacing < 0) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'top') {\r\n      let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n      if (popoverPosition - spacing < 0) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'bottom') {\r\n      let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n      if (popoverPosition + popoverDimensions.height + spacing > window.innerHeight) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    return flip;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PlacementTypes } from './placement.type';\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\n\r\n@Injectable()\r\nexport class TooltipOptions {\r\n\r\n  id: string;\r\n  title: string;\r\n  template: any;\r\n  host: any;\r\n  showCaret: boolean;\r\n  type: StyleTypes;\r\n  placement: PlacementTypes;\r\n  alignment: AlignmentTypes;\r\n  spacing: number;\r\n  cssClass: string;\r\n  context: any;\r\n\r\n  constructor(opts) {\r\n    Object.assign(this, opts);\r\n  }\r\n\r\n}\r\n","import {\r\n  Component, Inject, ElementRef, AfterViewInit,\r\n  HostListener, ViewChild, HostBinding, Renderer,\r\n  trigger, state, transition, style, animate\r\n} from '@angular/core';\r\n\r\nimport { throttleable } from '../../utils/throttle';\r\nimport { PositionHelper } from './position.helper';\r\nimport { TooltipOptions } from './tooltip-options';\r\n\r\nimport { PlacementTypes } from './placement.type';\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\n\r\n@Component({\r\n  selector: 'swui-tooltip-content',\r\n  template: `\r\n    <div>\r\n      <span\r\n        #caretElm\r\n        [hidden]=\"!showCaret\"\r\n        class=\"tooltip-caret position-{{this.placement}}\">\r\n      </span>\r\n      <div class=\"tooltip-content\">\r\n        <span *ngIf=\"!title\">\r\n          <template\r\n            [ngTemplateOutlet]=\"template\"\r\n            [ngOutletContext]=\"{ model: context }\">\r\n          </template>\r\n        </span>\r\n        <span\r\n          *ngIf=\"title\"\r\n          [innerHTML]=\"title\">\r\n        </span>\r\n      </div>\r\n    </div>\r\n  `,\r\n  animations: [\r\n    trigger('visibilityChanged', [\r\n      state('active', style({ opacity: 1, 'pointer-events': 'auto' })),\r\n      transition('void => *', [\r\n        style({\r\n          opacity: 0,\r\n          'pointer-events': 'none', // disable pointer events so there is no interference during animation\r\n          // transform: 'translate3d(0, 0, 0) perspective(10px) rotateX(10deg)'\r\n          transform: 'translate3d(0, 0, 0)'\r\n        }),\r\n        animate('0.3s ease-out')\r\n      ]),\r\n      transition('* => void', [\r\n        style({ opacity: 1 }),\r\n        animate('0.2s ease-out')\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class TooltipContentComponent implements AfterViewInit {\r\n\r\n  @ViewChild('caretElm') caretElm;\r\n\r\n  @HostBinding('class')\r\n  get cssClasses() {\r\n    let clz = 'swui-tooltip-content';\r\n    clz += ` position-${this.placement}`;\r\n    clz += ` type-${this.type}`;\r\n    clz += ` ${this.cssClass}`;\r\n    return clz;\r\n  }\r\n\r\n  @HostBinding('@visibilityChanged')\r\n  get visibilityChanged() {\r\n    return 'active';\r\n  }\r\n\r\n  private host: any;\r\n  private showCaret: boolean;\r\n  private type: StyleTypes;\r\n  private placement: PlacementTypes;\r\n  private alignment: AlignmentTypes;\r\n  private spacing: number;\r\n  private cssClass: string;\r\n\r\n  constructor(\r\n    public element: ElementRef,\r\n    private renderer: Renderer,\r\n    @Inject(TooltipOptions) options: TooltipOptions) {\r\n\r\n    Object.assign(this, options);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(this.position.bind(this), 0);\r\n  }\r\n\r\n  position() {\r\n    let nativeElm = this.element.nativeElement;\r\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\r\n    const elmDim = nativeElm.getBoundingClientRect();\r\n\r\n    this.checkFlip(hostDim, elmDim);\r\n    this.positionContent(nativeElm, hostDim, elmDim);\r\n\r\n    if(this.showCaret) {\r\n      this.positionCaret(hostDim, elmDim);\r\n    }\r\n  }\r\n\r\n  positionContent(nativeElm, hostDim, elmDim) {\r\n    let top = 0;\r\n    let left = 0;\r\n\r\n    if (this.placement === PlacementTypes.right) {\r\n      left = hostDim.left + hostDim.width + this.spacing;\r\n      top = PositionHelper.calculateVerticalAlignment(\r\n        hostDim,\r\n        elmDim,\r\n        this.alignment);\r\n    } else if (this.placement === PlacementTypes.left) {\r\n      left = hostDim.left - elmDim.width - this.spacing;\r\n      top = PositionHelper.calculateVerticalAlignment(\r\n        hostDim,\r\n        elmDim,\r\n        this.alignment);\r\n    } else if (this.placement === PlacementTypes.top) {\r\n      top = hostDim.top - elmDim.height - this.spacing;\r\n      left = PositionHelper.calculateHorizontalAlignment(\r\n        hostDim,\r\n        elmDim,\r\n        this.alignment);\r\n    } else if (this.placement === PlacementTypes.bottom) {\r\n      top = hostDim.top + hostDim.height + this.spacing;\r\n      left = PositionHelper.calculateHorizontalAlignment(\r\n        hostDim,\r\n        elmDim,\r\n        this.alignment);\r\n    }\r\n\r\n    this.renderer.setElementStyle(nativeElm, 'top', `${top}px`);\r\n    this.renderer.setElementStyle(nativeElm, 'left', `${left}px`);\r\n  }\r\n\r\n  positionCaret(hostDim, elmDim) {\r\n    let caretElm = this.caretElm.nativeElement;\r\n    const caretDimensions = caretElm.getBoundingClientRect();\r\n\r\n    let top = 0;\r\n    let left = 0;\r\n\r\n    if (this.placement === PlacementTypes.right) {\r\n      left = -7;\r\n      top = PositionHelper.calculateVerticalCaret(\r\n        hostDim,\r\n        elmDim,\r\n        caretDimensions,\r\n        this.alignment);\r\n    } else if (this.placement === PlacementTypes.left) {\r\n      left = elmDim.width;\r\n      top = PositionHelper.calculateVerticalCaret(\r\n        hostDim,\r\n        elmDim,\r\n        caretDimensions,\r\n        this.alignment);\r\n    } else if (this.placement === PlacementTypes.top) {\r\n      top = elmDim.height;\r\n      left = PositionHelper.calculateHorizontalCaret(\r\n        hostDim,\r\n        elmDim,\r\n        caretDimensions,\r\n        this.alignment);\r\n    } else if (this.placement === PlacementTypes.bottom) {\r\n      top = -7;\r\n      left = PositionHelper.calculateHorizontalCaret(\r\n        hostDim,\r\n        elmDim,\r\n        caretDimensions,\r\n        this.alignment);\r\n    }\r\n\r\n    this.renderer.setElementStyle(caretElm, 'top', `${top}px`);\r\n    this.renderer.setElementStyle(caretElm, 'left', `${left}px`);\r\n  }\r\n\r\n  checkFlip(hostDim, elmDim) {\r\n    const shouldFlip = PositionHelper.shouldFlip(\r\n      hostDim,\r\n      elmDim,\r\n      this.placement,\r\n      this.alignment,\r\n      this.spacing);\r\n\r\n    if(shouldFlip) {\r\n      if (this.placement === PlacementTypes.right) {\r\n        this.placement = PlacementTypes.left;\r\n      } else if (this.placement === PlacementTypes.left) {\r\n        this.placement = PlacementTypes.right;\r\n      } else if (this.placement === PlacementTypes.top) {\r\n        this.placement = PlacementTypes.bottom;\r\n      } else if (this.placement === PlacementTypes.bottom) {\r\n        this.placement = PlacementTypes.top;\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  @throttleable(100)\r\n  onWindowResize() {\r\n    this.position();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TooltipService {\r\n\r\n  components = new Map();\r\n\r\n  register(id: string, component: any, callback: any) {\r\n    this.components.set(id, { component, callback });\r\n  }\r\n\r\n  destroy(id: string) {\r\n    const obj: any = this.components.get(id);\r\n\r\n    if(obj && obj.component) {\r\n      if(obj.callback) {\r\n        obj.callback(true);\r\n      }\r\n      obj.component.destroy();\r\n      this.components.delete(id);\r\n    }\r\n  }\r\n\r\n  destroyAll() {\r\n    this.components.forEach((v: any, k: string) => this.destroy(k));\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewContainerRef,\r\n  ReflectiveInjector,\r\n  ComponentRef,\r\n  ElementRef,\r\n  Renderer,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { InjectionService } from '../../utils/injection.service';\r\nimport ObjectId from '../../utils/object-id';\r\n\r\nimport { PlacementTypes } from './placement.type';\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\nimport { ShowTypes } from './show.type';\r\n\r\nimport { TooltipContentComponent } from './tooltip.component';\r\nimport { TooltipOptions } from './tooltip-options';\r\nimport { TooltipService } from './tooltip.service';\r\n\r\n@Directive({ selector: '[swui-tooltip]' })\r\nexport class TooltipDirective implements OnDestroy {\r\n\r\n  @Input() tooltipCssClass: string = '';\r\n  @Input() tooltipTitle: string = '';\r\n  @Input() tooltipAppendToBody: boolean = true;\r\n  @Input() tooltipSpacing: number = 0;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipShowCaret: boolean = true;\r\n  @Input() tooltipPlacement: PlacementTypes = PlacementTypes.top;\r\n  @Input() tooltipAlignment: AlignmentTypes = AlignmentTypes.center;\r\n  @Input() tooltipType: StyleTypes = StyleTypes.popover;\r\n  @Input() tooltipCloseOnClickOutside: boolean = true;\r\n  @Input() tooltipCloseOnMouseLeave: boolean = true;\r\n  @Input() tooltipHideTimeout: number = 300;\r\n  @Input() tooltipShowTimeout: number = 100;\r\n  @Input() tooltipTemplate: any;\r\n  @Input() tooltipShowEvent: ShowTypes = ShowTypes.all;\r\n  @Input() tooltipContext: any;\r\n\r\n  @Output() onShow = new EventEmitter();\r\n  @Output() onHide = new EventEmitter();\r\n\r\n  private componentId: string;\r\n  private timeout: any;\r\n\r\n  private mouseLeaveEvent: any;\r\n  private focusOutEvent: any;\r\n  private mouseLeaveContentEvent: any;\r\n  private mouseEnterContentEvent: any;\r\n  private documentClickEvent: any;\r\n\r\n  constructor(\r\n    private tooltipService: TooltipService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private injectionService: InjectionService,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.hide(true);\r\n  }\r\n\r\n  @HostListener('focusin')\r\n  onFocus() {\r\n    if(this.tooltipShowEvent === ShowTypes.all ||\r\n       this.tooltipShowEvent === ShowTypes.focus) {\r\n       this.show();\r\n     }\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter() {\r\n    if(this.tooltipShowEvent === ShowTypes.all ||\r\n       this.tooltipShowEvent === ShowTypes.mouseover) {\r\n       this.show();\r\n     }\r\n  }\r\n\r\n  show(immediate?: boolean) {\r\n    if (this.componentId || this.tooltipDisabled) {\r\n      return;\r\n    }\r\n    const time = immediate ? 0 : this.tooltipShowTimeout;\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.tooltipService.destroyAll();\r\n\r\n      this.componentId = ObjectId();\r\n\r\n      let tooltip = this.injectComponent();\r\n      this.tooltipService.register(\r\n        this.componentId, tooltip, this.hide.bind(this));\r\n\r\n      // add a tiny timeout to avoid event re-triggers\r\n      setTimeout(() => {\r\n        this.addHideListeners(tooltip.instance.element.nativeElement);\r\n      }, 10);\r\n\r\n      this.onShow.emit(true);\r\n    }, time);\r\n  }\r\n\r\n  addHideListeners(tooltip) {\r\n    // on mouse enter, cancel the hide triggered by the leave\r\n    let entered = false;\r\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\r\n      entered = true;\r\n      clearTimeout(this.timeout);\r\n    });\r\n\r\n    // content mouse leave listener\r\n    if(this.tooltipCloseOnMouseLeave) {\r\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\r\n        entered = false;\r\n        this.hide();\r\n      });\r\n    }\r\n\r\n    // content close on click outside\r\n    if(this.tooltipCloseOnClickOutside) {\r\n      this.documentClickEvent = this.renderer.listen(document, 'click', (event) => {\r\n        const contains = tooltip.contains(event.target);\r\n        if(!contains) {\r\n          this.hide();\r\n        }\r\n      });\r\n    }\r\n\r\n    // native elm reference\r\n    let element = this.elementRef.nativeElement;\r\n\r\n    // mouse leave listener\r\n    const addLeaveListener =\r\n      this.tooltipShowEvent === ShowTypes.all ||\r\n      this.tooltipShowEvent === ShowTypes.mouseover;\r\n\r\n    if(addLeaveListener) {\r\n     this.mouseLeaveEvent = this.renderer.listen(element, 'mouseleave', () => {\r\n       if(!entered) {\r\n         this.hide();\r\n       }\r\n     });\r\n    }\r\n\r\n    // foucs leave listener\r\n    const addFocusListener =\r\n      this.tooltipShowEvent === ShowTypes.all ||\r\n      this.tooltipShowEvent === ShowTypes.focus;\r\n\r\n    if(addFocusListener) {\r\n     this.focusOutEvent = this.renderer.listen(element, 'blur', () => {\r\n       if(!entered) {\r\n         this.hide();\r\n       }\r\n     });\r\n    }\r\n  }\r\n\r\n  injectComponent(): ComponentRef<TooltipContentComponent> {\r\n    const options = this.createBoundOptions();\r\n\r\n    if(this.tooltipAppendToBody) {\r\n      // append to the body, different arguments\r\n      // since we need to bind the options to the\r\n      // root component instead of this one\r\n      return this.injectionService.appendNextToRoot(\r\n        TooltipContentComponent,\r\n        TooltipOptions,\r\n        options);\r\n    } else {\r\n      // bind our options to this component\r\n      let binding = ReflectiveInjector.resolve([\r\n        { provide: TooltipOptions, useValue: options }\r\n      ]);\r\n\r\n      // inject next to this component\r\n      return this.injectionService.appendNextToLocation(\r\n        TooltipContentComponent,\r\n        this.viewContainerRef,\r\n        binding);\r\n    }\r\n  }\r\n\r\n  hide(immediate?: boolean) {\r\n    if(!this.componentId) {\r\n      return;\r\n    }\r\n\r\n    const time = immediate ? 0 : this.tooltipHideTimeout;\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      // destroy component\r\n      this.tooltipService.destroy(this.componentId);\r\n\r\n      // remove events\r\n      if(this.mouseLeaveEvent) {\r\n        this.mouseLeaveEvent();\r\n      }\r\n      if(this.focusOutEvent) {\r\n        this.focusOutEvent();\r\n      }\r\n      if(this.mouseLeaveContentEvent) {\r\n        this.mouseLeaveContentEvent();\r\n      }\r\n      if(this.mouseEnterContentEvent) {\r\n        this.mouseEnterContentEvent();\r\n      }\r\n      if(this.documentClickEvent) {\r\n        this.documentClickEvent();\r\n      }\r\n\r\n      // emit events\r\n      this.onHide.emit(true);\r\n      this.componentId = undefined;\r\n    }, time);\r\n  }\r\n\r\n  private createBoundOptions(): TooltipOptions {\r\n    return new TooltipOptions({\r\n      id: this.componentId,\r\n      title: this.tooltipTitle,\r\n      template: this.tooltipTemplate,\r\n      host: this.viewContainerRef.element,\r\n      placement: this.tooltipPlacement,\r\n      alignment: this.tooltipAlignment,\r\n      type: this.tooltipType,\r\n      showCaret: this.tooltipShowCaret,\r\n      cssClass: this.tooltipCssClass,\r\n      spacing: this.tooltipSpacing,\r\n      context: this.tooltipContext\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TooltipDirective } from './tooltip.directive';\r\nimport { TooltipContentComponent } from './tooltip.component';\r\nimport { TooltipService } from './tooltip.service';\r\n\r\nimport { InjectionService } from '../../utils/injection.service';\r\n\r\n@NgModule({\r\n  declarations: [TooltipContentComponent, TooltipDirective],\r\n  providers: [InjectionService, TooltipService],\r\n  exports: [TooltipContentComponent, TooltipDirective],\r\n  imports: [CommonModule],\r\n  entryComponents: [TooltipContentComponent]\r\n})\r\nexport class TooltipModule { }\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'g[circleSeries]',\r\n  template: `\r\n    <svg:g *ngFor=\"let circle of circles\">\r\n      <svg:rect\r\n        *ngIf=\"barVisible\"\r\n        [attr.x]=\"circle.cx - circle.radius\"\r\n        [attr.y]=\"circle.cy\"\r\n        [attr.width]=\"circle.radius * 2\"\r\n        [attr.height]=\"circle.height\"\r\n        [attr.fill]=\"color\"\r\n        class=\"tooltip-bar\"\r\n      />\r\n\r\n      <svg:g circle\r\n        [attr.class]=\"className\"\r\n        [cx]=\"circle.cx\"\r\n        [cy]=\"circle.cy\"\r\n        [r]=\"circle.radius\"\r\n        [fill]=\"color\"\r\n        [stroke]=\"strokeColor\"\r\n        [pointerEvents]=\"circle.value === 0 ? 'none': 'all'\"\r\n        [data]=\"circle.value\"\r\n        [classNames]=\"circle.classNames\"\r\n        (clickHandler)=\"click($event, circle.label)\"\r\n        [style.opacity]=\"circle.opacity\"\r\n        [style.cursor]=\"'pointer'\"\r\n        \r\n        swui-tooltip\r\n        [tooltipPlacement]=\"'top'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipTitle]=\"circle.tooltipText\"\r\n      />\r\n    </svg:g>\r\n  `\r\n})\r\nexport class CircleSeries implements OnChanges {\r\n  areaPath: any;\r\n  circles: any[];\r\n  barVisible: boolean = false;\r\n\r\n  @Input() data;\r\n  @Input() type = 'standard';\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() color;\r\n  @Input() strokeColor;\r\n  @Input() scaleType;\r\n  @Input() visibleValue;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.circles = this.getCircles();\r\n  }\r\n\r\n  getCircles() {\r\n    return this.data.series.map((d, i) => {\r\n      let value = d.value;\r\n      let label = d.name;\r\n\r\n      if (value) {\r\n        let cx;\r\n        if (this.scaleType === 'time') {\r\n          cx = this.xScale(moment(label).toDate());\r\n        } else if (this.scaleType === 'linear') {\r\n          cx = this.xScale(Number(label));\r\n        } else {\r\n          cx = this.xScale(label);\r\n        }\r\n\r\n        let cy = this.yScale(this.type === 'standard' ? value : d.d1);\r\n        let radius = 5;\r\n        let height = this.yScale.range()[0] - cy;\r\n\r\n        let opacity = 0;\r\n        if (label && this.visibleValue && label.toString() === this.visibleValue.toString()) {\r\n          opacity = 1;\r\n        }\r\n\r\n        return {\r\n          classNames: [`circle-data-${i}`],\r\n          value: value,\r\n          label: label,\r\n          cx: cx,\r\n          cy: cy,\r\n          radius: radius,\r\n          height: height,\r\n          tooltipText: `${label}, ${value}`,\r\n          opacity: opacity\r\n        };\r\n      }\r\n    }).filter((circle) => circle !== undefined);\r\n  }\r\n\r\n  click(value, label) {\r\n    this.clickHandler.emit({\r\n      name: label,\r\n      value: value\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[circle]',\r\n  template: `\r\n    <svg:circle\r\n      [attr.cx]=\"cx\"\r\n      [attr.cy]=\"cy\"\r\n      [attr.r]=\"r\"\r\n      [attr.fill]=\"fill\"\r\n      [attr.stroke]=\"stroke\"\r\n      [attr.opacity]=\"circleOpacity\"\r\n      [attr.class]=\"classNames\"\r\n      [attr.pointer-events]=\"pointerEvents\"\r\n      (click)=\"click()\"\r\n    />\r\n  `\r\n})\r\nexport class Circle implements OnChanges {\r\n  @Input() cx;\r\n  @Input() cy;\r\n  @Input() r;\r\n  @Input() fill;\r\n  @Input() stroke;\r\n  @Input() data;\r\n  @Input() classNames;\r\n  @Input() circleOpacity;\r\n  @Input() pointerEvents;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n\r\n  ngOnChanges() {\r\n    this.classNames = this.classNames.join(' ') + 'circle';\r\n  }\r\n\r\n  click() {\r\n    this.clickHandler.emit(this.data);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[gridPanel]',\r\n  template: `\r\n    <svg:rect\r\n      [attr.height]=\"height\"\r\n      [attr.width]=\"width\"\r\n      [attr.x]=\"x\"\r\n      [attr.y]=\"y\"\r\n      stroke=\"none\"\r\n      [attr.fill]=\"fill\"\r\n      class=\"gridpanel\"\r\n    />\r\n  `\r\n})\r\nexport class GridPanel {\r\n  @Input() path;\r\n  @Input() fill;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() x;\r\n  @Input() y;\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[gridPanelSeries]',\r\n  template: `\r\n    <svg:g gridPanel *ngFor=\"let gridPanel of gridPanels\"\r\n      [height]=\"gridPanel.height\"\r\n      [width]=\"gridPanel.width\"\r\n      [x]=\"gridPanel.x\"\r\n      [y]=\"gridPanel.y\"\r\n      [fill]=\"gridPanel.color\">\r\n    </svg:g>\r\n  `\r\n})\r\nexport class GridPanelSeries implements OnChanges {\r\n  gridPanels: any[];\r\n\r\n  @Input() data;\r\n  @Input() dims;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() orient;\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.gridPanels = this.getGridPanels();\r\n  }\r\n\r\n  getGridPanels() {\r\n    return this.data.map((d, i) => {\r\n      let color = 'rgba(255,255,255,0.02)';\r\n      let offset, width, height, x, y;\r\n\r\n      if (this.orient === 'vertical') {\r\n        let position = this.xScale(d.name);\r\n        let positionIndex = this.xScale.range().indexOf(position);\r\n        if (positionIndex % 2 === 1) {\r\n          color = 'rgba(255,255,255,0)';\r\n        }\r\n        offset = this.xScale.range()[0] / 2;\r\n        width = this.xScale.bandwidth() + 2 * offset;\r\n        height = this.dims.height;\r\n        x = this.xScale(d.name) - offset;\r\n        y = 0;\r\n      } else if (this.orient === 'horizontal') {\r\n        let position = this.yScale(d.name);\r\n        let positionIndex = this.yScale.range().indexOf(position);\r\n        if (positionIndex % 2 === 1) {\r\n          color = 'rgba(255,255,255,0)';\r\n        }\r\n        offset = this.yScale.range()[0] / 2;\r\n        width = this.dims.width;\r\n        height = this.yScale.bandwidth() + 2 * offset;\r\n        x = 0;\r\n        y = this.yScale(d.name) - offset;\r\n      }\r\n\r\n      return {\r\n        name: d.name,\r\n        color: color,\r\n        offset: offset,\r\n        height: height,\r\n        width: width,\r\n        x: x,\r\n        y: y\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[svgLinearGradient]',\n  template: `\n    <svg:linearGradient\n      [id]=\"name\"\n      [attr.x1]=\"x1\"\n      [attr.y1]=\"y1\"\n      [attr.x2]=\"x2\"\n      [attr.y2]=\"y2\">\n      <svg:stop\n        [attr.offset]=\"'0%'\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"startOpacity\"\n      />\n      <svg:stop\n        [attr.offset]=\"'100%'\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"endOpacity\"\n      />\n    </svg:linearGradient>\n  `\n})\nexport class SvgLinearGradient implements OnChanges {\n  @Input() orientation = 'vertical';\n  @Input() color;\n  @Input() name;\n  @Input() startOpacity;\n  @Input() endOpacity = 1;\n\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n\n  ngOnChanges() {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    if (this.orientation === 'horizontal') {\n      this.x2 = '100%';\n    } else if (this.orientation === 'vertical') {\n      this.y1 = '100%';\n    }\n\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[svgRadialGradient]',\n  template: `\n    <svg:radialGradient\n      [id]=\"name\"\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      gradient-units=\"userSpaceOnUse\">\n      <svg:stop\n        offset=\"0%\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"startOpacity\"\n      />\n      <svg:stop\n        offset=\"100%\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"endOpacity\"\n      />\n    </svg:radialGradient>\n  `\n})\nexport class SvgRadialGradient implements OnChanges {\n  cx: number;\n  cy: number;\n  r: string;\n\n  @Input() color;\n  @Input() name;\n  @Input() startOpacity;\n  @Input() endOpacity = 1;\n\n  ngOnChanges() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r = \"30%\";\n  }\n}\n","/// <reference path=\"../node_modules/awesome-typescript-loader/lib/runtime.d.ts\" />\r\n\r\nlet array = require(\"d3-array\");\r\nlet brush = require(\"d3-brush\");\r\nlet color = require(\"d3-color\");\r\nlet format = require(\"d3-format\");\r\nlet interpolate = require(\"d3-interpolate\");\r\nlet scales = require(\"d3-scale\");\r\nlet selection = require(\"d3-selection\");\r\nlet shape = require(\"d3-shape\");\r\nlet hierarchy = require(\"d3-hierarchy\");\r\n\r\nexport default {\r\n  arc: shape.arc,\r\n  area: shape.area,\r\n  brush: brush.brush,\r\n  brushX: brush.brushX,\r\n  brushY: brush.brushY,\r\n  event: selection.event,\r\n  extent: array.extent,\r\n  format: format.format,\r\n  interpolate: interpolate.interpolate,\r\n  line: shape.line,\r\n  max: array.max,\r\n  min: array.min,\r\n  mouse: selection.mouse,\r\n  pie: shape.pie,\r\n  range: array.range,\r\n  rgb: color.rgb,\r\n  selection: selection,\r\n  select: selection.select,\r\n  selectAll: selection.selectAll,\r\n  scaleBand: scales.scaleBand,\r\n  scaleLinear: scales.scaleLinear,\r\n  scaleOrdinal: scales.scaleOrdinal,\r\n  scalePoint: scales.scalePoint,\r\n  scaleQuantile: scales.scaleQuantile,\r\n  scaleTime: scales.scaleTime,\r\n  treemap: hierarchy.treemap,\r\n  stratify: hierarchy.stratify\r\n};\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[timeline]',\r\n  template: `\r\n    <svg:g\r\n      [attr.transform]=\"transform\">\r\n\r\n      <svg:g xAxis\r\n        [xScale]=\"xScale\"\r\n        [dims]=\"dims\"\r\n        [showGridLines]=\"showGridLines\"\r\n      />\r\n\r\n      <svg:g class=\"brush\">\r\n      </svg:g>\r\n\r\n    </svg:g>\r\n  `\r\n})\r\nexport class Timeline implements OnChanges {\r\n  element: HTMLElement;\r\n  dims: any;\r\n  xDomain: any[];\r\n  yDomain: any[];\r\n  xScale: any;\r\n  brush: any;\r\n  transform: string;\r\n  margin = [10, 20, 70, 20];\r\n  initialized: boolean = false;\r\n\r\n  @Input() view;\r\n  @Input() state;\r\n  @Input() results;\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n  @Input() legend;\r\n  @Input() miniChart;\r\n  @Input() autoScale;\r\n  @Input() scaleType;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n  @Output() onDomainChange = new EventEmitter();\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n\r\n    if (!this.initialized) {\r\n      this.addBrush();\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.dims = this.getDims();\r\n    let offsetY = this.view[1] - 150;\r\n\r\n    this.xDomain = this.getXDomain();\r\n    this.xScale = this.getXScale();\r\n\r\n    this.transform = `translate(${ this.margin[3] } , ${ this.margin[0] + offsetY })`;\r\n  }\r\n\r\n  getXDomain() {\r\n    let values = [];\r\n    for (let results of this.results) {\r\n      for (let d of results.series){\r\n        if (!values.includes(d.name)) {\r\n          values.push(d.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    let domain = [];\r\n    if (this.scaleType === 'time') {\r\n      values = values.map(v => moment(v).toDate());\r\n      let min = Math.min(...values);\r\n      let max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      let min = Math.min(...values);\r\n      let max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else {\r\n      domain = values;\r\n    }\r\n    return domain;\r\n  }\r\n\r\n  getYDomain() {\r\n\r\n  }\r\n\r\n  getXScale() {\r\n    let scale;\r\n    if (this.scaleType === 'time') {\r\n      scale = d3.scaleTime()\r\n        .range([0, this.dims.width])\r\n        .domain(this.xDomain);\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = d3.scaleLinear()\r\n        .range([0, this.dims.width])\r\n        .domain(this.xDomain);\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = d3.scalePoint()\r\n        .range([0, this.dims.width])\r\n        .padding(0.1)\r\n        .domain(this.xDomain);\r\n    }\r\n\r\n    return scale;\r\n  }\r\n\r\n  getYScale() {\r\n    d3.scaleLinear()\r\n      .range([this.dims.height, 0])\r\n      .domain(this.yDomain);\r\n  }\r\n\r\n  addBrush() {\r\n    if (this.brush) {\r\n      return;\r\n    }\r\n\r\n    let height = 150 - this.margin[0] - this.margin[2];\r\n    let width = this.view[0];\r\n    if (this.legend) {\r\n      width = width * 9 / 12.0;\r\n    }\r\n    width = width - this.margin[1] - this.margin[3];\r\n\r\n    this.brush = d3.brushX()\r\n      .extent([[0, 0], [width, height]])\r\n      .on(\"brush end\", () => {\r\n        let selection = d3.selection.event.selection || this.xScale.range();\r\n        let newDomain = selection.map(this.xScale.invert);\r\n        this.onDomainChange.emit(newDomain);\r\n      });\r\n\r\n    d3.select(this.element)\r\n      .select('.brush')\r\n      .call(this.brush);\r\n  }\r\n\r\n  getDims() {\r\n    let width = this.view[0];\r\n    let height = 150;\r\n\r\n    if (this.legend) {\r\n      width = width * 9 / 12.0;\r\n    }\r\n\r\n    let dims = {\r\n      width: width - this.margin[1] - this.margin[3],\r\n      height: height - this.margin[0] - this.margin[2]\r\n    };\r\n    return dims;\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges } from '@angular/core';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[area]',\n  template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g svgLinearGradient\n        [color]=\"fill\"\n        orientation=\"vertical\"\n        [name]=\"gradientId\"\n        [startOpacity]=\"startOpacity\"\n        [endOpacity]=\"endOpacity\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"area\"\n      [attr.d]=\"areaPath\"\n      [attr.fill]=\"gradient ? gradientFill : fill\"\n      [attr.opacity]=\"opacity\"\n    />\n  `\n})\nexport class Area implements OnChanges {\n  element: HTMLElement;\n  gradientId: string;\n  gradientFill: string;\n  areaPath: string;\n  initialized: boolean = false;\n\n  @Input() data;\n  @Input() path;\n  @Input() startingPath;\n  @Input() fill;\n  @Input() opacity = 1;\n  @Input() startOpacity = 0.5;\n  @Input() endOpacity = 1;\n  @Input() activeLabel;\n  @Input() gradient: boolean = false;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n\n\n  ngOnChanges() {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update() {\n    let pageUrl = window.location.href;\n    this.gradientId = 'grad' + ObjectId().toString();\n    this.gradientFill = `url(${pageUrl}#${this.gradientId})`;\n\n    this.animateToCurrentForm();\n  }\n\n  loadAnimation() {\n    this.areaPath = this.startingPath;\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.area');\n\n    node.transition().duration(750)\n      .attr('d', this.path);\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, ViewChildren, Renderer } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[areaTooltip]',\r\n  template: `\r\n    <svg:g\r\n      #tooltips\r\n      *ngFor=\"let tooltipArea of tooltipAreas; let i = index\">\r\n      <svg:rect\r\n        class=\"tooltip-area\"\r\n        [attr.x]=\"tooltipArea.x0\"\r\n        y=\"0\"\r\n        [attr.width]=\"tooltipArea.width\"\r\n        [attr.height]=\"height\"\r\n        style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\r\n        (mouseenter)=\"showTooltip(i)\"\r\n        (mouseleave)=\"hideTooltip(i)\"\r\n      />\r\n\r\n      <xhtml:template #tooltipTemplate>\r\n        <xhtml:div\r\n          *ngFor=\"let tooltipItem of tooltipArea.values\"\r\n          class=\"tooltip-item\">\r\n\r\n          <span\r\n            class=\"tooltip-item-color\"\r\n            [style.background-color]=\"colors(tooltipItem.series)\">\r\n          </span>\r\n\r\n          {{tooltipItem.series}}: {{tooltipItem.value}}\r\n        </xhtml:div>\r\n      </xhtml:template>\r\n\r\n      <svg:rect\r\n        class=\"tooltip-anchor\"\r\n        [attr.x]=\"tooltipArea.tooltipAnchor\"\r\n        y=\"0\"\r\n        [attr.width]=\"1\"\r\n        [attr.height]=\"height\"\r\n        style=\"fill: rgb(255, 255, 255);\"\r\n        [style.opacity]=\"anchorOpacity[i]\"\r\n        [style.pointer-events]=\"'none'\"\r\n\r\n        swui-tooltip\r\n        [tooltipPlacement]=\"'right'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipSpacing]=\"5\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n      />\r\n\r\n    </svg:g>\r\n  `\r\n})\r\nexport class AreaTooltip implements OnChanges {\r\n  tooltipAreas: any[];\r\n  anchorOpacity: number[] = new Array();\r\n\r\n  @Input() xSet;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() results;\r\n  @Input() height;\r\n  @Input() colors;\r\n\r\n  @Output() hover = new EventEmitter();\r\n\r\n  @ViewChildren('tooltips') tooltips;\r\n\r\n\r\n  constructor(private renderer:Renderer) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.tooltipAreas = this.getTooltipAreas();\r\n  }\r\n\r\n  getTooltipAreas() {\r\n    let uniqueSet = this.getUniqueValues(this.xSet);\r\n\r\n    uniqueSet = uniqueSet.sort((a, b) => {\r\n      return this.xScale(a) - this.xScale(b);\r\n    });\r\n\r\n    let results = [];\r\n    for (let i = 0; i < uniqueSet.length; i++) {\r\n      let val = uniqueSet[i];\r\n      let ob: any = {};\r\n      ob.tooltipAnchor = this.xScale(val);\r\n\r\n      if (i === 0) {\r\n        ob.x0 = this.xScale(val);\r\n      } else {\r\n        ob.x0 = (this.xScale(uniqueSet[i-1]) + this.xScale(uniqueSet[i])) / 2;\r\n      }\r\n\r\n      if (i === uniqueSet.length - 1) {\r\n        ob.x1 = this.xScale(uniqueSet[i]);\r\n      } else {\r\n        ob.x1 = (this.xScale(uniqueSet[i]) + this.xScale(uniqueSet[i+1])) / 2;\r\n      }\r\n\r\n      ob.width = ob.x1 - ob.x0;\r\n      ob.value = val;\r\n      ob.values = this.getValues(val);\r\n      results.push(ob);\r\n\r\n      this.anchorOpacity[i] = 0;\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  getValues(xVal) {\r\n    let results = [];\r\n    for (let group of this.results) {\r\n      let item = group.series.find(d => d.name.toString() === xVal.toString());\r\n\r\n      if (item) {\r\n        results.push({\r\n          value: item.value,\r\n          name: item.name,\r\n          series: group.name\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  getUniqueValues(array) {\r\n    let results = [];\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n      let val = array[i];\r\n\r\n      let exists = results.find(v => {\r\n        return v.toString() === val.toString();\r\n      });\r\n\r\n      if (!exists) {\r\n        results.push(val);\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  showTooltip(index) {\r\n    let tooltipAnchor = this.tooltips.toArray()[index].nativeElement.children[1];\r\n    let event = new MouseEvent('mouseenter', {bubbles: false});\r\n    this.renderer.invokeElementMethod(tooltipAnchor, 'dispatchEvent', [event]);\r\n    this.anchorOpacity[index] = 0.7;\r\n    this.hover.emit(this.tooltipAreas[index]);\r\n  }\r\n\r\n  hideTooltip(index) {\r\n    let tooltipAnchor = this.tooltips.toArray()[index].nativeElement.children[1];\r\n    let event = new MouseEvent('mouseleave', {bubbles: false});\r\n    this.renderer.invokeElementMethod(tooltipAnchor, 'dispatchEvent', [event]);\r\n    this.anchorOpacity[index] = 0;\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Chart } from \"./charts/chart.component\";\r\nimport { Legend } from \"./legend.component\";\r\nimport { ScaleLegend } from \"./scale-legend.component\";\r\nimport { AxesModule } from \"./axes/axes.module\";\r\nimport { TooltipModule } from \"./tooltip\";\r\nimport { CircleSeries } from \"./circle-series.component\";\r\nimport { Circle } from \"./circle.component\";\r\nimport { GridPanel } from \"./grid-panel.component\";\r\nimport { GridPanelSeries } from \"./grid-panel-series.component\";\r\nimport { SvgLinearGradient } from \"./svg-linear-gradient.component\";\r\nimport { SvgRadialGradient } from \"./svg-radial-gradient.component\";\r\nimport { Timeline } from \"./timeline.component\";\r\nimport { CommonModule as Ng2CommonModule } from \"@angular/common\";\r\nimport { Area } from \"./area.component\";\r\nimport { AreaTooltip } from \"./area-tooltip.component\";\r\n\r\nconst COMPONENTS = [\r\n  Area,\r\n  AreaTooltip,\r\n  Chart,\r\n  Legend,\r\n  ScaleLegend,\r\n  Circle,\r\n  CircleSeries,\r\n  GridPanel,\r\n  GridPanelSeries,\r\n  SvgLinearGradient,\r\n  SvgRadialGradient,\r\n  Timeline\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    Ng2CommonModule,\r\n    AxesModule,\r\n    TooltipModule\r\n  ],\r\n  declarations: [\r\n    ...COMPONENTS\r\n  ],\r\n  exports: [\r\n    Ng2CommonModule,\r\n    AxesModule,\r\n    TooltipModule,\r\n    ...COMPONENTS\r\n  ]\r\n})\r\nexport class CommonModule {\r\n}\r\n","export interface ViewDimensions {\n  width: number;\n  height: number;\n  xOffset: number;\n}\n\nexport function calculateViewDimensions(view, margins, showXLabel, showYLabel, showLegend, columns = 12): ViewDimensions {\n  let width = view[0];\n  let height = view[1];\n  let xOffset = margins[3];\n  // let yOffset = margins[0]; // unused\n  if (showLegend) {\n    width = width * columns / 12;\n  }\n\n  width = width - margins[1] - margins[3];\n  height = height - margins[0] - margins[2];\n\n  if (showXLabel) {\n    height -= 40;\n  }\n\n  if (showYLabel) {\n    width -= 60;\n    xOffset += 60;\n  }\n\n  width = Math.max(0, width);\n  height = Math.max(0, height);\n\n  return {width: width, height: height, xOffset: xOffset};\n}\n","import d3 from '../d3';\r\n\r\nexport var colorSets = [\r\n  {\r\n    'name': 'flame',\r\n    'base': '#590012', // Base Color for Gradients\r\n    'group': 'general',\r\n    'domain': ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\r\n  },\r\n  {\r\n    'name': 'ocean',\r\n    'base': '#0340B9', // Base Color for Gradients\r\n    'group': 'general',\r\n    'domain': ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\r\n  },\r\n  {\r\n    'name': 'forest',\r\n    'base': '#258203', // Base Color for Gradients\r\n    'group': 'general',\r\n    'domain': ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\r\n  },\r\n  {\r\n    'name': 'horizon',\r\n    'base': '#026CCB', // Base Color for Gradients\r\n    'group': 'general',\r\n    'domain': ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\r\n  },\r\n  {\r\n    'name': 'neons',\r\n    'base': '#B20000', // Base Color for Gradients\r\n    'group': 'general',\r\n    'domain': ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\r\n  },\r\n  {\r\n    'name': 'picnic',\r\n    'base': '#A37C00', // Base Color for Gradients\r\n    'group': 'general',\r\n    'domain': ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\r\n  },\r\n  {\r\n    'name': 'night',\r\n    'base': '#48025F',\r\n    'group': 'general',\r\n    'domain': [\"#2B1B5A\", \"#501356\", \"#183356\", \"#28203F\", \"#391B3C\", \"#1E2B3C\", \"#120634\", \"#2D0432\", \"#051932\", \"#453080\", \"#75267D\", \"#2C507D\", \"#4B3880\", \"#752F7D\", \"#35547D\"]\r\n  },\r\n  {\r\n    'name': 'nightLights',\r\n    'base': '#4e31a5',\r\n    'group': 'general',\r\n    'domain': [\"#4e31a5\", \"#9c25a7\", \"#3065ab\", \"#57468b\", \"#904497\", \"#46648b\", \"#32118d\", \"#a00fb3\", \"#1052a2\", \"#6e51bd\", \"#b63cc3\", \"#6c97cb\", \"#8671c1\", \"#b455be\", \"#7496c3\"]\r\n  },\r\n\r\n  {\r\n    'name': 'yellowGreen',\r\n    'group': 'gradient',\r\n    'domain': [\"#f7fcb9\", \"#addd8e\", \"#31a354\"]\r\n  },\r\n\r\n  {\r\n    'name': 'purpleRed',\r\n    'group': 'gradient',\r\n    'domain': [\"#e7e1ef\", \"#c994c7\", \"#dd1c77\"]\r\n  },\r\n\r\n  {\r\n    'name': 'yellowGreenBlue',\r\n    'group': 'gradient',\r\n    'domain': [\"#edf8b1\", \"#7fcdbb\", \"#2c7fb8\"]\r\n  },\r\n\r\n];\r\n\r\nexport function generateColorScale(scheme, type, domain) {\r\n  if (typeof(scheme) === 'string') {\r\n    scheme = colorSets.find(cs => {\r\n      return cs.name === scheme;\r\n    });\r\n  }\r\n  let colorScale;\r\n  if (type === 'quantile') {\r\n    colorScale = d3.scaleQuantile()\r\n      .range(scheme.domain)\r\n      .domain(domain);\r\n\r\n  } else if (type === 'ordinal') {\r\n    colorScale = d3.scaleOrdinal()\r\n      .range(scheme.domain)\r\n      .domain(domain);\r\n\r\n  } else if (type === 'linear') {\r\n    colorScale = d3.scaleLinear()\r\n      .domain(d3.range(0, 1, 1.0 / (scheme.domain.length - 1)))\r\n      .range(scheme.domain);\r\n  }\r\n\r\n  return colorScale;\r\n}\r\n\r\nexport function colorHelper(scheme, type, domain, customColors?) {\r\n  let colorScale = generateColorScale(scheme, type, domain);\r\n  let colorScaleFunction = function(value) {\r\n    if (type === 'linear') {\r\n      let valueScale = d3.scaleLinear()\r\n        .domain(domain)\r\n        .range([0, 1]);\r\n\r\n      return (colorScale(valueScale(value)));\r\n    } else {\r\n      let formattedValue = value.toString();\r\n      let found: any = undefined; // todo type customColors\r\n      if (customColors && customColors.length > 0) {\r\n        found = customColors.find((mapping) => {\r\n          return mapping.name === formattedValue.toLowerCase();\r\n        });\r\n      }\r\n\r\n      if (found) {\r\n        return found.value;\r\n      } else {\r\n        return colorScale(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return colorScaleFunction;\r\n}\r\n","import {ElementRef, NgZone} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nexport abstract class BaseChart {\n  results: any[];\n  chartElement: ElementRef;\n  zone: NgZone;\n  view: number[];\n\n\n  constructor(chartElement: ElementRef, zone: NgZone) {\n    this.chartElement = chartElement;\n    this.zone = zone;\n  }\n\n  protected bindResizeEvents(view: number[]): void {\n    this.view = view;\n\n    this.zone.runOutsideAngular(() => {\n      Observable.fromEvent(window, 'load', null, null)\n        .subscribe(e => {\n          this.setChartSizeBasedOnContainer();\n        });\n    });\n    this.bindWindowResizeEvent();\n  }\n\n  update() {\n    this.results = this.cloneData(this.results);\n  }\n\n  setChartSizeBasedOnContainer() {\n    const hostElem = this.chartElement.nativeElement;\n\n    //Get the container dimensions\n    let width = hostElem.parentNode.clientWidth;\n    let height = hostElem.parentNode.clientHeight;\n\n    console.log('container width', width);\n    console.log('container width', hostElem.parentNode);\n    console.log('container height', height);\n    console.log('container height', hostElem.parentNode);\n\n    //setTimeout is used to trigger change detection\n    setTimeout(() => {\n      this.view = [width, height];\n      console.log('view', this.view);\n      this.update();\n    }, 0);\n  }\n\n  private bindWindowResizeEvent() {\n    this.zone.runOutsideAngular(() => {\n      Observable.fromEvent(window, 'resize', null, null).debounceTime(100)\n        .subscribe(e => {\n          this.setChartSizeBasedOnContainer();\n        });\n    });\n  }\n\n  // Clones the data into a new object\n  cloneData(data) {\n    let results = [];\n\n    for (let item of data) {\n      let copy = {\n        name: item['name']\n      };\n\n      if (item['value']) {\n        copy['value'] = item['value'];\n      }\n\n      if (item['series']) {\n        copy['series'] = [];\n        for (let seriesItem of item['series']) {\n          let seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n\n  abstract setColors()\n\n  abstract click(data, group)\n}\n","import {Component, Input, Output, EventEmitter, OnChanges, HostListener, NgZone, ElementRef, AfterViewInit} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport * as moment from 'moment';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'area-chart',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n            />\n          </svg:g>\n\n          <svg:g areaTooltip\n            [xSet]=\"xSet\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [results]=\"results\"\n            [height]=\"dims.height\"\n            [colors]=\"colors\"\n            (hover)=\"updateHoveredVertical($event)\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [visibleValue]=\"hoveredVertical\"\n              (clickHandler)=\"click($event, series)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChart extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n  clipPathId: string;\n  clipPath: string;\n  scaleType: string;\n  series: any;\n  margin = [10, 20, 70, 70];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() legend;\n  @Input() state;\n  @Input() customColors;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() autoScale;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    this.xSet = values;\n\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(...domain);\n    let max = Math.max(...domain);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateDomain(domain) {\n    this.xDomain = domain;\n    this.xScale = this.getXScale();\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n  }\n\n  @HostListener('mouseleave')\n  hideCircles() {\n    this.hoveredVertical = null;\n  }\n\n  click(data, series) {\n    data.series = series.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n","import {Component, Input, Output, EventEmitter, OnChanges, HostListener, ElementRef, NgZone, AfterViewInit} from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\nimport * as moment from 'moment';\nimport ObjectId from \"../utils/object-id\";\n\n@Component({\n  selector: 'area-chart-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              normalized=\"true\"\n            />\n          </svg:g>\n\n          <svg:g areaTooltip\n            [xSet]=\"xSet\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [results]=\"results\"\n            [height]=\"dims.height\"\n            [colors]=\"colors\"\n            (hover)=\"updateHoveredVertical($event)\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              type=\"stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [visibleValue]=\"hoveredVertical\"\n              (clickHandler)=\"click($event, series)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChartNormalized extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: Function;\n  margin = [10, 20, 70, 70];\n  tooltipAreas: any[];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      let val = this.xSet[i];\n      let d0 = 0;\n\n      let total = 0;\n      for (let group of this.results){\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n\n      for (let group of this.results){\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0: d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n\n        if (total > 0) {\n          d.d0 = (d.d0 * 100) / total;\n          d.d1 = (d.d1 * 100) / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    this.xSet = values;\n    return domain;\n  }\n\n  getYDomain() {\n    return [0, 100];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateDomain(domain) {\n    this.xDomain = domain;\n    this.xScale = this.getXScale();\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n  }\n\n  @HostListener('mouseleave')\n  hideCircles() {\n    this.hoveredVertical = null;\n  }\n\n  click(data, series) {\n    data.series = series.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n","import {Component, Input, Output, EventEmitter, ElementRef, OnChanges, HostListener, NgZone, AfterViewInit} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport * as moment from 'moment';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'area-chart-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              stacked=\"true\"\n            />\n          </svg:g>\n\n          <svg:g areaTooltip\n            [xSet]=\"xSet\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [results]=\"results\"\n            [height]=\"dims.height\"\n            [colors]=\"colors\"\n            (hover)=\"updateHoveredVertical($event)\"\n          />\n\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n            <svg:g circleSeries\n              type=\"stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [visibleValue]=\"hoveredVertical\"\n              (clickHandler)=\"click($event, series)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChartStacked extends BaseChart implements OnChanges, AfterViewInit {\n  element: HTMLElement;\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: Function;\n  margin = [10, 20, 70, 70];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n\n  constructor(element: ElementRef, zone: NgZone) {\n    super(element, zone);\n    this.chartElement = element.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      let val = this.xSet[i];\n      let d0 = 0;\n      for (let group of this.results) {\n\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0: d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    this.xSet = values;\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      let val = this.xSet[i];\n      let sum = 0;\n      for (let group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          sum += d.value;\n        }\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateDomain(domain) {\n    this.xDomain = domain;\n    this.xScale = this.getXScale();\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n  }\n\n  @HostListener('mouseleave')\n  hideCircles() {\n    this.hoveredVertical = null;\n  }\n\n  click(data, series) {\n    data.series = series.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n","export function sortLinear(data, property, direction = 'asc') {\r\n  return data.sort((a, b) => {\r\n    if (direction === 'asc') {\r\n      return a[property] - b[property];\r\n    } else {\r\n      return b[property] - a[property];\r\n    }\r\n  });\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport d3 from '../d3';\nimport {sortLinear} from '../utils/sort';\n\n@Component({\n  selector: 'g[areaSeries]',\n  template: `\n    <svg:g area\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"color\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient\"\n    />\n  `\n})\nexport class AreaSeries implements OnChanges {\n  opacity: number;\n  path: string;\n  startingPath: string;\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() color;\n  @Input() scaleType;\n  @Input() stacked = false;\n  @Input() normalized = false;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let area;\n    let startingArea;\n\n    let xProperty = (d) => {\n      let label = d.name;\n\n      return this.xScale(label);\n    };\n\n    if (this.stacked || this.normalized) {\n      area = d3.area()\n        .x(xProperty)\n        .y0((d, i) => this.yScale(d.d0))\n        .y1((d, i) => this.yScale(d.d1));\n\n      startingArea = d3.area()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    } else {\n      area = d3.area()\n        .x(xProperty)\n        .y0(() => this.yScale.range()[0])\n        .y1(d => this.yScale(d.value));\n\n      startingArea = d3.area()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    }\n\n    this.opacity = 1;\n\n    let data = this.data.series;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    }\n\n    this.path = area(data);\n    this.startingPath = startingArea(data);\n  }\n}\n","import {NgModule} from \"@angular/core\";\r\nimport {AreaChart} from \"./area-chart.component\";\r\nimport {AreaChartNormalized} from \"./area-chart-normalized.component\";\r\nimport {AreaChartStacked} from \"./area-chart-stacked.component\";\r\nimport {AreaSeries} from \"./area-series.component\";\r\nimport {CommonModule} from \"../common/common.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    AreaChart,\r\n    AreaChartNormalized,\r\n    AreaChartStacked,\r\n    AreaSeries\r\n  ],\r\n  exports: [\r\n    AreaChart,\r\n    AreaChartNormalized,\r\n    AreaChartStacked,\r\n    AreaSeries\r\n  ]\r\n})\r\nexport class AreaChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnInit,\r\n  OnChanges\r\n } from '@angular/core';\r\nimport ObjectId from '../utils/object-id';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[bar]',\r\n  template: `\r\n    <svg:defs *ngIf=\"gradient\">\r\n      <svg:g svgLinearGradient\r\n        [color]=\"fill\"\r\n        [orientation]=\"orientation\"\r\n        [name]=\"gradientId\"\r\n        [startOpacity]=\"startOpacity\"\r\n      />\r\n    </svg:defs>\r\n    <svg:path\r\n      class=\"bar\"\r\n      stroke=\"none\"\r\n      [attr.d]=\"path\"\r\n      [attr.fill]=\"gradient ? gradientFill : fill\"\r\n      [style.cursor]=\"'pointer'\"\r\n      (click)=\"click()\"\r\n    />\r\n  `\r\n})\r\nexport class Bar implements OnInit, OnChanges {\r\n  @Input() fill;\r\n  @Input() data;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() orientation;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() gradient: boolean = false;\r\n  @Input() offset = 0;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  element: any;\r\n  path: any;\r\n  gradientId: any;\r\n  gradientFill: any;\r\n  startOpacity: any;\r\n  initialized: boolean = false;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    let pageUrl = window.location.href;\r\n    this.gradientId = 'grad' + ObjectId().toString();\r\n    this.gradientFill = `url(${pageUrl}#${this.gradientId})`;\r\n    this.startOpacity = this.getStartOpacity();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // ngOnInit gets called after ngOnChanges, so we need to do this here\r\n    if (!this.initialized) {\r\n      this.loadAnimation();\r\n      this.initialized = true;\r\n    } else {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  loadAnimation() {\r\n    this.path = this.getStartingPath();\r\n    setTimeout(this.update.bind(this), 100);\r\n  }\r\n\r\n  animateToCurrentForm() {\r\n    let node = d3.select(this.element).select('.bar');\r\n    let path = this.getPath();\r\n\r\n    node.transition().duration(750)\r\n      .attr('d', path);\r\n  }\r\n\r\n  getStartingPath() {\r\n    let radius = this.getRadius();\r\n    let path;\r\n\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        path = this.roundedRect(this.x, this.y + this.height, this.width, 0, radius, true, true, false, false);\r\n      } else if (this.orientation === 'horizontal') {\r\n        path = this.roundedRect(this.x, this.y, 0, this.height, radius, false, true, false, true);\r\n      }\r\n    } else {\r\n      if (this.orientation === 'vertical') {\r\n        path = this.roundedRect(this.x, this.y + this.height, this.width, 0, radius, false, false, false, false);\r\n      } else if (this.orientation === 'horizontal') {\r\n        path = this.roundedRect(this.x, this.y, 0, this.height, radius, false, false, false, false);\r\n      }\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  getPath() {\r\n    let radius = this.getRadius();\r\n    let path;\r\n\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        path = this.roundedRect(this.x, this.y, this.width, this.height, radius, true, true, false, false);\r\n      } else if (this.orientation === 'horizontal') {\r\n        path = this.roundedRect(this.x, this.y, this.width, this.height, radius, false, true, false, true);\r\n      }\r\n    } else {\r\n      path = this.roundedRect(this.x, this.y, this.width, this.height, radius, false, false, false, false);\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  getRadius() {\r\n    let radius = 0;\r\n    if (this.roundEdges && this.height > radius && this.width > radius) {\r\n      radius = 5;\r\n    }\r\n    return radius;\r\n  }\r\n\r\n  getStartOpacity() {\r\n    if (this.roundEdges) {\r\n      return 0.2;\r\n    } else {\r\n      return 0.5;\r\n    }\r\n  }\r\n\r\n  roundedRect(x, y, w, h, r, tl, tr, bl, br) {\r\n    var retval;\r\n    retval = \"M\" + (x + r) + \",\" + y;\r\n    retval += \"h\" + (w - 2 * r);\r\n    if (tr) {\r\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + r + \",\" + r;\r\n    } else {\r\n      retval += \"h\" + r;\r\n      retval += \"v\" + r;\r\n    }\r\n    retval += \"v\" + (h - 2 * r);\r\n    if (br) {\r\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + -r + \",\" + r;\r\n    } else {\r\n      retval += \"v\" + r;\r\n      retval += \"h\" + -r;\r\n    }\r\n    retval += \"h\" + (2 * r - w);\r\n    if (bl) {\r\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + -r + \",\" + -r;\r\n    } else {\r\n      retval += \"h\" + -r;\r\n      retval += \"v\" + -r;\r\n    }\r\n    retval += \"v\" + (2 * r - h);\r\n    if (tl) {\r\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + r + \",\" + -r;\r\n    } else {\r\n      retval += \"v\" + -r;\r\n      retval += \"h\" + r;\r\n    }\r\n    retval += \"z\";\r\n    return retval;\r\n  }\r\n\r\n  click() {\r\n    this.clickHandler.emit(this.data);\r\n  }\r\n\r\n}\r\n","import * as moment from \"moment\";\r\n\r\nexport function tickFormat(fieldType, groupByType): Function {\r\n  return function(label: string): string {\r\n    if (label === 'No Value' || label === 'Other') {\r\n      return label;\r\n    }\r\n    if (fieldType === 'date' && groupByType === 'groupBy') {\r\n      return moment(label).format(\"MM/DD/YYYY\");\r\n    }\r\n\r\n    return label.toString();\r\n  };\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges, NgZone, ElementRef, AfterViewInit} from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { tickFormat } from '../common/tick-format.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"yDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [tickFormatting]=\"yAxisTickFormatting()\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesHorizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontal extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  yScale: any;\n  xScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: Function;\n  margin = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    const spacing = 0.2;\n    this.yDomain = this.getYDomain();\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.yDomain);\n  }\n\n  getXDomain() {\n    let values = this.results.map(d => d.value);\n    let min = Math.min(0, ...values);\n    let max = Math.max(...values);\n    return [min, max];\n  }\n\n  getYDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  yAxisTickFormatting() {\n    let tickFormatting;\n    if (this.results.query && this.results.query.dimensions.length) {\n      tickFormatting = tickFormat(this.results.query.dimensions[0].field.fieldType, this.results.query.dimensions[0].groupByType.value);\n    }\n    return tickFormatting;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.yDomain, this.customColors);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  trigger,\n  style,\n  transition,\n  animate, ElementRef, NgZone, AfterViewInit\n} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-2d',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g gridPanelSeries\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"horizontal\">\n        </svg:g>\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            [xScale]=\"valueScale\"\n            [yScale]=\"innerScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontal2D extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: Function;\n  margin = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element, zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([0, this.groupScale.bandwidth()])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale() {\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valuesDomain);\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.name)})`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  trigger,\n  style,\n  transition,\n  animate, ElementRef, NgZone, AfterViewInit\n} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalNormalized extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n  margin = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getYScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale() {\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  trigger,\n  style,\n  transition,\n  animate, ElementRef, NgZone, AfterViewInit\n} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalStacked extends BaseChart implements  OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n  margin = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      let sum = 0;\n      for (let d of group.series) {\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale() {\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n}\n","import {Component, Input, Output, EventEmitter, OnChanges, AfterViewInit, ElementRef, NgZone} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport {tickFormat} from '../common/tick-format.helper';\nimport d3 from '../d3';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/throttleTime';\nimport 'rxjs/add/observable/fromEvent';\nimport {Subject} from \"rxjs\";\n\n@Component({\n  selector: 'bar-vertical',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"xDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [tickFormatting]=\"xAxisTickFormatting()\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesVertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\">\n        </svg:g>\n      </svg:g>\n    </chart>\n  `,\n\n})\nexport class BarVertical extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: Function;\n  margin: any[] = [10, 20, 70, 100];\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n\n  update() {\n    super.update();\n\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 10);\n\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getXScale() {\n    const spacing = 0.2;\n    this.xDomain = this.getXDomain();\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getXDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getYDomain() {\n    let values = this.results.map(d => d.value);\n    let min = Math.min(0, ...values);\n    let max = Math.max(...values);\n    return [min, max];\n  }\n\n  xAxisTickFormatting() {\n    let tickFormatting;\n    if (this.results.query && this.results.query.dimensions.length) {\n      tickFormatting = tickFormat(this.results.query.dimensions[0].field.fieldType, this.results.query.dimensions[0].groupByType.value);\n    }\n    return tickFormatting;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.xDomain, this.customColors);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  trigger,\n  style,\n  transition,\n  animate, NgZone, ElementRef, AfterViewInit\n} from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-2d',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g gridPanelSeries\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\">\n        </svg:g>\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n          <svg:g seriesVertical\n            *ngFor=\"let group of results; trackBy:trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n    </chart>\n  `,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVertical2D extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: Function;\n  margin = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([0, this.groupScale.bandwidth()])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.name)}, 0)`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  trigger,\n  style,\n  transition,\n  animate, NgZone, ElementRef, AfterViewInit\n} from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalNormalized extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n  margin = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getXScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  trigger,\n  style,\n  transition,\n  animate, ElementRef, NgZone, AfterViewInit\n} from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event, group)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalStacked extends BaseChart implements OnChanges, AfterViewInit {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  tickFormatting: Function;\n  colors: Function;\n  margin = [10, 20, 70, 100];\n\n  @Input() view;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(private element: ElementRef, zone: NgZone) {\n    super(element,zone);\n  }\n\n  ngAfterViewInit(): void {\n    this.bindResizeEvents(this.view);\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      let sum = 0;\n      for (let d of group.series) {\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  click(data, group) {\n    data.series = group.name;\n    this.clickHandler.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  trigger,\n  style,\n  transition,\n  animate, NgZone, ElementRef\n} from '@angular/core';\n\n@Component({\n  selector: 'g[seriesHorizontal]',\n  template: `\n    <svg:g bar *ngFor=\"let bar of bars; trackBy:trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [data]=\"bar.data\"\n      [orientation]=\"'horizontal'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (clickHandler)=\"click($event)\"\n      [gradient]=\"gradient\"\n\n      swui-tooltip\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"bar.tooltipText\">\n    </svg:g>\n  `,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class SeriesHorizontal implements OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    let d0 = 0;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      let label = d.name;\n      let roundEdges = this.type === 'standard';\n\n      let bar: any = {\n        value: value,\n        label: label,\n        color: this.colors(label),\n        roundEdges: roundEdges,\n        data: d,\n        tooltipText: `${label}: ${value}`\n      };\n\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === 'standard') {\n        bar.width = this.xScale(value);\n        bar.x = 0;\n        bar.y = this.yScale(label);\n      } else if (this.type === 'stacked') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) /total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n      }\n\n      return bar;\n    });\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n}\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  trigger,\r\n  style,\r\n  transition,\r\n  animate } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'g[seriesVertical]',\r\n  template: `\r\n    <svg:g bar *ngFor=\"let bar of bars; trackBy:trackBy\"\r\n      [@animationState]=\"'active'\"\r\n      [width]=\"bar.width\"\r\n      [height]=\"bar.height\"\r\n      [x]=\"bar.x\"\r\n      [y]=\"bar.y\"\r\n      [fill]=\"bar.color\"\r\n      [data]=\"bar.data\"\r\n      [orientation]=\"'vertical'\"\r\n      [roundEdges]=\"bar.roundEdges\"\r\n      (clickHandler)=\"click($event)\"\r\n      [gradient]=\"gradient\"\r\n\r\n      swui-tooltip\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"bar.tooltipText\">\r\n    </svg:g>\r\n  `,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition('* => void', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*',\r\n        }),\r\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class SeriesVertical implements OnChanges {\r\n  bars: any;\r\n  x: any;\r\n  y: any;\r\n\r\n  @Input() dims;\r\n  @Input() type = 'standard';\r\n  @Input() series;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors;\r\n  @Input() scaleType = 'ordinal';\r\n  @Input() gradient: boolean;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges(changes) {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    let width;\r\n    if (this.series.length) {\r\n      if (this.scaleType === 'time') {\r\n        let count = this.series.array[0].vals[0].label[0].length;\r\n        let firstDate = this.series.array[0].vals[0].label[0][count - 1];\r\n        let secondDate = moment(firstDate).add(1, 'hours');\r\n        width = Math.abs(this.xScale(secondDate) - this.xScale(firstDate)) * 0.8;\r\n      } else {\r\n        width = this.xScale.bandwidth();\r\n      }\r\n    }\r\n\r\n    let d0 = 0;\r\n    let total;\r\n    if (this.type === 'normalized') {\r\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d);\r\n    }\r\n\r\n    this.bars = this.series.map((d, index) => {\r\n      let value = d.value;\r\n      let label = d.name;\r\n      let roundEdges = this.type === 'standard';\r\n\r\n      let bar: any = {\r\n        value: value,\r\n        label: label,\r\n        color: this.colors(label),\r\n        roundEdges: roundEdges,\r\n        data: d,\r\n        width: width,\r\n        tooltipText: `${label}: ${value}`,\r\n        height: 0,\r\n        x: 0,\r\n        y: 0\r\n      };\r\n\r\n      if (this.type === 'standard') {\r\n        bar.height = this.dims.height - this.yScale(value);\r\n        bar.x = this.xScale(label);\r\n        bar.y = this.yScale(value);\r\n      } else if (this.type === 'stacked') {\r\n        let offset0 = d0;\r\n        let offset1 = offset0 + value;\r\n        d0 += value;\r\n\r\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\r\n        bar.x = 0;\r\n        bar.y = this.yScale(offset1);\r\n      } else if (this.type === 'normalized') {\r\n        let offset0 = d0;\r\n        let offset1 = offset0 + value;\r\n        d0 += value;\r\n\r\n        if (total > 0) {\r\n          offset0 = (offset0 * 100) / total;\r\n          offset1 = (offset1 * 100) /total;\r\n        } else {\r\n          offset0 = 0;\r\n          offset1 = 0;\r\n        }\r\n\r\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\r\n        bar.x = 0;\r\n        bar.y = this.yScale(offset1);\r\n      }\r\n\r\n      return bar;\r\n    });\r\n  }\r\n\r\n  trackBy(index, bar) {\r\n    return bar.label;\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"../common/common.module\";\r\nimport {Bar} from \"./bar.component\";\r\nimport {BarHorizontal} from \"./bar-horizontal.component\";\r\nimport {BarHorizontal2D} from \"./bar-horizontal-2d.component\";\r\nimport {BarHorizontalNormalized} from \"./bar-horizontal-normalized.component\";\r\nimport {BarHorizontalStacked} from \"./bar-horizontal-stacked.component\";\r\nimport {BarVertical} from \"./bar-vertical.component\";\r\nimport {BarVertical2D} from \"./bar-vertical-2d.component\";\r\nimport {BarVerticalNormalized} from \"./bar-vertical-normalized.component\";\r\nimport {BarVerticalStacked} from \"./bar-vertical-stacked.component\";\r\nimport {SeriesHorizontal} from \"./series-horizontal.component\";\r\nimport {SeriesVertical} from \"./series-vertical.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    Bar,\r\n    BarHorizontal,\r\n    BarHorizontal2D,\r\n    BarHorizontalNormalized,\r\n    BarHorizontalStacked,\r\n    BarVertical,\r\n    BarVertical2D,\r\n    BarVerticalNormalized,\r\n    BarVerticalStacked,\r\n    SeriesHorizontal,\r\n    SeriesVertical\r\n  ],\r\n  exports: [\r\n    Bar,\r\n    BarHorizontal,\r\n    BarHorizontal2D,\r\n    BarHorizontalNormalized,\r\n    BarHorizontalStacked,\r\n    BarVertical,\r\n    BarVertical2D,\r\n    BarVerticalNormalized,\r\n    BarVerticalStacked,\r\n    SeriesHorizontal,\r\n    SeriesVertical\r\n  ]\r\n})\r\nexport class BarChartModule {}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges } from '@angular/core';\r\nimport ObjectId from \"../utils/object-id\";\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[heatMapCell]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\r\n      <defs *ngIf=\"gradient\">\r\n        <svg:g svgLinearGradient\r\n          [color]=\"fill\"\r\n          orientation=\"vertical\"\r\n          [name]=\"gradientId\"\r\n          [startOpacity]=\"startOpacity\"\r\n        />\r\n      </defs>\r\n\r\n      <svg:rect\r\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\r\n        rx=\"3\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        class=\"cell\"\r\n        style=\"cursor: pointer\"\r\n        (click)=\"click()\"\r\n      />\r\n\r\n    </svg:g>\r\n  `\r\n})\r\nexport class HeatMapCell implements OnChanges {\r\n  element: HTMLElement;\r\n  transform: string;\r\n  activeRange: any[];\r\n  startOpacity: number;\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n\r\n  @Input() fill;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() data;\r\n  @Input() label;\r\n  @Input() gradient: boolean = false;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.transform = `translate(${this.x} , ${this.y})`;\r\n    let pageUrl = window.location.href;\r\n    this.startOpacity = 0.3;\r\n    this.gradientId = 'grad' + ObjectId().toString();\r\n    this.gradientUrl = `url(${pageUrl}#${this.gradientId})`;\r\n\r\n    this.loadAnimation();\r\n  }\r\n\r\n  loadAnimation() {\r\n    let node = d3.select(this.element).select('.cell');\r\n\r\n    node\r\n      .attr('opacity', 0);\r\n\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  animateToCurrentForm() {\r\n    let node = d3.select(this.element).select('.cell');\r\n\r\n    node.transition().duration(750)\r\n      .attr('opacity', 1);\r\n  }\r\n\r\n  click() {\r\n    this.clickHandler.emit(this.data);\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[heatMapCellSeries]',\r\n  template: `\r\n    <svg:g heatMapCell *ngFor=\"let c of cells\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [fill]=\"c.fill\"\r\n      [data]=\"c.data\"\r\n      (clickHandler)=\"click($event, c.label, c.series)\"\r\n      [gradient]=\"gradient\"\r\n\r\n      swui-tooltip\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"c.tooltipText\"\r\n    />\r\n  `\r\n})\r\nexport class HeatCellSeries implements OnChanges {\r\n  cells: any[];\r\n\r\n  @Input() data;\r\n  @Input() colors;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() gradient: boolean;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.cells = this.getCells();\r\n  }\r\n\r\n  getCells() {\r\n    let cells = [];\r\n    this.data.map((row) => {\r\n      row.series.map((cell) => {\r\n        let value = cell.value;\r\n        let label = cell.name;\r\n        cells.push({\r\n          x: this.xScale(row.name),\r\n          y: this.yScale(cell.name),\r\n          width: this.xScale.bandwidth(),\r\n          height: this.yScale.bandwidth(),\r\n          fill: this.colors(value),\r\n          data: value,\r\n          label: label,\r\n          series: row.name,\r\n          tooltipText: `${label}: ${value}`\r\n        });\r\n      });\r\n    });\r\n\r\n    return cells;\r\n  }\r\n\r\n  click(value, label, series) {\r\n    this.clickHandler.emit({\r\n      name: label,\r\n      value: value,\r\n      series: series\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport d3 from '../d3';\r\nimport { BaseChart } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { generateColorScale, colorHelper } from '../utils/color-sets';\r\n\r\n@Component({\r\n  selector: 'heat-map',\r\n  template: `\r\n    <chart\r\n      [legend]=\"false\"\r\n      [legendData]=\"colorScale\"\r\n      [data]=\"results.m0Domain\"\r\n      [view]=\"view\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\r\n\r\n        <svg:g xAxis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\">\r\n        </svg:g>\r\n\r\n        <svg:g yAxis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\">\r\n        </svg:g>\r\n\r\n        <svg:rect *ngFor=\"let rect of rects\"\r\n          [attr.x]=\"rect.x\"\r\n          [attr.y]=\"rect.y\"\r\n          [attr.rx]=\"rect.rx\"\r\n          [attr.width]=\"rect.width\"\r\n          [attr.height]=\"rect.height\"\r\n          [attr.fill]=\"rect.fill\"\r\n        />\r\n\r\n        <svg:g heatMapCellSeries\r\n          [xScale]=\"xScale\"\r\n          [yScale]=\"yScale\"\r\n          [colors]=\"colors\"\r\n          [data]=\"results\"\r\n          [gradient]=\"gradient\"\r\n          (clickHandler)=\"click($event)\"\r\n        />\r\n      </svg:g>\r\n    </chart>\r\n  `\r\n})\r\nexport class HeatMap extends BaseChart implements OnChanges {\r\n  dims: ViewDimensions;\r\n  xDomain: any[];\r\n  yDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  color: any;\r\n  colors: Function;\r\n  colorScale: any;\r\n  transform: string;\r\n  rects: any[];\r\n  margin = [10, 20, 70, 100];\r\n\r\n  @Input() view;\r\n  @Input() results;\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n  @Input() legend;\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() gradient: boolean;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    super.update();\r\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 11);\r\n\r\n    this.xDomain = this.getXDomain();\r\n    this.yDomain = this.getYDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\r\n\r\n    this.rects = this.getRects();\r\n  }\r\n\r\n  getXDomain() {\r\n    let domain = [];\r\n    for (let group of this.results) {\r\n      if (!domain.includes(group.name)) {\r\n        domain.push(group.name);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain() {\r\n    let domain = [];\r\n    for (let group of this.results) {\r\n      for (let d of group.series) {\r\n        if (!domain.includes(d.name)) {\r\n          domain.push(d.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain() {\r\n    let domain = [];\r\n    for (let group of this.results) {\r\n      for (let d of group.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    let min = Math.min(0, ...domain);\r\n    let max = Math.max(...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  getXScale() {\r\n    return d3.scaleBand()\r\n      .rangeRound([0, this.dims.width])\r\n      .paddingInner(0.1)\r\n      .domain(this.xDomain);\r\n  }\r\n\r\n  getYScale() {\r\n    return d3.scaleBand()\r\n      .rangeRound([this.dims.height, 0])\r\n      .paddingInner(0.1)\r\n      .domain(this.yDomain);\r\n  }\r\n\r\n  getRects() {\r\n    let rects = [];\r\n\r\n    this.xDomain.map((xVal) => {\r\n      this.yDomain.map((yVal) => {\r\n        rects.push({\r\n          x: this.xScale(xVal),\r\n          y: this.yScale(yVal),\r\n          rx: 3,\r\n          width: this.xScale.bandwidth(),\r\n          height: this.yScale.bandwidth(),\r\n          fill: 'rgba(200,200,200,0.03)'\r\n        });\r\n      });\r\n    });\r\n\r\n    return rects;\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  setColors() {\r\n    this.colors = colorHelper(this.scheme, 'linear', this.valueDomain);\r\n    this.colorScale = generateColorScale(this.scheme, 'linear', this.valueDomain);\r\n  }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"../common/common.module\";\r\nimport {HeatMapCell} from \"./heat-map-cell.component\";\r\nimport {HeatCellSeries} from \"./heat-map-cell-series.component\";\r\nimport {HeatMap} from \"./heat-map.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    HeatMapCell,\r\n    HeatCellSeries,\r\n    HeatMap\r\n  ],\r\n  exports: [\r\n    HeatMapCell,\r\n    HeatCellSeries,\r\n    HeatMap\r\n  ]\r\n})\r\nexport class HeatMapModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ElementRef,\r\n  trigger,\r\n  style,\r\n  transition,\r\n  animate\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[line]',\r\n  template: `\r\n    <svg:path\r\n      [@animationState]=\"'active'\"\r\n      class=\"line\"\r\n      [attr.d]=\"path\"\r\n      fill=\"none\"\r\n      [attr.stroke]=\"stroke\"\r\n      stroke-width=\"1.5px\"\r\n    />\r\n  `,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition('void => *', [\r\n        style({\r\n          strokeDasharray: 2000,\r\n          strokeDashoffset: 2000,\r\n        }),\r\n        animate(1000, style({\r\n          strokeDashoffset: 0\r\n        }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class Line implements OnChanges {\r\n  element: ElementRef;\r\n\r\n  @Input() path;\r\n  @Input() stroke;\r\n  @Input() data;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // add update animation\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, HostListener } from '@angular/core';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { colorHelper } from '../utils/color-sets';\r\nimport { BaseChart } from '../common/base-chart.component';\r\nimport ObjectId from \"../utils/object-id\";\r\nimport d3 from '../d3';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'line-chart',\r\n  template: `\r\n    <chart\r\n      [legend]=\"legend\"\r\n      [view]=\"view\"\r\n      [colors]=\"colors\"\r\n      [legendData]=\"seriesDomain\">\r\n\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"/>\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n\r\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\r\n        <svg:g xAxis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"true\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\">\r\n        </svg:g>\r\n\r\n        <svg:g yAxis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"true\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\">\r\n        </svg:g>\r\n\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results\">\r\n            <svg:g lineSeries\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [color]=\"colors(series.name)\"\r\n              [data]=\"series\"\r\n              [scaleType]=\"scaleType\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g areaTooltip\r\n            [xSet]=\"xSet\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [results]=\"results\"\r\n            [height]=\"dims.height\"\r\n            [colors]=\"colors\"\r\n            (hover)=\"updateHoveredVertical($event)\"\r\n          />\r\n\r\n          <svg:g *ngFor=\"let series of results\">\r\n            <svg:g circleSeries\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [color]=\"colors(series.name)\"\r\n              [strokeColor]=\"colors(series.name)\"\r\n              [data]=\"series\"\r\n              [scaleType]=\"scaleType\"\r\n              [visibleValue]=\"hoveredVertical\"\r\n              (clickHandler)=\"click($event, series)\"\r\n            />\r\n          </svg:g>\r\n\r\n        </svg:g>\r\n      </svg:g>\r\n\r\n      <svg:g timeline\r\n        *ngIf=\"timeline && scaleType === 'time'\"\r\n        [results]=\"results\"\r\n        [view]=\"view\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [scaleType]=\"scaleType\"\r\n        [legend]=\"legend\"\r\n        (onDomainChange)=\"updateDomain($event)\">\r\n      </svg:g>\r\n    </chart>\r\n  `\r\n})\r\nexport class LineChart extends BaseChart implements OnChanges {\r\n  dims: ViewDimensions;\r\n  xSet: any;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  seriesDomain: any;\r\n  yScale: any;\r\n  xScale: any;\r\n  colors: Function;\r\n  scaleType: string;\r\n  transform: string;\r\n  clipPath: string;\r\n  clipPathId: string;\r\n  series: any;\r\n  areaPath: any;\r\n  margin = [10, 20, 70, 70];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  \r\n  @Input() view;\r\n  @Input() results;\r\n  @Input() scheme;\r\n  @Input() legend;\r\n  @Input() customColors;\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() autoScale;\r\n  @Input() timeline;\r\n  @Input() gradient: boolean;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    super.update();\r\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= 150;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n\r\n    // let xProperty = (d) => {\r\n    //   let label = d.vals[0].label[0][0];\r\n    //   if (this.scaleType === 'time') {\r\n    //     return this.xScale(moment(label).toDate());\r\n    //   } else {\r\n    //     return this.xScale(label) + this.xScale.bandwidth() / 2;\r\n    //   }\r\n    // };\r\n    //\r\n    // let area = d3.area()\r\n    //   .x(xProperty)\r\n    //   .y0(() => this.yScale.range()[0])\r\n    //   .y1(d => this.yScale(d.vals[0].value));\r\n    //\r\n    // this.areaPath = area(this.series);\r\n\r\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\r\n    let pageUrl = window.location.href;\r\n    this.clipPathId = 'clip' + ObjectId().toString();\r\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\r\n  }\r\n\r\n  getXDomain() {\r\n    let values = [];\r\n    for (let results of this.results) {\r\n      for (let d of results.series){\r\n        if (!values.includes(d.name)) {\r\n          values.push(d.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scaleType = this.getScaleType(values);\r\n    let domain = [];\r\n    if (this.scaleType === 'time') {\r\n      values = values.map(v => moment(v).toDate());\r\n      let min = Math.min(...values);\r\n      let max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      let min = Math.min(...values);\r\n      let max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else {\r\n      domain = values;\r\n    }\r\n\r\n    this.xSet = values;\r\n    return domain;\r\n  }\r\n\r\n  getYDomain() {\r\n    let domain = [];\r\n    for (let results of this.results) {\r\n      for (let d of results.series){\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    let min = Math.min(...domain);\r\n    let max = Math.max(...domain);\r\n    if (!this.autoScale) {\r\n      min = Math.min(0, min);\r\n    }\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain() {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale() {\r\n    let scale;\r\n    if (this.scaleType === 'time') {\r\n      scale = d3.scaleTime()\r\n        .range([0, this.dims.width])\r\n        .domain(this.xDomain);\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = d3.scaleLinear()\r\n        .range([0, this.dims.width])\r\n        .domain(this.xDomain);\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = d3.scalePoint()\r\n        .range([0, this.dims.width])\r\n        .padding(0.1)\r\n        .domain(this.xDomain);\r\n    }\r\n\r\n    return scale;\r\n  }\r\n\r\n  getYScale() {\r\n    return d3.scaleLinear()\r\n      .range([this.dims.height, 0])\r\n      .domain(this.yDomain);\r\n  }\r\n\r\n  getScaleType(values) {\r\n    let date = true;\r\n    let number = true;\r\n    for (let value of values) {\r\n      if (!this.isDate(value)) {\r\n        date = false;\r\n      }\r\n      if (typeof value !== 'number') {\r\n        number = false;\r\n      }\r\n    }\r\n\r\n    if (date) {\r\n      return 'time';\r\n    }\r\n    if (number) {\r\n      return 'linear';\r\n    }\r\n    return 'ordinal';\r\n  }\r\n\r\n  isDate(value) {\r\n    if (value instanceof Date) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  updateDomain(domain) {\r\n    this.xDomain = domain;\r\n    this.xScale = this.getXScale();\r\n  }\r\n\r\n  updateHoveredVertical(item) {\r\n    this.hoveredVertical = item.value;\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles() {\r\n    this.hoveredVertical = null;\r\n  }\r\n\r\n  click(data, series) {\r\n    data.series = series.name;\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  setColors() {\r\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\r\n  }\r\n}\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\nimport d3 from '../d3';\r\nimport * as moment from 'moment';\r\nimport {sortLinear} from '../utils/sort';\r\n\r\n@Component({\r\n  selector: 'g[lineSeries]',\r\n  template: `\r\n    <svg:g line\r\n      [data]=\"data\"\r\n      [path]=\"path\"\r\n      [stroke]=\"color\"\r\n    />\r\n  `\r\n})\r\nexport class LineSeries implements OnChanges {\r\n\r\n  path: string;\r\n\r\n  @Input() data;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() color;\r\n  @Input() scaleType;\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    let line = d3.line()\r\n      .x(d => {\r\n        let label = d.name;\r\n        let value;\r\n        if (this.scaleType === 'time') {\r\n          value = this.xScale(moment(label).toDate());\r\n        } else if (this.scaleType === 'linear') {\r\n          value = this.xScale(Number(label));\r\n        } else {\r\n          value = this.xScale(label);\r\n        }\r\n        return value;\r\n      })\r\n      .y(d => this.yScale(d.value));\r\n\r\n    let data = this.data.series;\r\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\r\n      data = sortLinear(data, 'name');\r\n    }\r\n\r\n    this.path = line(data) || '';\r\n  }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"../common/common.module\";\r\nimport {Line} from \"./line.component\";\r\nimport {LineChart} from \"./line-chart.component\";\r\nimport {LineSeries} from \"./line-series.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    Line,\r\n    LineChart,\r\n    LineSeries\r\n  ],\r\n  exports: [\r\n    Line,\r\n    LineChart,\r\n    LineSeries\r\n  ]\r\n})\r\nexport class LineChartModule {}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges } from '@angular/core';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[card]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"transform\" class=\"cell\"\r\n      (click)=\"click()\">\r\n      <svg:rect\r\n        class=\"card\"\r\n        [style.fill]=\"color\"\r\n        [style.opacity]=\"0.3\"\r\n        style=\"cursor: pointer; stroke-width: 2px; stroke: #192024;\"\r\n        [attr.width]=\"cardWidth\"\r\n        [attr.height]=\"cardHeight\"\r\n        rx=\"3\"\r\n        ry=\"3\"\r\n      />\r\n      <title>{{label}}</title>\r\n      <svg:foreignObject\r\n        x=\"5\"\r\n        [attr.y]=\"height * 0.7\"\r\n        [attr.width]=\"textWidth\"\r\n        [attr.height]=\"height * 0.3\"\r\n        style=\"fill: #fff; font-size: 12px; pointer-events: none; text-transform: uppercase; overflow: hidden; text-align: center;\">\r\n        <xhtml:p>\r\n          {{trimmedLabel}}\r\n        </xhtml:p>\r\n      </svg:foreignObject>\r\n\r\n      <svg:text\r\n        [attr.x]=\"width / 2\"\r\n        [attr.y]=\"height * 0.30\"\r\n        dy='.35em'\r\n        class=\"value-text\"\r\n        [style.fill]=\"color\"\r\n        text-anchor=\"middle\"\r\n        style=\"font-size: 46px; pointer-events: none;\">\r\n        {{value}}\r\n      </svg:text>\r\n    </svg:g>\r\n  `\r\n})\r\nexport class Card implements OnChanges {\r\n  element: HTMLElement;\r\n  transform: string;\r\n  trimmedLabel: string;\r\n  value: string;\r\n  cardWidth: number;\r\n  cardHeight: number;\r\n  textWidth: number;\r\n\r\n  @Input() color;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() label;\r\n  @Input() data;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.transform = `translate(${this.x} , ${this.y})`;\r\n\r\n    this.label = this.data.name;\r\n    this.trimmedLabel = trimLabel(this.label, 55);\r\n    this.value = d3.format(\",.0f\")(this.data.value);\r\n\r\n    this.cardWidth = Math.max(0, this.width - 5);\r\n    this.cardHeight = Math.max(0, this.height - 5);\r\n    this.textWidth = Math.max(0, this.width - 15);\r\n\r\n    this.loadAnimation();\r\n  }\r\n\r\n  loadAnimation() {\r\n    // TODO: replace countup animation\r\n    // let node = d3.select(this.element).selectAll('.value-text');\r\n    //\r\n    // node.text('0');\r\n\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  animateToCurrentForm() {\r\n    var options = {\r\n      useEasing: true,\r\n      useGrouping: true,\r\n      separator: ',',\r\n      decimal: '.',\r\n      prefix: '',\r\n      suffix: ''\r\n    };\r\n\r\n    var endValue = this.data.value;\r\n    if (this.data.valueType === 'currency') {\r\n      options.prefix = '$';\r\n    } else if (this.data.valueType === 'duration') {\r\n      if (endValue < 60) {\r\n        options.suffix = ' sec';\r\n      } else if (endValue < 3600) {\r\n        endValue = endValue / 60;\r\n        options.suffix = ' min';\r\n      } else {\r\n        endValue = endValue / 3600;\r\n        options.suffix = ' hours';\r\n      }\r\n    }\r\n\r\n    // TODO: replace countup animation\r\n    // let node = d3.select(this.element).selectAll('.value-text');\r\n    // var counter = new CountUp(node[0][0], 0, endValue, 0, 2.5, options);\r\n    // counter.start();\r\n  }\r\n\r\n  click() {\r\n    this.clickHandler.emit({\r\n      name: this.data.name,\r\n      value: this.data.value\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nexport interface CardModel {\r\n  x;\r\n  y;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n  label: string;\r\n  data;\r\n  tooltipText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'g[cardSeries]',\r\n  template: `\r\n    <svg:g card *ngFor=\"let c of cards\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [color]=\"c.color\"\r\n      [data]=\"c.data\"\r\n      (clickHandler)=\"click($event)\"\r\n\r\n      swui-tooltip\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"c.tooltipText\"\r\n    />\r\n  `\r\n})\r\nexport class CardSeries implements OnChanges {\r\n  cards: CardModel[];\r\n\r\n  @Input() data;\r\n  @Input() dims;\r\n  @Input() colors;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.cards = this.getCards();\r\n  }\r\n\r\n  getCards() {\r\n    return this.data\r\n      .map((d, index) => {\r\n        let label = d.data.name;\r\n\r\n        let value = d.data.value;\r\n        return {\r\n          x: d.x,\r\n          y: d.y,\r\n          width: d.width,\r\n          height: d.height,\r\n          color: this.colors(label),\r\n          label: d.data.label,\r\n          data: d.data,\r\n          tooltipText: `${label}: ${value}`\r\n        };\r\n      });\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n}\r\n","import d3 from '../d3';\r\n\r\nexport function gridLayout(dims, data, minWidth) {\r\n  let rows = 1;\r\n  let xScale: any = d3.scaleBand();\r\n  let yScale: any = d3.scaleBand();\r\n  let dataLength = data.length;\r\n  let width = dims.width;\r\n  let height = dims.height;\r\n\r\n  if (width > minWidth) {\r\n    while (width / dataLength < minWidth) {\r\n      rows += 1;\r\n      dataLength = Math.ceil(data.length / rows);\r\n    }\r\n  }\r\n\r\n  let columns = dataLength;\r\n\r\n  var xDomain = [];\r\n  var yDomain = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    yDomain.push(i);\r\n  }\r\n  for (let i = 0; i < columns; i++) {\r\n    xDomain.push(i);\r\n  }\r\n  xScale.domain(xDomain);\r\n  yScale.domain(yDomain);\r\n\r\n  xScale.rangeRound([0, width], 0.1);\r\n  yScale.rangeRound([0, height], 0.1);\r\n\r\n  let res = [];\r\n  let total = getTotal(data);\r\n  let cardWidth = xScale.bandwidth();\r\n  let cardHeight = yScale.bandwidth();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    res[i] = {};\r\n    res[i].data = {\r\n      name: data[i].name,\r\n      value: data[i].value\r\n    };\r\n    res[i].x = xScale(i % columns);\r\n    res[i].y = yScale(Math.floor(i / columns));\r\n    res[i].width = cardWidth;\r\n    res[i].height = cardHeight;\r\n    res[i].data.percent = res[i].data.value / total;\r\n    res[i].data.total = total;\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction getTotal(results) {\r\n  return results\r\n    .map(d => d.value)\r\n    .reduce((sum, val) => { return sum + val; } );\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { BaseChart } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { colorHelper } from '../utils/color-sets';\r\nimport { gridLayout } from '../common/grid-layout.helper';\r\n\r\n@Component({\r\n  selector: 'number-card',\r\n  template: `\r\n    <chart\r\n      [legend]=\"false\"\r\n      [view]=\"view\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\">\r\n        <svg:g cardSeries\r\n          [colors]=\"colors\"\r\n          [data]=\"data\"\r\n          [dims]=\"dims\"\r\n          (clickHandler)=\"click($event)\"\r\n        />\r\n      </svg:g>\r\n    </chart>\r\n  `\r\n})\r\nexport class NumberCard extends BaseChart implements OnChanges {\r\n  dims: ViewDimensions;\r\n  data: any[];\r\n  colors: Function;\r\n  transform: string;\r\n  domain: any[];\r\n\r\n  @Input() view;\r\n  @Input() results;\r\n  @Input() margin = [10, 10, 10, 10];\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    super.update();\r\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false);\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    this.data = gridLayout(this.dims, this.results, 150);\r\n\r\n    this.setColors();\r\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\r\n  }\r\n\r\n  getDomain() {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  setColors() {\r\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"../common/common.module\";\r\nimport {Card} from \"./card.component\";\r\nimport {CardSeries} from \"./card-series.component\";\r\nimport {NumberCard} from \"./number-card.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    Card,\r\n    CardSeries,\r\n    NumberCard\r\n  ],\r\n  exports: [\r\n    Card,\r\n    CardSeries,\r\n    NumberCard\r\n  ]\r\n})\r\nexport class NumberCardModule {}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { colorHelper } from '../utils/color-sets';\r\nimport { BaseChart } from '../common/base-chart.component';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\n\r\nexport interface LegendItem {\r\n  value: number;\r\n  label: string;\r\n  percentage: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'advanced-pie-chart',\r\n  template: `\r\n    <div class=\"advanced-pie chart\"\r\n      [style.width]=\"dims.width\"\r\n      [style.height]=\"view[1]\">\r\n\r\n      <chart\r\n        [colors]=\"colors\"\r\n        [view]=\"[dims.width, dims.height]\">\r\n\r\n        <svg:g\r\n          [attr.transform]=\"transform\"\r\n          class=\"pie chart\">\r\n          <svg:g pieSeries\r\n            [colors]=\"colors\"\r\n            [showLabels]=\"labels\"\r\n            [series]=\"results\"\r\n            [innerRadius]=\"innerRadius\"\r\n            [outerRadius]=\"outerRadius\"\r\n            [gradient]=\"gradient\"\r\n            (clickHandler)=\"click($event)\">\r\n          </svg:g>\r\n        </svg:g>\r\n      </chart>\r\n    </div>\r\n\r\n    <div [style.width]=\"view[0] - dims.width\">\r\n      <div class=\"advanced-pie-legend\"\r\n        [style.margin-top]=\"(view[1] - 215)/2\">\r\n\r\n        <div class=\"total-value\">\r\n          {{roundedTotal}}\r\n        </div>\r\n        <div class=\"total-label\">\r\n          {{totalLabel}}\r\n        </div>\r\n\r\n        <div class=\"legend-items-container\">\r\n          <div class=\"legend-items\">\r\n            <div *ngFor=\"let legendItem of legendItems\" class=\"legend-item\">\r\n              <div class=\"item-color\"\r\n                [style.background]=\"colors(legendItem.label)\">\r\n              </div>\r\n              <div class=\"item-value\">{{legendItem.value}}</div>\r\n              <div class=\"item-label\">{{legendItem.label}}</div>\r\n              <div class=\"item-percent\">{{legendItem.percentage}}%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class AdvancedPieChart extends BaseChart implements OnChanges {\r\n  data: any;\r\n  dims: ViewDimensions;\r\n  domain: any[];\r\n  outerRadius: number;\r\n  innerRadius: number;\r\n  transform: string;\r\n  total: number;\r\n  roundedTotal: number;\r\n  totalLabel: string;\r\n  legendItems: LegendItem;\r\n  colors: Function;\r\n\r\n  @Input() view;\r\n  @Input() results;\r\n  @Input() margin = [20, 20, 20, 20];\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n  @Input() gradient: boolean;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    super.update();\r\n    this.dims = calculateViewDimensions([this.view[0] * 4 / 12.0, this.view[1]], this.margin, false, false, false);\r\n    this.domain = this.getDomain();\r\n    this.setColors();\r\n\r\n    // TODO\r\n    // sort data according to domain\r\n    // this.data = this.results.series[0];\r\n    // this.data.array = this.data.array.sort((a, b) => {\r\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[1]) - this.results.d0Domain.indexOf(b.vals[0].label[1]);\r\n    // });\r\n\r\n    let xOffset = this.margin[3] + this.dims.width / 2;\r\n    let yOffset = this.margin[0] + this.dims.height / 2;\r\n\r\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\r\n    this.innerRadius = this.outerRadius * 0.75;\r\n\r\n    this.transform = `translate(${xOffset} , ${yOffset})`;\r\n\r\n    this.total = this.getTotal();\r\n    this.roundedTotal = Math.round(this.total);\r\n\r\n    this.totalLabel = 'total';\r\n\r\n    this.legendItems = this.getLegendItems();\r\n  }\r\n\r\n  getTotal() {\r\n    return this.results\r\n      .map(d => d.value)\r\n      .reduce((sum, d) => sum + d);\r\n  }\r\n\r\n  getDomain() {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getLegendItems(): LegendItem {\r\n    return this.results.map((d, index) => {\r\n      let label = d.name;\r\n      let value = d.value;\r\n      let percentage = Math.round(value / this.total * 100);\r\n      return {\r\n        value: Math.round(value),\r\n        label: trimLabel(label, 20),\r\n        percentage: percentage\r\n      };\r\n    });\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  setColors() {\r\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n}\r\n","import { Component, Input, ElementRef, OnChanges } from '@angular/core';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[pieLabel]',\r\n  template: `\r\n    <title>{{label}}</title>\r\n    <svg:text\r\n      class=\"label\"\r\n      [attr.transform]=\"transform\"\r\n      dy=\".35em\"\r\n      [style.textAnchor]=\"textAnchor()\"\r\n      [style.shapeRendering]=\"'crispEdges'\"\r\n      [style.textTransform]=\"'uppercase'\">\r\n      {{trimLabel(label)}}\r\n    </svg:text>\r\n    <svg:path\r\n      [attr.d]=\"line\"\r\n      [attr.stroke]=\"color\"\r\n      fill=\"none\"\r\n      class=\"line\"\r\n      [style.strokeDasharray]=\"2000\"\r\n      [style.strokeDashoffset]=\"0\">\r\n    </svg:path>\r\n  `\r\n})\r\nexport class PieLabel implements OnChanges {\r\n  element: HTMLElement;\r\n  trimLabel: Function;\r\n  labelXY: any;\r\n  transform: string;\r\n  line: string;\r\n\r\n  @Input() data;\r\n  @Input() radius;\r\n  @Input() label;\r\n  @Input() color;\r\n  @Input() max;\r\n  @Input() value;\r\n  @Input() explodeSlices;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n    this.trimLabel = trimLabel;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    let factor = 1.5;\r\n\r\n    let outerArc = d3.arc()\r\n      .innerRadius(this.radius * factor)\r\n      .outerRadius(this.radius * factor);\r\n\r\n    let startRadius = this.radius;\r\n    if (this.explodeSlices) {\r\n      startRadius = this.radius * this.value / this.max;\r\n    }\r\n\r\n    let innerArc = d3.arc()\r\n      .innerRadius(startRadius)\r\n      .outerRadius(startRadius);\r\n\r\n    this.labelXY = outerArc.centroid(this.data);\r\n    this.labelXY[0] = this.radius * factor * (this.midAngle(this.data) < Math.PI ? 1 : -1);\r\n    this.labelXY[1] = this.data.pos[1];\r\n\r\n    this.line = `M${innerArc.centroid(this.data)}L${outerArc.centroid(this.data)}L${this.labelXY}`;\r\n    this.transform = `translate(${this.labelXY})`;\r\n\r\n    this.loadAnimation();\r\n  }\r\n\r\n  textAnchor() {\r\n    return this.midAngle(this.data) < Math.PI ? \"start\" : \"end\";\r\n  }\r\n\r\n  midAngle(d) {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n\r\n  loadAnimation() {\r\n    let label = d3.select(this.element).select('.label');\r\n    let line = d3.select(this.element).select('.line');\r\n\r\n    label\r\n      .attr('opacity', 0)\r\n      .transition().delay(750).duration(750)\r\n      .attr('opacity', 1);\r\n\r\n    line\r\n      .style('stroke-dashoffset', 2000)\r\n      .transition().delay(750).duration(750)\r\n      .style('stroke-dashoffset', '0')\r\n      .transition()\r\n      .style('stroke-dasharray', 'none');\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges } from '@angular/core';\r\nimport d3 from '../d3';\r\nimport ObjectId from \"../utils/object-id\";\r\n\r\n@Component({\r\n  selector: 'g[pieArc]',\r\n  template: `\r\n    <svg:g class=\"arc-group\">\r\n      <svg:defs *ngIf=\"gradient\">\r\n        <svg:g svgLinearGradient\r\n          [color]=\"fill\"\r\n          orientation=\"vertical\"\r\n          [name]=\"linearGradientId\"\r\n          [startOpacity]=\"startOpacity\"\r\n        />\r\n        <svg:g svgRadialGradient\r\n          [color]=\"fill\"\r\n          orientation=\"vertical\"\r\n          [name]=\"radialGradientId\"\r\n          [startOpacity]=\"startOpacity\"\r\n        />\r\n      </svg:defs>\r\n      <svg:path\r\n        [attr.d]=\"path\"\r\n        class=\"arc\"\r\n        [style.cursor]=\"'pointer'\"\r\n        [attr.fill]=\"gradient ? gradientFill : fill\"\r\n        (click)=\"click()\"\r\n      />\r\n    </svg:g>\r\n  `\r\n})\r\nexport class PieArc implements OnChanges {\r\n  element: HTMLElement;\r\n  path: any;\r\n  startOpacity: number;\r\n  radialGradientId: string;\r\n  linearGradientId: string;\r\n  gradientFill: string;\r\n  initialized: boolean = false;\r\n\r\n  @Input() fill;\r\n  @Input() startAngle;\r\n  @Input() endAngle;\r\n  @Input() innerRadius;\r\n  @Input() outerRadius;\r\n  @Input() value;\r\n  @Input() total;\r\n  @Input() max;\r\n  @Input() data;\r\n  @Input() explodeSlices;\r\n  @Input() gradient: boolean = false;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    var arc = this.calculateArc();\r\n    this.path = arc.startAngle(this.startAngle).endAngle(this.endAngle)();\r\n    this.startOpacity = 0.3;\r\n\r\n    let pageUrl = window.location.href;\r\n    this.radialGradientId = 'linearGrad' + ObjectId().toString();\r\n    this.linearGradientId = 'radialGrad' + ObjectId().toString();\r\n\r\n    if (this.innerRadius !== 0) {\r\n      this.gradientFill = `url(${pageUrl}#${this.radialGradientId})`;\r\n    } else {\r\n      this.gradientFill = `url(${pageUrl}#${this.linearGradientId})`;\r\n    }\r\n\r\n    if (this.initialized) {\r\n      this.updateAnimation();\r\n    } else {\r\n      this.loadAnimation();\r\n      this.initialized = true;\r\n    }\r\n\r\n  }\r\n\r\n  calculateArc() {\r\n    let outerRadius = this.outerRadius;\r\n    if (this.explodeSlices && this.innerRadius === 0) {\r\n      outerRadius = this.outerRadius * this.value / this.max;\r\n    }\r\n\r\n    return d3.arc()\r\n      .innerRadius(this.innerRadius).outerRadius(outerRadius);\r\n  }\r\n\r\n  loadAnimation() {\r\n    let node = d3.select(this.element).selectAll('.arc').data([{startAngle: this.startAngle, endAngle: this.endAngle}]);\r\n    var arc = this.calculateArc();\r\n\r\n    node\r\n      .transition()\r\n      .attrTween(\"d\", function(d) {\r\n        this._current = this._current || d;\r\n        var copyOfD = Object.assign({}, d);\r\n        copyOfD.endAngle = copyOfD.startAngle;\r\n        var interpolate = d3.interpolate(copyOfD, copyOfD);\r\n        this._current = interpolate(0);\r\n        return function(t) {\r\n          return arc(interpolate(t));\r\n        };\r\n      })\r\n      .transition().duration(750)\r\n      .attrTween(\"d\", function(d) {\r\n        this._current = this._current || d;\r\n        var interpolate = d3.interpolate(this._current, d);\r\n        this._current = interpolate(0);\r\n        return function(t) {\r\n          return arc(interpolate(t));\r\n        };\r\n      });\r\n  }\r\n\r\n  updateAnimation() {\r\n    let node = d3.select(this.element).selectAll('.arc').data([{startAngle: this.startAngle, endAngle: this.endAngle}]);\r\n    var arc = this.calculateArc();\r\n\r\n    node\r\n      .transition().duration(750)\r\n      .attrTween(\"d\", function(d) {\r\n        this._current = this._current || d;\r\n        var interpolate = d3.interpolate(this._current, d);\r\n        this._current = interpolate(0);\r\n        return function(t) {\r\n          return arc(interpolate(t));\r\n        };\r\n      });\r\n  }\r\n\r\n  click() {\r\n    this.clickHandler.emit(this.data);\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\r\nimport { colorHelper } from '../utils/color-sets';\r\nimport { BaseChart } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'pie-chart',\r\n  template: `\r\n    <chart\r\n      [colors]=\"colors\"\r\n      [legend]=\"legend\"\r\n      [view]=\"view\"\r\n      [legendData]=\"domain\">\r\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\r\n        <svg:g pieSeries\r\n          [colors]=\"colors\"\r\n          [showLabels]=\"labels\"\r\n          [series]=\"data\"\r\n          [innerRadius]=\"innerRadius\"\r\n          [outerRadius]=\"outerRadius\"\r\n          [explodeSlices]=\"explodeSlices\"\r\n          [gradient]=\"gradient\"\r\n          (clickHandler)=\"click($event)\"\r\n        />\r\n      </svg:g>\r\n    </chart>\r\n  `\r\n})\r\nexport class PieChart extends BaseChart implements OnChanges {\r\n  outerRadius: number;\r\n  innerRadius: number;\r\n  data: any;\r\n  colors: Function;\r\n  domain: any;\r\n\r\n  @Input() view;\r\n  @Input() results;\r\n  @Input() margin = [20, 20, 20, 20];\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n  @Input() labels = false;\r\n  @Input() legend = false;\r\n  @Input() explodeSlices = false;\r\n  @Input() doughnut = false;\r\n  @Input() gradient: boolean;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  translation: string;\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    super.update();\r\n    let dims = calculateViewDimensions(this.view, this.margin, false, false, this.legend, 9);\r\n    let xOffset = this.margin[3] + dims.width / 2;\r\n    let yOffset = this.margin[0] + dims.height / 2;\r\n    this.translation = `translate(${xOffset}, ${yOffset})`;\r\n    this.outerRadius = Math.min(dims.width, dims.height);\r\n    if (this.labels) {\r\n      // make room for labels\r\n      this.outerRadius /= 3;\r\n    } else {\r\n      this.outerRadius /= 2;\r\n    }\r\n    this.innerRadius = 0;\r\n    if (this.doughnut) {\r\n      this.innerRadius = this.outerRadius * 0.75;\r\n    }\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    // sort data according to domain\r\n    this.data = this.results.sort((a, b) => {\r\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\r\n    });\r\n\r\n    this.setColors();\r\n  }\r\n\r\n  getDomain() {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  setColors() {\r\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { colorHelper } from '../utils/color-sets';\r\nimport { BaseChart } from '../common/base-chart.component';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport { gridLayout } from '../common/grid-layout.helper';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'pie-grid',\r\n  template: `\r\n    <chart\r\n      [legend]=\"false\"\r\n      [view]=\"view\" >\r\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\r\n        <svg:g\r\n          *ngFor=\"let series of series\"\r\n          class=\"pie-grid-item\"\r\n          [attr.transform]=\"series.transform\">\r\n\r\n          <svg:g pieGridSeries\r\n            [colors]=\"series.colors\"\r\n            [data]=\"series.data\"\r\n            [innerRadius]=\"series.innerRadius\"\r\n            [outerRadius]=\"series.outerRadius\"\r\n            (clickHandler)=\"click($event)\"\r\n\r\n            swui-tooltip\r\n            [tooltipPlacement]=\"'top'\"\r\n            [tooltipType]=\"'tooltip'\"\r\n            [tooltipTitle]=\"series.label + ': ' + series.value\" \r\n          />\r\n\r\n          <svg:text\r\n            class=\"label\"\r\n            dy=\"-0.5em\"\r\n            x=\"0\"\r\n            y=\"5\"\r\n            text-anchor=\"middle\">\r\n            {{series.percent}}\r\n          </svg:text>\r\n\r\n          <svg:text\r\n            class=\"label\"\r\n            dy=\"0.5em\"\r\n            x=\"0\"\r\n            y=\"5\"\r\n            text-anchor=\"middle\">\r\n            {{series.label}}\r\n          </svg:text>\r\n\r\n          <svg:text\r\n            class=\"label\"\r\n            dy=\"1.23em\"\r\n            x=\"0\"\r\n            [attr.y]=\"series.outerRadius\"\r\n            text-anchor=\"middle\">\r\n            {{series.total}}\r\n          </svg:text>\r\n\r\n        </svg:g>\r\n      </svg:g>\r\n    </chart>\r\n  `\r\n})\r\nexport class PieGrid extends BaseChart implements OnChanges {\r\n  dims: ViewDimensions;\r\n  data: any[];\r\n  transform: string;\r\n  series: any[];\r\n  domain: any[];\r\n  colorScale: Function;\r\n  margin = [20, 20, 20, 20];\r\n\r\n  @Input() view;\r\n  @Input() results;\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    super.update();\r\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false);\r\n    this.domain = this.getDomain();\r\n\r\n    this.data = gridLayout(this.dims, this.results, 150);\r\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\r\n\r\n    this.series = this.getSeries();\r\n    this.setColors();\r\n  }\r\n\r\n  getDomain() {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getSeries() {\r\n    let total = this.getTotal();\r\n    return this.data.map((d) => {\r\n      let label = d.data.name;\r\n      let value = d.data.value;\r\n      let radius = d3.min([d.width, d.height]) / 2.1;\r\n      let innerRadius = radius * 0.75;\r\n\r\n      let count = 0;\r\n\r\n      let colors = () => {\r\n        count += 1;\r\n        if (count === 1) {\r\n          return 'rgba(100,100,100,0.3)';\r\n        } else {\r\n          return this.colorScale(label);\r\n        }\r\n      };\r\n\r\n      return {\r\n        transform: `translate(${d.x + d.width / 2} , ${d.y + d.height / 2})`,\r\n        colors: colors,\r\n        innerRadius: innerRadius,\r\n        outerRadius: radius,\r\n        label: trimLabel(label),\r\n        total: `Total: ${d3.format(\".2f\")(value)}`,\r\n        value: value,\r\n        percent: d3.format(\".1p\")(d.data.percent),\r\n        data: [d, {\r\n          data: {\r\n            other: true,\r\n            value: total - value,\r\n            name: d.data.name\r\n          }\r\n        }]\r\n      };\r\n    });\r\n  }\r\n\r\n  getTotal() {\r\n    return this.results\r\n      .map(d => d.value)\r\n      .reduce((sum, d) => sum + d);\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  setColors() {\r\n    this.colorScale = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges } from '@angular/core';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[pieGridSeries]',\r\n  template: `\r\n    <svg:g class=\"pie-grid-arcs\">\r\n      <svg:path *ngFor=\"let arc of arcs; trackBy:trackBy\"\r\n        [attr.class]=\"arc.class\"\r\n        [attr.d]=\"arc.d\"\r\n        [style.cursor]=\"arc.cursor\"\r\n        [style.opacity]=\"arc.opacity\"\r\n        [attr.fill]=\"arc.fill\"\r\n        (click)=\"click(arc.data)\"\r\n      />\r\n    </svg:g>\r\n  `\r\n})\r\nexport class PieGridSeries implements OnChanges {\r\n  element: HTMLElement;\r\n  layout: any;\r\n  arcs: any;\r\n\r\n  @Input() colors;\r\n  @Input() data;\r\n  @Input() innerRadius = 60;\r\n  @Input() outerRadius = 80;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.layout = d3.pie()\r\n      .value((d) => d.data.value).sort(null);\r\n\r\n    this.arcs = this.getArcs();\r\n\r\n    this.loadAnimation();\r\n  }\r\n\r\n  getArcs() {\r\n    return this.layout(this.data).map((arc, index) => {\r\n      let label = arc.data.data.name;\r\n      let other = arc.data.data.other;\r\n\r\n      if (index === 0) {\r\n        arc.startAngle = 0;\r\n      }\r\n      let genArcPath: any = d3.arc()\r\n        .innerRadius(this.innerRadius).outerRadius(this.outerRadius)\r\n        .startAngle(arc.startAngle).endAngle(arc.endAngle);\r\n\r\n        let color = this.colors(label);\r\n        color = this.colors(label);\r\n      return {\r\n        data: arc.data.data,\r\n        class: 'arc ' + 'arc' + index,\r\n        d: genArcPath(),\r\n        cursor: other ? 'auto' : 'pointer',\r\n        fill: color,\r\n        opacity: other ? 0.4 : 1\r\n      };\r\n    });\r\n  }\r\n\r\n  loadAnimation() {\r\n    let layout = d3.pie()\r\n      .value((d) => d.data.value).sort(null);\r\n    let data = layout(this.data);\r\n\r\n    let node = d3.select(this.element).selectAll('.arc1').data([{\r\n      startAngle: data[0].startAngle,\r\n      endAngle: data[0].endAngle\r\n    }]);\r\n    var arc = this.calculateArc(this.innerRadius, this.outerRadius);\r\n\r\n    node\r\n      .transition()\r\n      .attrTween(\"d\", function(d) {\r\n        this._current = this._current || d;\r\n        var copyOfD = Object.assign({}, d);\r\n        copyOfD.endAngle = copyOfD.startAngle;\r\n        var interpolate = d3.interpolate(copyOfD, copyOfD);\r\n        this._current = interpolate(0);\r\n        return function(t) {\r\n          return arc(interpolate(t));\r\n        };\r\n      })\r\n      .transition().duration(750)\r\n      .attrTween(\"d\", function(d) {\r\n        this._current = this._current || d;\r\n        var interpolate = d3.interpolate(this._current, d);\r\n        this._current = interpolate(0);\r\n        return function(t) {\r\n          return arc(interpolate(t));\r\n        };\r\n      });\r\n  }\r\n\r\n  calculateArc(innerRadius, outerRadius) {\r\n    return d3.arc()\r\n      .innerRadius(innerRadius).outerRadius(outerRadius);\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit({\r\n      name: this.data[0].data.name,\r\n      value: this.data[0].data.value\r\n    });\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.data.name;\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[pieSeries]',\r\n  template: `\r\n    <svg:g *ngFor=\"let arc of data; trackBy:trackBy\">\r\n      <svg:g pieLabel\r\n        *ngIf=\"labelVisible(arc)\"\r\n        [data]=\"arc\"\r\n        [radius]=\"outerRadius\"\r\n        [color]=\"color(arc)\"\r\n        [label]=\"label(arc)\"\r\n        [max]=\"max\"\r\n        [value]=\"arc.value\"\r\n        [explodeSlices]=\"explodeSlices\">\r\n      </svg:g>\r\n\r\n      <svg:g pieArc\r\n        [startAngle]=\"arc.startAngle\"\r\n        [endAngle]=\"arc.endAngle\"\r\n        [innerRadius]=\"innerRadius\"\r\n        [outerRadius]=\"outerRadius\"\r\n        [fill]=\"color(arc)\"\r\n        [total]=\"total\"\r\n        [value]=\"arc.data.value\"\r\n        [data]=\"arc.data\"\r\n        [max]=\"max\"\r\n        [explodeSlices]=\"explodeSlices\"\r\n        (clickHandler)=\"click($event)\"\r\n        [gradient]=\"gradient\"\r\n        \r\n        swui-tooltip\r\n        [tooltipPlacement]=\"'top'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipTitle]=\"tooltipText(arc)\">\r\n      </svg:g>\r\n\r\n    </svg:g>\r\n  `\r\n})\r\nexport class PieSeries implements OnChanges {\r\n  total: number;\r\n  max: number;\r\n  data: any;\r\n\r\n  @Input() colors;\r\n  @Input() series: any = [];\r\n  @Input() dims;\r\n  @Input() innerRadius = 60;\r\n  @Input() outerRadius = 80;\r\n  @Input() explodeSlices;\r\n  @Input() showLabels;\r\n  @Input() gradient: boolean;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    let pie: any = d3.pie()\r\n      .value((d) => d.value)\r\n      .sort(null);\r\n\r\n    this.total = this.getTotal();\r\n\r\n    let arcData = pie(this.series);\r\n\r\n    this.max = d3.max(arcData, (d) => {\r\n      return d.value;\r\n    });\r\n\r\n    this.data = this.calculateLabelPositions(arcData);\r\n  }\r\n\r\n  getTotal() {\r\n    return this.series\r\n      .map(d => d.value)\r\n      .reduce((sum, val) => { return sum + val; } );\r\n  }\r\n\r\n  midAngle(d) {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n\r\n  outerArc() {\r\n    let factor = 1.5;\r\n    return d3.arc()\r\n      .innerRadius(this.outerRadius * factor)\r\n      .outerRadius(this.outerRadius * factor);\r\n  }\r\n\r\n  calculateLabelPositions(pieData) {\r\n    var minDistance = 10;\r\n    var chart = this;\r\n    var labelPositions = pieData;\r\n\r\n    labelPositions.forEach(function(d) {\r\n      d.pos = chart.outerArc().centroid(d);\r\n      d.pos[0] = chart.outerRadius * (chart.midAngle(d) < Math.PI ? 1 : -1);\r\n    });\r\n\r\n    for (var i = 0; i < labelPositions.length - 1; i++) {\r\n      var a = labelPositions[i];\r\n\r\n      for (var j = i + 1; j < labelPositions.length; j++) {\r\n        var b = labelPositions[j];\r\n        // if they're on the same side\r\n        if (b.pos[0] * a.pos[0] > 0) {\r\n          // if they're overlapping\r\n          if (Math.abs(b.pos[1] - a.pos[1]) <= minDistance) {\r\n            // push the second one down\r\n            labelPositions[j].pos[1] = b.pos[1] + minDistance;\r\n            j--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return labelPositions;\r\n  }\r\n\r\n  labelVisible(arc) {\r\n    return this.showLabels && (arc.endAngle - arc.startAngle > Math.PI / 30);\r\n  }\r\n\r\n  label(arc) {\r\n    return arc.data.name;\r\n  }\r\n\r\n  tooltipText(arc) {\r\n    return `${this.label(arc)}: ${arc.data.value}`;\r\n  }\r\n\r\n  color(arc) {\r\n    return this.colors(this.label(arc));\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.data.name;\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"../common/common.module\";\r\nimport {AdvancedPieChart} from \"./advanced-pie-chart.component\";\r\nimport {PieLabel} from \"./pie-label.component\";\r\nimport {PieArc} from \"./pie-arc.component\";\r\nimport {PieChart} from \"./pie-chart.component\";\r\nimport {PieGrid} from \"./pie-grid.component\";\r\nimport {PieGridSeries} from \"./pie-grid-series.component\";\r\nimport {PieSeries} from \"./pie-series.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    AdvancedPieChart,\r\n    PieLabel,\r\n    PieArc,\r\n    PieChart,\r\n    PieGrid,\r\n    PieGridSeries,\r\n    PieSeries\r\n  ],\r\n  exports: [\r\n    AdvancedPieChart,\r\n    PieLabel,\r\n    PieArc,\r\n    PieChart,\r\n    PieGrid,\r\n    PieGridSeries,\r\n    PieSeries\r\n  ]\r\n})\r\nexport class PieChartModule {}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges } from '@angular/core';\r\n// import { formatNumber } from 'common/utils/format';\r\nimport d3 from '../d3';\r\n\r\n@Component({\r\n  selector: 'g[treeMapCell]',\r\n  template: `\r\n    <svg:g>\r\n      <svg:rect\r\n        [attr.fill]=\"fill\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        [style.cursor]=\"'pointer'\"\r\n        class=\"cell\"\r\n        (click)=\"click()\"\r\n      />\r\n\r\n      <svg:foreignObject\r\n        *ngIf=\"width >= 70 && height >= 35\"\r\n        [attr.x]=\"x\"\r\n        [attr.y]=\"y\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        class=\"label\"\r\n        [style.pointer-events]=\"'none'\">\r\n        <xhtml:p\r\n          [style.height]=\"height + 'px'\"\r\n          [style.width]=\"width + 'px'\">\r\n          {{label}}\r\n          <xhtml:br/>\r\n          {{formattedValue}}\r\n        </xhtml:p>\r\n      </svg:foreignObject>\r\n    </svg:g>\r\n  `\r\n})\r\nexport class TreeMapCell implements OnChanges {\r\n  element: HTMLElement;\r\n  transform: string;\r\n  formattedValue: string; // todo check string or number ?\r\n  initialized: boolean = false;\r\n\r\n  @Input() fill;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() label;\r\n  @Input() value;\r\n  @Input() valueType;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n\r\n  }\r\n\r\n  update() {\r\n    // this.transform = `translate(${this.x} , ${this.y})`;\r\n    // todo fix this by adding props\r\n    // this.formattedValue = formatNumber(props.value, props.valueType);\r\n\r\n    this.formattedValue = this.value;\r\n    if (this.initialized) {\r\n      this.animateToCurrentForm();\r\n    } else {\r\n      this.loadAnimation();\r\n      this.initialized = true;\r\n    }\r\n\r\n  }\r\n\r\n  loadAnimation() {\r\n    let node = d3.select(this.element).select('.cell');\r\n\r\n    node\r\n      .attr('opacity', 0)\r\n      .attr('x', this.x)\r\n      .attr('y', this.y);\r\n\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  animateToCurrentForm() {\r\n    let node = d3.select(this.element).select('.cell');\r\n\r\n    node.transition().duration(750)\r\n      .attr('opacity', 1)\r\n      .attr('x', this.x)\r\n      .attr('y', this.y)\r\n      .attr('width', this.width)\r\n      .attr('height', this.height);\r\n  }\r\n\r\n  click() {\r\n    this.clickHandler.emit({\r\n      name: this.label,\r\n      value: this.value\r\n    });\r\n  }\r\n}\r\n","import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[treeMapCellSeries]',\r\n  template: `\r\n    <svg:g treeMapCell *ngFor=\"let c of cells; trackBy:trackBy\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [fill]=\"c.fill\"\r\n      [label]=\"c.label\"\r\n      [value]=\"c.value\"\r\n      [valueType]=\"c.valueType\"\r\n      (clickHandler)=\"click($event)\"\r\n\r\n      swui-tooltip\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"c.tooltipText\"\r\n    />\r\n  `\r\n})\r\nexport class TreeMapCellSeries implements OnChanges {\r\n  cells: any[];\r\n  @Input() data;\r\n  @Input() dims;\r\n  @Input() colors;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  ngOnChanges() {\r\n    this.cells = this.getCells();\r\n  }\r\n\r\n  getCells() {\r\n    return this.data.children\r\n      .filter((d) => {\r\n        return d.depth === 1;\r\n      })\r\n      .map((d, index) => {\r\n        return {\r\n          x: d.x0,\r\n          y: d.y0,\r\n          width: d.x1 - d.x0,\r\n          height: d.y1 - d.y0,\r\n          fill: this.colors(d.id),\r\n          label: d.id,\r\n          value: d.value,\r\n          valueType: d.valueType,\r\n          tooltipText: `${d.id}: ${d.value}`\r\n        };\r\n      });\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.label;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\nimport d3 from '../d3';\r\nimport { BaseChart } from '../common/base-chart.component';\r\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\r\nimport { colorHelper } from '../utils/color-sets';\r\n\r\n@Component({\r\n  selector: 'tree-map',\r\n  template: `\r\n    <chart\r\n      [legend]=\"false\"\r\n      [view]=\"view\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\r\n        <svg:g treeMapCellSeries\r\n          [colors]=\"colors\"\r\n          [data]=\"data\"\r\n          [dims]=\"dims\"\r\n          (clickHandler)=\"click($event)\"\r\n        />\r\n      </svg:g>\r\n    </chart>\r\n  `\r\n})\r\nexport class TreeMap extends BaseChart implements OnChanges {\r\n  margin = [10, 10, 10, 10];\r\n\r\n  @Input() view;\r\n  @Input() results;\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n\r\n  @Output() clickHandler = new EventEmitter();\r\n\r\n  dims: any;\r\n  domain: any;\r\n  transform: any;\r\n  colors: any;\r\n  treemap: any;\r\n  data: any;\r\n\r\n  ngOnChanges() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false, 12);\r\n    this.domain = this.getDomain();\r\n\r\n    this.treemap = d3.treemap()\r\n      .size([this.dims.width, this.dims.height]);\r\n\r\n    let rootNode = {\r\n      name: 'root',\r\n      value: 0,\r\n      isRoot: true\r\n    };\r\n\r\n    let root = d3.stratify()\r\n      .id(d => d.name)\r\n      .parentId(d => { return d.isRoot ? null : 'root'; })\r\n      ([rootNode, ...this.results])\r\n      .sum(d => d.value);\r\n\r\n    this.data = this.treemap(root);\r\n\r\n    this.setColors();\r\n\r\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\r\n  }\r\n\r\n  getDomain() {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  click(data) {\r\n    this.clickHandler.emit(data);\r\n  }\r\n\r\n  setColors() {\r\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"../common/common.module\";\r\nimport {TreeMapCell} from \"./tree-map-cell.component\";\r\nimport {TreeMapCellSeries} from \"./tree-map-cell-series.component\";\r\nimport {TreeMap} from \"./tree-map.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    TreeMapCell,\r\n    TreeMapCellSeries,\r\n    TreeMap\r\n  ],\r\n  exports: [\r\n    TreeMapCell,\r\n    TreeMapCellSeries,\r\n    TreeMap\r\n  ]\r\n})\r\nexport class TreeMapModule {}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"./common/common.module\";\r\nimport {AreaChartModule} from \"./area-chart/area-chart.module\";\r\nimport {BarChartModule} from \"./bar-chart/bar-chart.module\";\r\nimport {HeatMapModule} from \"./heat-map/heat-map.module\";\r\nimport {LineChartModule} from \"./line-chart/line-chart.module\";\r\nimport {NumberCardModule} from \"./number-card/number-card.module\";\r\nimport {PieChartModule} from \"./pie-chart/pie-chart.module\";\r\nimport {TreeMapModule} from \"./tree-map/tree-map.module\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    CommonModule,\r\n    AreaChartModule,\r\n    BarChartModule,\r\n    HeatMapModule,\r\n    LineChartModule,\r\n    NumberCardModule,\r\n    PieChartModule,\r\n    TreeMapModule\r\n  ]\r\n})\r\nexport class NG2D3Module {}\r\n"],"names":["CommonModule","Ng2CommonModule"],"mappings":"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"}